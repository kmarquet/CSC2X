===Title
Platform-Based Development

===Intro
Platform-based development is concerned with the design and development of software
applications that reside on specific software platforms. In contrast to general purpose
programming, platform-based development takes into account platform-specific constraints. For
instance web programming, multimedia development, mobile computing, app development, and
robotics are examples of relevant platforms that provide specific services/APIs/hardware that
constrain development. Such platforms are characterized by the use of specialized APIs, distinct
delivery/update mechanisms, and being abstracted away from the machine level. Platform-based
development may be applied over a wide breadth of ecosystems.
While we recognize that some platforms (e.g., web development) are prominent, we are also
cognizant of the fact that no particular platform should be specified as a requirement in the
CS2013 curricular guidelines. Consequently, this Knowledge Area highlights many of the
platforms that have become popular, without including any such platform in the core curriculum.
We note that the general skill of developing with respect to an API or a constrained environment
is covered in other Knowledge Areas, such as Software Development Fundamentals (SDF).
Platform-based development further emphasizes such general skills within the context of
particular platforms.

=====Introduction
==Intro
This knowledge unit describes the fundamental differences that Platform-Based Development
has over traditional software development.

==Topics
Overview of platforms (e.g., Web, Mobile, Game, Industrial)
Programming via platform-specific APIs
Overview of Platform Languages (e.g., Objective C, HTML5)
Programming under platform constraints

==Skills
Describe how platform-based development differs from general purpose programming. [Familiarity]
List characteristics of platform languages. [Familiarity]
Write and execute a simple platform-based program. [Usage]
List the advantages and disadvantages of programming with platform constraints. [Familiarity]

=====Web Platforms
==Intro
==Topics
Web programming languages (e.g., HTML5, Java Script, PHP, CSS)
Web platform constraints
Software as a Service (SaaS)
Web standards

==Skills
Design and Implement a simple web application. [Usage]
Describe the constraints that the web puts on developers. [Familiarity]
Compare and contrast web programming with general purpose programming. [Assessment]
Describe the differences between Software-as-a-Service and traditional software products. [Familiarity]
Discuss how web standards impact software development. [Familiarity]
Review an existing web application against a current web standard. [Assessment]

=====Mobile Platforms
==Intro

==Topics
Mobile programming languages
Challenges with mobility and wireless communication
Location-aware applications
Performance / power tradeoffs
Mobile platform constraints
Emerging technologies

==Skills
Design and implement a mobile application for a given mobile platform. [Usage]
Discuss the constraints that mobile platforms put on developers. [Familiarity]
Discuss the performance vs. power tradeoff. [Familiarity]
Compare and contrast mobile programming with general purpose programming. [Assessment]

=====Industrial Platforms
==Intro
This knowledge unit is related to IS/Robotics.
==Topics
Types of Industrial Platforms (e.g., Mathematic, Robotic, Industrial Control)
Robotic software and its architecture
Domain-specific languages
Industrial platform constraints

==Skills
Design and implement an industrial application on a given platform (e.g., using Lego Mindstorms or
Matlab). [Usage]
Compare and contrast domain specific languages with general purpose programming languages.
[Assessment]
Discuss the constraints that a given industrial platforms impose on developers. [Familiarity]

=====Game Platforms
==Intro
==Topics
Types of game platforms (e.g., XBox, Wii, PlayStation)
Game platform languages (e.g., C++, Java, Lua, Python)
Game platform constraints

==Skills
Design and implement a simple application on a game platform. [Usage]
Describe the constraints that game platforms impose on developers. [Familiarity]
Compare and contrast game programming with general purpose programming. [Assessment]
