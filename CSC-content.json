[{"abbrev": "AL",
  "title": "Algorithms and Complexity",
  "intro": "Algorithms are fundamental to computer science and software engineering. The real-world performance of any software system depends on: (1) the algorithms chosen and (2) the suitability and efficiency of the various layers of implementation. Good algorithm design is therefore crucial for the performance of all software systems. Moreover, the study of algorithms provides insight into the intrinsic nature of the problem as well as possible solution techniques independent of programming language, programming paradigm, computer hardware, or any other implementation aspect. An important part of computing is the ability to select algorithms appropriate to particular purposes and to apply them, recognizing the possibility that no suitable algorithm may exist. This facility relies on understanding the range of algorithms that address an important set of well- defined problems, recognizing their strengths and weaknesses, and their suitability in particular contexts. Efficiency is a pervasive theme throughout this area. This knowledge area defines the central concepts and skills required to design, implement, and analyze algorithms for solving problems. Algorithms are essential in all advanced areas of computer science: artificial intelligence, databases, distributed computing, graphics, networking, operating systems, programming languages, security, and so on. Algorithms that have specific utility in each of these are listed in the relevant knowledge areas. Cryptography, for example, appears in the new Knowledge Area on Information Assurance and Security (IAS), while parallel and distributed algorithms appear the Knowledge Area in Parallel and Distributed Computing (PD). As with all knowledge areas, the order of topics and their groupings do not necessarily correlate to a specific order of presentation. Different programs will teach the topics in different courses and should do so in the order they believe is most appropriate for their students. ",
  "units": [
      {"title": "Basic Analysis",
       "intro": "",
       "topics": [
         { "content": "Differences among best, expected, and worst case behaviors of an algorithm",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Asymptotic analysis of upper and expected complexity bounds",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Big O notation: formal definition",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Complexity classes, such as constant, logarithmic, linear, quadratic, and exponential",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Empirical measurements of performance",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Time and space trade-offs in algorithms",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Big O notation: use",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Little o, big omega and big theta notation",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Recurrence relations",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Analysis of iterative and recursive algorithms",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Some version of a Master Theorem",
           "num": "10",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain what is meant by “best”, “expected”, and “worst” case behavior of an algorithm. [Familiarity]Explain what is meant by “best”, “expected”, and “worst” case behavior of an algorithm. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "In the context of specific algorithms, identify the characteristics of data and/or other conditions or assumptions that lead to different behaviors. [Assessment]In the context of specific algorithms, identify the characteristics of data and/or other conditions or assumptions that lead to different behaviors. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Determine informally the time and space complexity of simple algorithms. [Usage]Determine informally the time and space complexity of simple algorithms. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "State the formal definition of big O. [Familiarity]State the formal definition of big O. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "List and contrast standard complexity classes. [Familiarity]List and contrast standard complexity classes. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Perform empirical studies to validate hypotheses about runtime stemming from mathematical analysis.Perform empirical studies to validate hypotheses about runtime stemming from mathematical analysis.Run algorithms on input of various sizes and compare performance. [Assessment]Run algorithms on input of various sizes and compare performance. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Give examples that illustrate time-space trade-offs of algorithms. [Familiarity]Give examples that illustrate time-space trade-offs of algorithms. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Use big O notation formally to give asymptotic upper bounds on time and space complexity of algorithms.Use big O notation formally to give asymptotic upper bounds on time and space complexity of algorithms.[Usage]",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Use big O notation formally to give expected case bounds on time complexity of algorithms. [Usage]Use big O notation formally to give expected case bounds on time complexity of algorithms. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "Explain the use of big omega, big theta, and little o notation to describe the amount of work done by an algorithm. [Familiarity]Explain the use of big omega, big theta, and little o notation to describe the amount of work done by an algorithm. ",
           "mastery": "No",
           "num": "9"
         },
         {"content": "Use recurrence relations to determine the time complexity of recursively defined algorithms. [Usage]Use recurrence relations to determine the time complexity of recursively defined algorithms. ",
           "mastery": "No",
           "num": "10"
         },
         {"content": "Solve elementary recurrence relations, e.g., using some form of a Master Theorem. [Usage]Solve elementary recurrence relations, e.g., using some form of a Master Theorem. ",
           "mastery": "No",
           "num": "11"
         }
      ]}
      ,
      {"title": "Algorithmic Strategies",
       "intro": "An instructor might choose to cover these algorithmic strategies in the context of the algorithms presented in “Fundamental Data Structures and Algorithms” below. While the total number of hours for the two knowledge units (18) could be divided differently between them, our sense is that the 1:2 ratio is reasonable. ",
       "topics": [
         { "content": "Brute-force algorithms",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Greedy algorithms",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Divide-and-conquer (",
           "num": "2",
           "addressed": "No"
,
           "xrefs": " {SDF_Algorithms}{SDF/Algorithms}{Design/Problem-solving strategies})"         },
         { "content": "Recursive backtracking",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Dynamic Programming",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Branch-and-bound",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Heuristics",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Reduction: transform-and-conquer",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "For each of the strategies (brute-force, greedy, divide-and-conquer, recursive backtracking, and dynamicFor each of the strategies (brute-force, greedy, divide-and-conquer, recursive backtracking, and dynamicprogramming), identify a practical example to which it would apply. [Familiarity]programming), identify a practical example to which it would apply. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Use a greedy approach to solve an appropriate problem and determine if the greedy rule chosen leads to anUse a greedy approach to solve an appropriate problem and determine if the greedy rule chosen leads to anoptimal solution. [Assessment]optimal solution. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Use a divide-and-conquer algorithm to solve an appropriate problem. [Usage]Use a divide-and-conquer algorithm to solve an appropriate problem. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Use recursive backtracking to solve a problem such as navigating a maze. [Usage]Use recursive backtracking to solve a problem such as navigating a maze. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Use dynamic programming to solve an appropriate problem. [Usage]Use dynamic programming to solve an appropriate problem. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Determine an appropriate algorithmic approach to a problem. [Assessment]Determine an appropriate algorithmic approach to a problem. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Describe various heuristic problem-solving methods. [Familiarity]Describe various heuristic problem-solving methods. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Use a heuristic approach to solve an appropriate problem. [Usage]Use a heuristic approach to solve an appropriate problem. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Describe the trade-offs between brute force and heuristic strategies. [Assessment]Describe the trade-offs between brute force and heuristic strategies. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "Describe how a branch-and-bound approach may be used to improve the performance of a heuristicDescribe how a branch-and-bound approach may be used to improve the performance of a heuristicmethod. [Familiarity]method. ",
           "mastery": "No",
           "num": "9"
         }
      ]}
      ,
      {"title": "Fundamental Data Structures and Algorithms",
       "intro": "This knowledge unit builds directly on the foundation provided by Software Development Fundamentals (SDF), particularly the material in SDF/Fundamental Data Structures and SDF/Algorithms and Design. ",
       "topics": [
         { "content": "Simple numerical algorithms, such as computing the average of a list of numbers, finding the min, max, and mode in a list, approximating the square root of a number, or finding the greatest common divisor",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Sequential and binary search algorithms",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Worst case quadratic sorting algorithms (selection, insertion)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Worst or average case O(N log N) sorting algorithms (quicksort, heapsort, mergesort)",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Hash tables, including strategies for avoiding and resolving collisions",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Binary search trees",
           "num": "5",
           "subtopics": [         { "content": "Common operations on binary search trees such as select min, max, insert, delete, iterate over tree",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Graphs and graph algorithms",
           "num": "6",
           "subtopics": [         { "content": "Representations of graphs (e.g., adjacency list, adjacency matrix)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Depth- and breadth-first traversals",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Shortest-path algorithms (Dijkstra’s and Floyd’s algorithms)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Minimum spanning tree (Prim’s and Kruskal’s algorithms)",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Heaps",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Pattern matching and string/text algorithms (e.g., substring matching, regular expression matching, longest common subsequence algorithms)",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Implement basic numerical algorithms. [Usage]Implement basic numerical algorithms. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "2. Implement simple search algorithms and explain the differences in their time complexities. [Assessment]2. Implement simple search algorithms and explain the differences in their time complexities. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "3. Be able to implement common quadratic and O(N log N) sorting algorithms. [Usage]3. Be able to implement common quadratic and O(N log N) sorting algorithms. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "4. Describe the implementation of hash tables, including collision avoidance and resolution. [Familiarity]4. Describe the implementation of hash tables, including collision avoidance and resolution. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "5. Discuss the runtime and memory efficiency of principal algorithms for sorting, searching, and hashing.5. Discuss the runtime and memory efficiency of principal algorithms for sorting, searching, and hashing.[Familiarity]",
           "mastery": "No",
           "num": "4"
         },
         {"content": "6. Discuss factors other than computational efficiency that influence the choice of algorithms, such as6. Discuss factors other than computational efficiency that influence the choice of algorithms, such asprogramming time, maintainability, and the use of application-specific patterns in the input data.programming time, maintainability, and the use of application-specific patterns in the input data.[Familiarity]",
           "mastery": "No",
           "num": "5"
         },
         {"content": "7. Explain how tree balance affects the efficiency of various binary search tree operations. [Familiarity]7. Explain how tree balance affects the efficiency of various binary search tree operations. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "8. Solve problems using fundamental graph algorithms, including depth-first and breadth-first search. [Usage]8. Solve problems using fundamental graph algorithms, including depth-first and breadth-first search. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Demonstrate the ability to evaluate algorithms, to select from a range of possible options, to provideDemonstrate the ability to evaluate algorithms, to select from a range of possible options, to providejustification for that selection, and to implement the algorithm in a particular context. [Assessment]justification for that selection, and to implement the algorithm in a particular context. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "10. Describe the heap property and the use of heaps as an implementation of priority queues. [Familiarity]10. Describe the heap property and the use of heaps as an implementation of priority queues. ",
           "mastery": "No",
           "num": "9"
         },
         {"content": "11. Solve problems using graph algorithms, including single-source and all-pairs shortest paths, and at least11. Solve problems using graph algorithms, including single-source and all-pairs shortest paths, and at leastone minimum spanning tree algorithm. [Usage]one minimum spanning tree algorithm. ",
           "mastery": "No",
           "num": "10"
         },
         {"content": "12. Trace and/or implement a string-matching algorithm. [Usage]12. Trace and/or implement a string-matching algorithm. ",
           "mastery": "No",
           "num": "11"
         }
      ]}
      ,
      {"title": "Basic Automata Computability and Complexity",
       "intro": "",
       "topics": [
         { "content": "Finite-state machines",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Regular expressions",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "The halting problem",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Context-free grammars (",
           "num": "3",
           "addressed": "No"
,
           "xrefs": " {PL_Syntax_Analysis}{PL/Syntax Analysis})"         },
         { "content": "Introduction to the P and NP classes and the P vs. NP problem",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Introduction to the NP-complete class and exemplary NP-complete problems (e.g., SAT, Knapsack)",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Discuss the concept of finite state machines. [Familiarity]Discuss the concept of finite state machines. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Design a deterministic finite state machine to accept a specified language. [Usage]Design a deterministic finite state machine to accept a specified language. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Generate a regular expression to represent a specified language. [Usage]Generate a regular expression to represent a specified language. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Explain why the halting problem has no algorithmic solution. [Familiarity]Explain why the halting problem has no algorithmic solution. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Design a context-free grammar to represent a specified language. [Usage]Design a context-free grammar to represent a specified language. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Define the classes P and NP. [Familiarity]Define the classes P and NP. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Explain the significance of NP-completeness. [Familiarity]Explain the significance of NP-completeness. ",
           "mastery": "No",
           "num": "6"
         }
      ]}
      ,
      {"title": "Advanced Computational Complexity",
       "intro": "Many programs will want their students to have exposure to more advanced algorithms or methods of analysis. Below is a selection of possible advanced topics that are current and timely but by no means exhaustive. ",
       "topics": [
         { "content": "Review of the classes P and NP; introduce P-space and EXP",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Polynomial hierarchy",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "NP-completeness (Cook’s theorem)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Classic NP-complete problems",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Reduction Techniques",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Define the classes P and NP. (Also appears in AL/Basic Automata, Computability, and Complexity).Define the classes P and NP. (Also appears in AL/Basic Automata, Computability, and Complexity).[Familiarity]",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Define the P-space class and its relation to the EXP class. [Familiarity]Define the P-space class and its relation to the EXP class. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Explain the significance of NP-completeness. (Also appears in AL/Basic Automata, Computability, andExplain the significance of NP-completeness. (Also appears in AL/Basic Automata, Computability, andComplexity). [Familiarity]Complexity). ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Provide examples of classic NP-complete problems. [Familiarity]Provide examples of classic NP-complete problems. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Prove that a problem is NP-complete by reducing a classic known NP-complete problem to it. [Usage]Prove that a problem is NP-complete by reducing a classic known NP-complete problem to it. ",
           "mastery": "No",
           "num": "4"
         }
      ]}
      ,
      {"title": "Advanced Automata Theory and Computability",
       "intro": "",
       "topics": [
         { "content": "Sets and languages",
           "num": "0",
           "subtopics": [         { "content": "Regular languages",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Review of deterministic finite automata (DFAs)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Nondeterministic finite automata (NFAs)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Equivalence of DFAs and NFAs",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Review of regular expressions; their equivalence to finite automata",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Closure properties",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Proving languages non-regular, via the pumping lemma or alternative means",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Context-free languages",
           "num": "1",
           "subtopics": [         { "content": "Push-down automata (PDAs)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Relationship of PDAs and context-free grammars",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Properties of context-free languages",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Turing machines, or an equivalent formal model of universal computation",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Nondeterministic Turing machines",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Chomsky hierarchy",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "The Church-Turing thesis",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Computability",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Rice’s Theorem",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Examples of uncomputable functions",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Implications of uncomputability",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Determine a language’s place in the Chomsky hierarchy (regular, context-free, recursively enumerable).Determine a language’s place in the Chomsky hierarchy (regular, context-free, recursively enumerable).[Assessment]",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Convert among equivalently powerful notations for a language, including among DFAs, NFAs, and regularConvert among equivalently powerful notations for a language, including among DFAs, NFAs, and regularexpressions, and between PDAs and CFGs. [Usage]expressions, and between PDAs and CFGs. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Explain the Church-Turing thesis and its significance. [Familiarity]Explain the Church-Turing thesis and its significance. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Explain Rice’s Theorem and its significance. [Familiarity]Explain Rice’s Theorem and its significance. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Provide examples of uncomputable functions. [Familiarity]Provide examples of uncomputable functions. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Prove that a problem is uncomputable by reducing a classic known uncomputable problem to it. [Usage]Prove that a problem is uncomputable by reducing a classic known uncomputable problem to it. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Advanced Data Structures Algorithms and Analysis",
       "intro": "",
       "topics": [
         { "content": "Balanced trees (e.g., AVL trees, red-black trees, splay trees, treaps)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Graphs (e.g., topological sort, finding strongly connected components, matching)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Advanced data structures (e.g., B-trees, Fibonacci heaps)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "String-based data structures and algorithms (e.g., suffix arrays, suffix trees, tries)",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Network flows (e.g., max flow [Ford-Fulkerson algorithm], max flow – min cut, maximum bipartite",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "matching)",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Linear Programming (e.g., duality, simplex method, interior point algorithms)",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Number-theoretic algorithms (e.g., modular arithmetic, primality testing, integer factorization)",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Geometric algorithms (e.g., points, line segments, polygons. [properties, intersections], finding convex hull,",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "spatial decomposition, collision detection, geometric search/proximity)",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Randomized algorithms",
           "num": "10",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Stochastic algorithms",
           "num": "11",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Approximation algorithms",
           "num": "12",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Amortized analysis",
           "num": "13",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Probabilistic analysis",
           "num": "14",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Online algorithms and competitive analysis",
           "num": "15",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Understand the mapping of real-world problems to algorithmic solutions (e.g., as graph problems, linearUnderstand the mapping of real-world problems to algorithmic solutions (e.g., as graph problems, linearprograms, etc.). [Assessment]programs, etc.). ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Select and apply advanced algorithmic techniques (e.g., randomization, approximation) to solve realSelect and apply advanced algorithmic techniques (e.g., randomization, approximation) to solve realproblems. [Assessment]problems. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Select and apply advanced analysis techniques (e.g., amortized, probabilistic, etc.) to algorithms.Select and apply advanced analysis techniques (e.g., amortized, probabilistic, etc.) to algorithms.[Assessment]",
           "mastery": "No",
           "num": "2"
         }
      ]}
]},
{"abbrev": "DS",
  "title": "Discrete Structures",
  "intro": "Discrete structures are foundational material for computer science. By foundational we mean that relatively few computer scientists will be working primarily on discrete structures, but that many other areas of computer science require the ability to work with concepts from discrete structures. Discrete structures include important material from such areas as set theory, logic, graph theory, and probability theory. The material in discrete structures is pervasive in the areas of data structures and algorithms but appears elsewhere in computer science as well. For example, an ability to create and understand a proof—either a formal symbolic proof or a less formal but still mathematically rigorous argument—is important in virtually every area of computer science, including (to name just a few) formal specification, verification, databases, and cryptography. Graph theory concepts are used in networks, operating systems, and compilers. Set theory concepts are used in software engineering and in databases. Probability theory is used in intelligent systems, networking, and a number of computing applications. Given that discrete structures serves as a foundation for many other areas in computing, it is worth noting that the boundary between discrete structures and other areas, particularly Algorithms and Complexity, Software Development Fundamentals, Programming Languages, and Intelligent Systems, may not always be crisp. Indeed, different institutions may choose to organize the courses in which they cover this material in very different ways. Some institutions may cover these topics in one or two focused courses with titles like \"discrete structures\" or \"discrete mathematics,\" whereas others may integrate these topics in courses on programming, algorithms, and/or artificial intelligence. Combinations of these approaches are also prevalent (e.g., covering many of these topics in a single focused introductory course and covering the remaining topics in more advanced topical courses). ",
  "units": [
      {"title": "Sets, Relations, and Functions",
       "intro": "",
       "topics": [
         { "content": "Sets",
           "num": "0",
           "subtopics": [         { "content": "Venn diagrams",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Union, intersection, complement",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Cartesian product",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Power sets",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Cardinality of finite sets",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Relations",
           "num": "1",
           "subtopics": [         { "content": "Reflexivity, symmetry, transitivity",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Equivalence relations, partial orders",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Functions",
           "num": "2",
           "subtopics": [         { "content": "Surjections, injections, bijections",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Inverses",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Composition",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain with examples the basic terminology of functions, relations, and sets. [Familiarity]Explain with examples the basic terminology of functions, relations, and sets. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Perform the operations associated with sets, functions, and relations. [Usage]Perform the operations associated with sets, functions, and relations. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Relate practical examples to the appropriate set, function, or relation model, and interpret the associatedRelate practical examples to the appropriate set, function, or relation model, and interpret the associatedoperations and terminology in context. [Assessment]operations and terminology in context. ",
           "mastery": "No",
           "num": "2"
         }
      ]}
      ,
      {"title": "Basic Logic",
       "intro": "",
       "topics": [
         { "content": "Propositional logic (",
           "num": "0",
           "addressed": "No"
,
           "xrefs": " {IS_Knowledge_Based_Reasoning}{IS/Knowledge Based Reasoning})"         },
         { "content": "Logical connectives",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Truth tables",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Normal forms (conjunctive and disjunctive)",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Validity of well-formed formula",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Propositional inference rules (concepts of modus ponens and modus tollens)",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Predicate logic",
           "num": "6",
           "subtopics": [         { "content": "Universal and existential quantification",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Limitations of propositional and predicate logic (e.g., expressiveness issues)",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Convert logical statements from informal language to propositional and predicate logic expressions.Convert logical statements from informal language to propositional and predicate logic expressions.[Usage]",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Apply formal methods of symbolic propositional and predicate logic, such as calculating validity ofApply formal methods of symbolic propositional and predicate logic, such as calculating validity offormulae and computing normal forms. [Usage]formulae and computing normal forms. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Use the rules of inference to construct proofs in propositional and predicate logic. [Usage]Use the rules of inference to construct proofs in propositional and predicate logic. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe how symbolic logic can be used to model real-life situations or applications, including thoseDescribe how symbolic logic can be used to model real-life situations or applications, including thosearising in computing contexts such as software analysis (e.g., program correctness), database queries, andarising in computing contexts such as software analysis (e.g., program correctness), database queries, andalgorithms. [Usage]algorithms. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Apply formal logic proofs and/or informal, but rigorous, logical reasoning to real problems, such asApply formal logic proofs and/or informal, but rigorous, logical reasoning to real problems, such aspredicting the behavior of software or solving problems such as puzzles. [Usage]predicting the behavior of software or solving problems such as puzzles. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Describe the strengths and limitations of propositional and predicate logic. [Familiarity]Describe the strengths and limitations of propositional and predicate logic. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Proof Techniques",
       "intro": "",
       "topics": [
         { "content": "Notions of implication, equivalence, converse, inverse, contrapositive, negation, and contradiction",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "The structure of mathematical proofs",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Direct proofs",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Disproving by counterexample",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Proof by contradiction",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Induction over natural numbers",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Structural induction",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Weak and strong induction (i.e., First and Second Principle of Induction)",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Recursive mathematical definitions",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Well orderings",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Identify the proof technique used in a given proof. [Familiarity]Identify the proof technique used in a given proof. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Outline the basic structure of each proof technique (direct proof, proof by contradiction, and induction)Outline the basic structure of each proof technique (direct proof, proof by contradiction, and induction)described in this unit. [Usage]described in this unit. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Apply each of the proof techniques (direct proof, proof by contradiction, and induction) correctly in theApply each of the proof techniques (direct proof, proof by contradiction, and induction) correctly in theconstruction of a sound argument. [Usage]construction of a sound argument. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Determine which type of proof is best for a given problem. [Assessment]Determine which type of proof is best for a given problem. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Explain the parallels between ideas of mathematical and/or structural induction to recursion and recursivelyExplain the parallels between ideas of mathematical and/or structural induction to recursion and recursivelydefined structures. [Assessment]defined structures. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Explain the relationship between weak and strong induction and give examples of the appropriate use ofExplain the relationship between weak and strong induction and give examples of the appropriate use ofeach. [Assessment]each. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "State the well-ordering principle and its relationship to mathematical induction. [Familiarity]State the well-ordering principle and its relationship to mathematical induction. ",
           "mastery": "No",
           "num": "6"
         }
      ]}
      ,
      {"title": "Basics of Counting",
       "intro": "",
       "topics": [
         { "content": "Counting arguments",
           "num": "0",
           "subtopics": [         { "content": "Set cardinality and counting",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Sum and product rule",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Inclusion-exclusion principle",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Arithmetic and geometric progressions",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "The pigeonhole principle",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Permutations and combinations",
           "num": "2",
           "subtopics": [         { "content": "Basic definitions",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Pascal’s identity",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "The binomial theorem",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Solving recurrence relations (",
           "num": "3",
           "subtopics": [         { "content": "An example of a simple recurrence relation, such as Fibonacci numbers",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Other examples, showing a variety of solutions",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": " {AL_Basic_Analysis}{AL/Basic Analysis})"         },
         { "content": "Basic modular arithmetic",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Apply counting arguments, including sum and product rules, inclusion-exclusion principle andApply counting arguments, including sum and product rules, inclusion-exclusion principle andarithmetic/geometric progressions. [Usage]arithmetic/geometric progressions. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Apply the pigeonhole principle in the context of a formal proof. [Usage]Apply the pigeonhole principle in the context of a formal proof. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Compute permutations and combinations of a set, and interpret the meaning in the context of the particularCompute permutations and combinations of a set, and interpret the meaning in the context of the particularapplication. [Usage]application. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Map real-world applications to appropriate counting formalisms, such as determining the number of waysMap real-world applications to appropriate counting formalisms, such as determining the number of waysto arrange people around a table, subject to constraints on the seating arrangement, or the number of waysto arrange people around a table, subject to constraints on the seating arrangement, or the number of waysto determine certain hands in cards (e.g., a full house). [Usage]to determine certain hands in cards (e.g., a full house). ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Solve a variety of basic recurrence relations. [Usage]Solve a variety of basic recurrence relations. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Analyze a problem to determine underlying recurrence relations. [Usage]Analyze a problem to determine underlying recurrence relations. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Perform computations involving modular arithmetic. [Usage]Perform computations involving modular arithmetic. ",
           "mastery": "No",
           "num": "6"
         }
      ]}
      ,
      {"title": "Graphs and Trees",
       "intro": "cross-reference {AL/Fundamental Data Structures and Algorithms}, especially with relation to graph traversal strategies. ",
       "topics": [
         { "content": "Trees",
           "num": "0",
           "subtopics": [         { "content": "Properties",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Traversal strategies",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Undirected graphs",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Directed graphs",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Weighted graphs",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Spanning trees/forests",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Graph isomorphism",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Illustrate by example the basic terminology of graph theory, as well as some of the properties and specialIllustrate by example the basic terminology of graph theory, as well as some of the properties and specialcases of each type of graph/tree. [Familiarity]cases of each type of graph/tree. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Demonstrate different traversal methods for trees and graphs, including pre-, post-, and in-order traversal ofDemonstrate different traversal methods for trees and graphs, including pre-, post-, and in-order traversal oftrees. [Usage]trees. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Model a variety of real-world problems in computer science using appropriate forms of graphs and trees,Model a variety of real-world problems in computer science using appropriate forms of graphs and trees,such as representing a network topology or the organization of a hierarchical file system. [Usage]such as representing a network topology or the organization of a hierarchical file system. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Show how concepts from graphs and trees appear in data structures, algorithms, proof techniques (structural induction), and counting. [Usage]Show how concepts from graphs and trees appear in data structures, algorithms, proof techniques (structural induction), and counting. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Explain how to construct a spanning tree of a graph. [Usage]Explain how to construct a spanning tree of a graph. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Determine if two graphs are isomorphic. [Usage]Determine if two graphs are isomorphic. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Discrete Probability",
       "intro": "",
       "topics": [
         { "content": "Finite probability space, events",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Axioms of probability and probability measures",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Conditional probability, Bayes’ theorem",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Independence",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Integer random variables (Bernoulli, binomial)",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Expectation, including Linearity of Expectation",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Variance",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Conditional Independence",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Calculate probabilities of events and expectations of random variables for elementary problems such asCalculate probabilities of events and expectations of random variables for elementary problems such asgames of chance. [Usage]games of chance. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Differentiate between dependent and independent events. [Usage]Differentiate between dependent and independent events. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Identify a case of the binomial distribution and compute a probability using that distribution. [Usage]Identify a case of the binomial distribution and compute a probability using that distribution. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Apply Bayes theorem to determine conditional probabilities in a problem. [Usage]Apply Bayes theorem to determine conditional probabilities in a problem. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Apply the tools of probability to solve problems such as the average case analysis of algorithms orApply the tools of probability to solve problems such as the average case analysis of algorithms oranalyzing hashing. [Usage]analyzing hashing. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Compute the variance for a given probability distribution. [Usage]Compute the variance for a given probability distribution. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Explain how events that are independent can be conditionally dependent (and vice-versa). Identify real-Explain how events that are independent can be conditionally dependent (and vice-versa). Identify real-world examples of such cases. [Usage]world examples of such cases. ",
           "mastery": "No",
           "num": "6"
         }
      ]}
]},
{"abbrev": "PD",
  "title": "Parallel and Distributed Computing",
  "intro": "The past decade has brought explosive growth in multiprocessor computing, including multi-core processors and distributed data centers. As a result, parallel and distributed computing has moved from a largely elective topic to become more of a core component of undergraduate computing curricula. Both parallel and distributed computing entail the logically simultaneous execution of multiple processes, whose operations have the potential to interleave in complex ways. Parallel and distributed computing builds on foundations in many areas, including an understanding of fundamental systems concepts such as concurrency and parallel execution, consistency in state/memory manipulation, and latency. Communication and coordination among processes is rooted in the message-passing and shared-memory models of computing and such algorithmic concepts as atomicity, consensus, and conditional waiting. Achieving speedup in practice requires an understanding of parallel algorithms, strategies for problem decomposition, system architecture, detailed implementation strategies, and performance analysis and tuning. Distributed systems highlight the problems of security and fault tolerance, emphasize the maintenance of replicated state, and introduce additional issues that bridge to computer networking. Because parallelism interacts with so many areas of computing, including at least algorithms, languages, systems, networking, and hardware, many curricula will put different parts of the knowledge area in different courses, rather than in a dedicated course. While we acknowledge that computer science is moving in this direction and may reach that point, in 2013 this process is still in flux and we feel it provides more useful guidance to curriculum designers to aggregate the fundamental parallelism topics in one place. Note, however, that the fundamentals of concurrency and mutual exclusion appear in the Systems Fundamentals (SF) Knowledge Area. Many curricula may choose to introduce parallelism and concurrency in the same course (see below for the distinction intended by these terms). Further, we note that the topics and learning outcomes listed below include only brief mentions of purely elective coverage. At the present time, there is too much diversity in topics that share little in common (including for example, parallel scientific computing, process calculi, and non-blocking data structures) to recommend particular topics be covered in elective courses. Because the terminology of parallel and distributed computing varies among communities, we provide here brief descriptions of the intended senses of a few terms. This list is not exhaustive or definitive, but is provided for the sake of clarity. • Parallelism: Using additional computational resources simultaneously, usually for speedup. • Concurrency: Efficiently and correctly managing concurrent access to resources. • Activity: A computation that may proceed concurrently with others; for example a program, process, thread, or active parallel hardware component. • Atomicity: Rules and properties governing whether an action is observationally indivisible; for example, setting all of the bits in a word, transmitting a single packet, or completing a transaction. • Consensus: Agreement among two or more activities about a given predicate; for example, the value of a counter, the owner of a lock, or the termination of a thread. • Consistency: Rules and properties governing agreement about the values of variables written, or messages produced, by some activities and used by others (thus possibly exhibiting a data race); for example, sequential consistency, stating that the values of all variables in a shared memory parallel program are equivalent to that of a single program performing some interleaving of the memory accesses of these activities. • Multicast: A message sent to possibly many recipients, generally without any constraints about whether some recipients receive the message before others. An event is a multicast message sent to a designated set of listeners or subscribers. As multi-processor computing continues to grow in the coming years, so too will the role of parallel and distributed computing in undergraduate computing curricula. In addition to the guidelines presented here, we also direct the interested reader to the document entitled \"NSF/TCPP Curriculum Initiative on Parallel and Distributed Computing - Core Topics for Undergraduates\", available from the website: http://www.cs.gsu.edu/~tcpp/curriculum/. General cross-referencing note: Systems Fundamentals also contains an introduction to parallelism (SF/Computational Paradigms, SF/System Support for Parallelism, SF/Performance). The introduction to parallelism in SF complements the one here and there is no ordering constraint between them. In SF, the idea is to provide a unified view of the system support for simultaneous execution at multiple levels of abstraction (parallelism is inherent in gates, processors, operating systems, and servers), whereas here the focus is on a preliminary understanding of parallelism as a computing primitive and the complications that arise in parallel and concurrent programming. Given these different perspectives, the hours assigned to each are not redundant: the layered systems view and the high-level computing concepts are accounted for separately in terms of the core hours. ",
  "units": [
      {"title": "Parallelism Fundamentals",
       "intro": "Build upon students’ familiarity with the notion of basic parallel execution—a concept addressed in Systems Fundamentals—to delve into the complicating issues that stem from this notion, such as race conditions and liveness. cross-reference {SF/Computational Paradigms} and {SF/System Support for Parallelism}. ",
       "topics": [
         { "content": "Multiple simultaneous computations",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Goals of parallelism (e.g., throughput) versus concurrency (e.g., controlling access to shared resources)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Parallelism, communication, and coordination",
           "num": "2",
           "subtopics": [         { "content": "Programming constructs for coordinating multiple simultaneous computations",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Need for synchronization",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Programming errors not found in sequential programming",
           "num": "3",
           "subtopics": [         { "content": "Data races (simultaneous read/write or write/write of shared state)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Higher-level races (interleavings violating program intention, undesired non-determinism)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Lack of liveness/progress (deadlock, starvation)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Distinguish using computational resources for a faster answer from managing efficient access to a sharedDistinguish using computational resources for a faster answer from managing efficient access to a sharedresource. (cross-reference {GV/Fundamental Concepts}, outcome 5.) [Familiarity]resource. (cross-reference {GV/Fundamental Concepts}, outcome 5.) ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Distinguish multiple sufficient programming constructs for synchronization that may be inter-Distinguish multiple sufficient programming constructs for synchronization that may be inter-implementable but have complementary advantages. [Familiarity]implementable but have complementary advantages. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Distinguish data races from higher level races. [Familiarity]Distinguish data races from higher level races. ",
           "mastery": "No",
           "num": "2"
         }
      ]}
      ,
      {"title": "Parallel Decomposition",
       "intro": "cross-reference {SF/System Support for Parallelism} ",
       "topics": [
         { "content": "Need for communication and coordination/synchronization",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Independence and partitioning",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Basic knowledge of parallel decomposition concepts (",
           "num": "2",
           "addressed": "No"
,
           "xrefs": " {SF_System_Support_for_Parallelism}{SF/System Support for Parallelism})"         },
         { "content": "Task-based decomposition",
           "num": "3",
           "subtopics": [         { "content": "Implementation strategies such as threads",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Data-parallel decomposition",
           "num": "4",
           "subtopics": [         { "content": "Strategies such as SIMD and MapReduce",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Actors and reactive processes (e.g., request handlers)",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain why synchronization is necessary in a specific parallel program. [Usage]Explain why synchronization is necessary in a specific parallel program. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Identify opportunities to partition a serial program into independent parallel modules. [Familiarity]Identify opportunities to partition a serial program into independent parallel modules. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Write a correct and scalable parallel algorithm. [Usage]Write a correct and scalable parallel algorithm. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Parallelize an algorithm by applying task-based decomposition. [Usage]Parallelize an algorithm by applying task-based decomposition. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Parallelize an algorithm by applying data-parallel decomposition. [Usage]Parallelize an algorithm by applying data-parallel decomposition. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Write a program using actors and/or reactive processes. [Usage]Write a program using actors and/or reactive processes. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Communication and Coordination",
       "intro": "cross-reference {OS/Concurrency}/mechanism implementation issues. ",
       "topics": [
         { "content": "Shared Memory",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Consistency, and its role in programming language guarantees for data-race-free programs",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Message passing",
           "num": "2",
           "subtopics": [         { "content": "Point-to-point versus multicast (or event-based) messages",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Blocking versus non-blocking styles for sending and receiving messages",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Message buffering (",
           "num": "2",
           "addressed": "No"
,
           "xrefs": " {PF_Fundamental_Data_Structures}{PF/Fundamental Data Structures}/Queues)"         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Atomicity",
           "num": "3",
           "subtopics": [         { "content": "Specifying and testing atomicity and safety requirements",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Granularity of atomic accesses and updates, and the use of constructs such as critical sections or transactions to describe them",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Mutual Exclusion using locks, semaphores, monitors, or related constructs. Potential for liveness failures and deadlock (causes, conditions, prevention)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Composition (Composing larger granularity atomic actions using synchronization ; Transactions, including optimistic and conservative approaches)",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Consensus",
           "num": "4",
           "subtopics": [         { "content": "(Cyclic) barriers, counters, or related constructs",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Conditional actions",
           "num": "5",
           "subtopics": [         { "content": "Conditional waiting (e.g., using condition variables)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Use mutual exclusion to avoid a given race condition. [Usage]Use mutual exclusion to avoid a given race condition. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Give an example of an ordering of accesses among concurrent activities (e.g., program with a data race)Give an example of an ordering of accesses among concurrent activities (e.g., program with a data race)that is not sequentially consistent. [Familiarity]that is not sequentially consistent. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Give an example of a scenario in which blocking message sends can deadlock. [Usage]Give an example of a scenario in which blocking message sends can deadlock. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Explain when and why multicast or event-based messaging can be preferable to alternatives. [Familiarity]Explain when and why multicast or event-based messaging can be preferable to alternatives. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Write a program that correctly terminates when all of a set of concurrent tasks have completed. [Usage]Write a program that correctly terminates when all of a set of concurrent tasks have completed. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Use a properly synchronized queue to buffer data passed among activities. [Usage]Use a properly synchronized queue to buffer data passed among activities. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Explain why checks for preconditions, and actions based on these checks, must share the same unit ofExplain why checks for preconditions, and actions based on these checks, must share the same unit ofatomicity to be effective. [Familiarity]atomicity to be effective. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "8. Write a test program that can reveal a concurrent programming error; for example, missing an update when8. Write a test program that can reveal a concurrent programming error; for example, missing an update whentwo activities both try to increment a variable. [Usage]two activities both try to increment a variable. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "9. Describe at least one design technique for avoiding liveness failures in programs using multiple locks or9. Describe at least one design technique for avoiding liveness failures in programs using multiple locks orsemaphores. [Familiarity]semaphores. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "10. Describe the relative merits of optimistic versus conservative concurrency control under different rates of10. Describe the relative merits of optimistic versus conservative concurrency control under different rates ofcontention among updates. [Familiarity]contention among updates. ",
           "mastery": "No",
           "num": "9"
         },
         {"content": "11. Give an example of a scenario in which an attempted optimistic update may never complete. [Familiarity]11. Give an example of a scenario in which an attempted optimistic update may never complete. ",
           "mastery": "No",
           "num": "10"
         },
         {"content": "12. Use semaphores or condition variables to block threads until a necessary precondition holds. [Usage]12. Use semaphores or condition variables to block threads until a necessary precondition holds. ",
           "mastery": "No",
           "num": "11"
         }
      ]}
      ,
      {"title": "Parallel Algorithms, Analysis, and Programming",
       "intro": "",
       "topics": [
         { "content": "Critical paths, work and span, and the relation to Amdahl’s law (",
           "num": "0",
           "addressed": "No"
,
           "xrefs": " {SF_Performance}{SF/Performance})"         },
         { "content": "Speed-up and scalability",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Naturally (embarrassingly) parallel algorithms",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Parallel algorithmic patterns (divide-and-conquer, map and reduce, master-workers, others)",
           "num": "3",
           "subtopics": [         { "content": "Specific algorithms (e.g., parallel MergeSort)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Parallel graph algorithms (e.g., parallel shortest path, parallel spanning tree) (",
           "num": "4",
           "addressed": "No"
,
           "xrefs": " {AL/Algorithmic Strategies/Divide-and-conquer})"         },
         { "content": "Parallel matrix computations",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Producer-consumer and pipelined algorithms",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Examples of non-scalable parallel algorithms",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Define “critical path”, “work”, and “span”. [Familiarity]Define “critical path”, “work”, and “span”. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Compute the work and span, and determine the critical path with respect to a parallel execution diagram.Compute the work and span, and determine the critical path with respect to a parallel execution diagram.[Usage]",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Define “speed-up” and explain the notion of an algorithm’s scalability in this regard. [Familiarity]Define “speed-up” and explain the notion of an algorithm’s scalability in this regard. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Identify independent tasks in a program that may be parallelized. [Usage]Identify independent tasks in a program that may be parallelized. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Characterize features of a workload that allow or prevent it from being naturally parallelized. [Familiarity]Characterize features of a workload that allow or prevent it from being naturally parallelized. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Implement a parallel divide-and-conquer (and/or graph algorithm) and empirically measure its performanceImplement a parallel divide-and-conquer (and/or graph algorithm) and empirically measure its performancerelative to its sequential analog. [Usage]relative to its sequential analog. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Decompose a problem (e.g., counting the number of occurrences of some word in a document) via map andDecompose a problem (e.g., counting the number of occurrences of some word in a document) via map andreduce operations. [Usage]reduce operations. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Provide an example of a problem that fits the producer-consumer paradigm. [Familiarity]Provide an example of a problem that fits the producer-consumer paradigm. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Give examples of problems where pipelining would be an effective means of parallelization. [Familiarity]Give examples of problems where pipelining would be an effective means of parallelization. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "Implement a parallel matrix algorithm. [Usage]Implement a parallel matrix algorithm. ",
           "mastery": "No",
           "num": "9"
         },
         {"content": "Identify issues that arise in producer-consumer algorithms and mechanisms that may be used for addressingIdentify issues that arise in producer-consumer algorithms and mechanisms that may be used for addressingthem. [Familiarity]them. ",
           "mastery": "No",
           "num": "10"
         }
      ]}
      ,
      {"title": "Parallel Architecture",
       "intro": "The topics listed here are related to knowledge units in the Architecture and Organization (AR) knowledge area (AR/Assembly Level Machine Organization and AR/Multiprocessing and Alternative Architectures). Here, we focus on parallel architecture from the standpoint of applications, whereas the Architecture and Organization knowledge area presents the topic from the hardware perspective. ",
       "topics": [
         { "content": "Multicore processors",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Shared vs. distributed memory",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Symmetric multiprocessing (SMP)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "SIMD, vector processing",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "GPU, co-processing",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Flynn’s taxonomy",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Instruction level support for parallel programming",
           "num": "6",
           "subtopics": [         { "content": "Atomic instructions such as Compare and Set",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Memory issues",
           "num": "7",
           "subtopics": [         { "content": "Multiprocessor caches and cache coherence",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Non-uniform memory access (NUMA)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Topologies",
           "num": "8",
           "subtopics": [         { "content": "Interconnects",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Clusters",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Resource sharing (e.g., buses and interconnects)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain the differences between shared and distributed memory. [Familiarity]Explain the differences between shared and distributed memory. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe the SMP architecture and note its key features. [Familiarity]Describe the SMP architecture and note its key features. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Characterize the kinds of tasks that are a natural match for SIMD machines. [Familiarity]Characterize the kinds of tasks that are a natural match for SIMD machines. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe the advantages and limitations of GPUs vs. CPUs. [Familiarity]Describe the advantages and limitations of GPUs vs. CPUs. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Explain the features of each classification in Flynn’s taxonomy. [Familiarity]Explain the features of each classification in Flynn’s taxonomy. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Describe assembly-level support for atomic operations. [Familiarity]Describe assembly-level support for atomic operations. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Describe the challenges in maintaining cache coherence. [Familiarity]Describe the challenges in maintaining cache coherence. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Describe the key performance challenges in different memory and distributed system topologies.Describe the key performance challenges in different memory and distributed system topologies.[Familiarity]",
           "mastery": "No",
           "num": "7"
         }
      ]}
      ,
      {"title": "Parallel Performance",
       "intro": "",
       "topics": [
         { "content": "Load balancing",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Performance measurement",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Scheduling and contention (",
           "num": "2",
           "addressed": "No"
,
           "xrefs": " {OS_Scheduling_and_Dispatch}{OS/Scheduling and Dispatch})"         },
         { "content": "Evaluating communication overhead",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Data management",
           "num": "4",
           "subtopics": [         { "content": "Non-uniform communication costs due to proximity (",
           "num": "0",
           "addressed": "No"
,
           "xrefs": " {SF_Proximity}{SF/Proximity})"         }, 
         { "content": "Cache effects (e.g., false sharing)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Maintaining spatial locality",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Power usage and management",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Detect and correct a load imbalance. [Usage]Detect and correct a load imbalance. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Calculate the implications of Amdahl’s law for a particular parallel algorithm (cross-reference {SF/Evaluation for Amdahl’s Law}). [Usage]Calculate the implications of Amdahl’s law for a particular parallel algorithm (cross-reference {SF/Evaluation for Amdahl’s Law}). ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe how data distribution/layout can affect an algorithm’s communication costs. [Familiarity]Describe how data distribution/layout can affect an algorithm’s communication costs. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Detect and correct an instance of false sharing. [Usage]Detect and correct an instance of false sharing. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Explain the impact of scheduling on parallel performance. [Familiarity]Explain the impact of scheduling on parallel performance. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Explain performance impacts of data locality. [Familiarity]Explain performance impacts of data locality. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Explain the impact and trade-off related to power usage on parallel performance. [Familiarity]Explain the impact and trade-off related to power usage on parallel performance. ",
           "mastery": "No",
           "num": "6"
         }
      ]}
      ,
      {"title": "Distributed Systems",
       "intro": "",
       "topics": [
         { "content": "Faults (",
           "num": "0",
           "subtopics": [         { "content": "Network-based (including partitions) and node-based failures",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Impact on system-wide guarantees (e.g., availability)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": " {OS_Fault_Tolerance}{OS/Fault Tolerance})"         },
         { "content": "Distributed message sending",
           "num": "1",
           "subtopics": [         { "content": "Data conversion and transmission",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Sockets",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Message sequencing",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Buffering, retrying, and dropping messages",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Distributed system design tradeoffs",
           "num": "2",
           "subtopics": [         { "content": "Latency versus throughput",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Consistency, availability, partition tolerance",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Distributed service design",
           "num": "3",
           "subtopics": [         { "content": "Stateful versus stateless protocols and services",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Session (connection-based) designs",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Reactive (IO-triggered) and multithreaded designs",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Core distributed algorithms",
           "num": "4",
           "subtopics": [         { "content": "Election, discovery",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Distinguish network faults from other kinds of failures. [Familiarity]Distinguish network faults from other kinds of failures. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain why synchronization constructs such as simple locks are not useful in the presence of distributedExplain why synchronization constructs such as simple locks are not useful in the presence of distributedfaults. [Familiarity]faults. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Write a program that performs any required marshaling and conversion into message units, such as packets,Write a program that performs any required marshaling and conversion into message units, such as packets,to communicate interesting data between two hosts. [Usage]to communicate interesting data between two hosts. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Measure the observed throughput and response latency across hosts in a given network. [Usage]Measure the observed throughput and response latency across hosts in a given network. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Explain why no distributed system can be simultaneously consistent, available, and partition tolerant.Explain why no distributed system can be simultaneously consistent, available, and partition tolerant.[Familiarity]",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Implement a simple server -- for example, a spell checking service. [Usage]Implement a simple server -- for example, a spell checking service. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Explain the tradeoffs among overhead, scalability, and fault tolerance when choosing a stateful v. statelessExplain the tradeoffs among overhead, scalability, and fault tolerance when choosing a stateful v. statelessdesign for a given service. [Familiarity]design for a given service. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Describe the scalability challenges associated with a service growing to accommodate many clients, as wellDescribe the scalability challenges associated with a service growing to accommodate many clients, as wellas those associated with a service only transiently having many clients. [Familiarity]as those associated with a service only transiently having many clients. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Give examples of problems for which consensus algorithms such as leader election are required. [Usage]Give examples of problems for which consensus algorithms such as leader election are required. ",
           "mastery": "No",
           "num": "8"
         }
      ]}
      ,
      {"title": "Cloud Computing",
       "intro": "",
       "topics": [
         { "content": "Internet-Scale computing",
           "num": "0",
           "subtopics": [         { "content": "Task partitioning (",
           "num": "0",
           "addressed": "No"
,
           "xrefs": " {PD_Parallel_Algorithms,_Analysis,_and_Programming}{PD/Parallel Algorithms, Analysis, and Programming})"         }, 
         { "content": "Data access",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Clusters, grids, and meshes",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Cloud services",
           "num": "1",
           "subtopics": [         { "content": "Infrastructure as a service (Elasticity of resources ; Platform APIs)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Software as a service",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Security",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Cost management",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Virtualization (",
           "num": "2",
           "subtopics": [         { "content": "Shared resource management",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Migration of processes",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": " {SF_Virtualization_and_Isolation}{SF/Virtualization and Isolation} and {OS_Virtual_Machines}{OS/Virtual Machines})"         },
         { "content": "Cloud-based data storage",
           "num": "3",
           "subtopics": [         { "content": "Shared access to weakly consistent data stores",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Data synchronization",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Data partitioning",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Distributed file systems (",
           "num": "3",
           "addressed": "No"
,
           "xrefs": " {IM_Distributed_Databases}{IM/Distributed Databases})"         }, 
         { "content": "Replication",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Discuss the importance of elasticity and resource management in cloud computing. [Familiarity]Discuss the importance of elasticity and resource management in cloud computing. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain strategies to synchronize a common view of shared data across a collection of devices.Explain strategies to synchronize a common view of shared data across a collection of devices.[Familiarity]",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Explain the advantages and disadvantages of using virtualized infrastructure. [Familiarity]Explain the advantages and disadvantages of using virtualized infrastructure. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Deploy an application that uses cloud infrastructure for computing and/or data resources. [Usage]Deploy an application that uses cloud infrastructure for computing and/or data resources. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Appropriately partition an application between a client and resources. [Usage]Appropriately partition an application between a client and resources. ",
           "mastery": "No",
           "num": "4"
         }
      ]}
      ,
      {"title": "Formal Models and Semantics",
       "intro": "",
       "topics": [
         { "content": "Formal models of processes and message passing, including algebras such as Communicating Sequential Processes (CSP) and pi-calculus",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Formal models of parallel computation, including the Parallel Random Access Machine (PRAM) and alternatives such as Bulk Synchronous Parallel (BSP)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Formal models of computational dependencies",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Models of (relaxed) shared memory consistency and their relation to programming language specifications",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Algorithmic correctness criteria including linearizability",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Models of algorithmic progress, including non-blocking guarantees and fairness",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Techniques for specifying and checking correctness properties such as atomicity and freedom from data races",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Model a concurrent process using a formal model, such as pi-calculus. [Usage]Model a concurrent process using a formal model, such as pi-calculus. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain the characteristics of a particular formal parallel model. [Familiarity]Explain the characteristics of a particular formal parallel model. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Formally model a shared memory system to show if it is consistent. [Usage]Formally model a shared memory system to show if it is consistent. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Use a model to show progress guarantees in a parallel algorithm. [Usage]Use a model to show progress guarantees in a parallel algorithm. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Use formal techniques to show that a parallel algorithm is correct with respect to a safety or livenessUse formal techniques to show that a parallel algorithm is correct with respect to a safety or livenessproperty. [Usage]property. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Decide if a specific execution is linearizable or not. [Usage]Decide if a specific execution is linearizable or not. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
]},
{"abbrev": "IAS",
  "title": "Information Assurance and Security",
  "intro": "In CS2013, the Information Assurance and Security KA is added to the Body of Knowledge in recognition of the world’s reliance on information technology and its critical role in computer science education. Information assurance and security as a domain is the set of controls and processes both technical and policy intended to protect and defend information and information systems by ensuring their confidentiality, integrity, and availability, and by providing for authentication and non-repudiation. The concept of assurance also carries an attestation that current and past processes and data are valid. Both assurance and security concepts are needed to ensure a complete perspective. Information assurance and security education, then, includes all efforts to prepare a workforce with the needed knowledge, skills, and abilities to protect our information systems and attest to the assurance of the past and current state of processes and data. The importance of security concepts and topics has emerged as a core requirement in the Computer Science discipline, much like the importance of performance concepts has been for many years. The Information Assurance and Security KA is unique among the set of KAs presented here given the manner in which the topics are pervasive throughout other Knowledge Areas. The topics germane to only IAS are presented in the IAS section; other topics are noted and cross- referenced in the IAS KA. In the IAS KA the many topics are represented with only 9 hours of Core-Tier1 and Tier2 coverage. This is balanced with the level of mastery primarily at the familiarity level and the more indepth coverage distributed in the referenced KAs where they are applied. The broad application of the IAS KA concepts (63.5 hours) across all other KAs provides the depth of coverage and mastery for an undergraduate computer science student. The IAS KA is shown in two groups: (1) concepts where the depth is unique to Information Assurance and Security and (2) IAS topics that are integrated into other KAs that reflect naturally implied or specified topics with a strong role in security concepts and topics. For completeness, the total distribution of hours is summarized in the table below. ",
  "units": [
      {"title": "Foundational Concepts in Security",
       "intro": "",
       "topics": [
         { "content": "CIA (Confidentiality, Integrity, Availability)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Concepts of risk, threats, vulnerabilities, and attack vectors (cros- reference SE/Software Project Management/Risk)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Authentication and authorization, access control (mandatory vs. discretionary)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Concept of trust and trustworthiness",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Ethics (responsible disclosure).",
           "num": "4",
           "addressed": "No"
,
           "xrefs": " {SP_Professional_Ethics}{SP/Professional Ethics}: accountability, responsibility and liability"         }
      ],
      "skills": [
         {"content": "Analyze the tradeoffs of balancing key security properties (Confidentiality, Integrity, and Availability).Analyze the tradeoffs of balancing key security properties (Confidentiality, Integrity, and Availability).[Usage]",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe the concepts of risk, threats, vulnerabilities and attack vectors (including the fact that there is noDescribe the concepts of risk, threats, vulnerabilities and attack vectors (including the fact that there is nosuch thing as perfect security). [Familiarity]such thing as perfect security). ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Explain the concepts of authentication, authorization, access control. [Familiarity]Explain the concepts of authentication, authorization, access control. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Explain the concept of trust and trustworthiness. [Familiarity]Explain the concept of trust and trustworthiness. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Describe important ethical issues to consider in computer security, including ethical issues associated withDescribe important ethical issues to consider in computer security, including ethical issues associated withfixing or not fixing vulnerabilities and disclosing or not disclosing vulnerabilities. [Familiarity]fixing or not fixing vulnerabilities and disclosing or not disclosing vulnerabilities. ",
           "mastery": "No",
           "num": "4"
         }
      ]}
      ,
      {"title": "Principles of Secure Design",
       "intro": "",
       "topics": [
         { "content": "Least privilege and isolation (",
           "num": "0",
           "addressed": "No"
,
           "xrefs": " {OS_Security_and_Protection}{OS/Security and Protection}: Policy/mechanism separation. {SF_Virtualization_and_Isolation}{SF/Virtualization and Isolation}: Rationale for protection and predictable performance. {PL_Language_Translation_and_Execution}{PL/Language Translation and Execution}: Memory management)"         },
         { "content": "Fail-safe defaults (",
           "num": "1",
           "addressed": "No"
,
           "xrefs": " SE/Software Construction/ Coding practices: techniques, idioms/patterns, mechanisms for building quality programs and SDF/Development Methods/Programming"         },
         { "content": "correctness)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Open design (",
           "num": "3",
           "addressed": "No"
,
           "xrefs": " {SE_Software_Evolution}{SE/Software Evolution}: Software development in the context of large, pre-existing code bases)"         },
         { "content": "End-to-end security (",
           "num": "4",
           "addressed": "No"
,
           "xrefs": " {SF_Reliability_through_Redundancy}{SF/Reliability through Redundancy}: how errors increase the longer the distance between the communicating entities; the end-to-end principle)"         },
         { "content": "Defense in depth (e.g., defensive programming, layered defense)",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Security by design (",
           "num": "6",
           "addressed": "No"
,
           "xrefs": " {SE_Software_Design}{SE/Software Design}: System design principles)"         },
         { "content": "Tensions between security and other design goals",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Complete mediation",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Use of vetted security components",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Economy of mechanism (reducing trusted computing base, minimize attack surface) (",
           "num": "10",
           "addressed": "No"
,
           "xrefs": " {SE_Software_Design}{SE/Software Design}: System design principles {SE_Software_Construction}{SE/Software Construction}: Development context: “green field” vs. existing code base)"         },
         { "content": "Usable security (",
           "num": "11",
           "addressed": "No"
,
           "xrefs": " {HCI_Foundations}{HCI/Foundations}: Cognitive models that inform interaction design)"         },
         { "content": "Security composability",
           "num": "12",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Prevention, detection, and deterrence (",
           "num": "13",
           "addressed": "No"
,
           "xrefs": " SF/Reliability through Redundancy/Distinction between bugs and faults and NC/Reliable Data Delivery/Error control and NC/Reliable Data Delivery/Flow control)"         }
      ],
      "skills": [
         {"content": "Describe the principle of least privilege and isolation as applied to system design. [Familiarity]Describe the principle of least privilege and isolation as applied to system design. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Summarize the principle of fail-safe and deny-by-default. [Familiarity]Summarize the principle of fail-safe and deny-by-default. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Discuss the implications of relying on open design or the secrecy of design for security. [Familiarity]Discuss the implications of relying on open design or the secrecy of design for security. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Explain the goals of end-to-end data security. [Familiarity]Explain the goals of end-to-end data security. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Discuss the benefits of having multiple layers of defenses. [Familiarity]Discuss the benefits of having multiple layers of defenses. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "For each stage in the lifecycle of a product, describe what security considerations should be evaluated.For each stage in the lifecycle of a product, describe what security considerations should be evaluated.[Familiarity]",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Describe the cost and tradeoffs associated with designing security into a product. [Familiarity]Describe the cost and tradeoffs associated with designing security into a product. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Describe the concept of mediation and the principle of complete mediation. [Familiarity]Describe the concept of mediation and the principle of complete mediation. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Describe standard components for security operations, and explain the benefits of their use instead of re-Describe standard components for security operations, and explain the benefits of their use instead of re-inventing fundamentals operations. [Familiarity]inventing fundamentals operations. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "Explain the concept of trusted computing including trusted computing base and attack surface and theExplain the concept of trusted computing including trusted computing base and attack surface and theprinciple of minimizing trusted computing base. [Familiarity]principle of minimizing trusted computing base. ",
           "mastery": "No",
           "num": "9"
         },
         {"content": "Discuss the importance of usability in security mechanism design. [Familiarity]Discuss the importance of usability in security mechanism design. ",
           "mastery": "No",
           "num": "10"
         },
         {"content": "12. Describe security issues that arise at boundaries between multiple components. [Familiarity]12. Describe security issues that arise at boundaries between multiple components. ",
           "mastery": "No",
           "num": "11"
         },
         {"content": "13. Identify the different roles of prevention mechanisms and detection/deterrence mechanisms. [Familiarity]13. Identify the different roles of prevention mechanisms and detection/deterrence mechanisms. ",
           "mastery": "No",
           "num": "12"
         }
      ]}
      ,
      {"title": "Defensive Programming",
       "intro": "Topics in defensive programming are generally not thought about in isolation, but applied to other topics particularly in SDF, SE and PD Knowledge Areas. ",
       "topics": [
         { "content": "Input validation and data sanitization (",
           "num": "0",
           "addressed": "No"
,
           "xrefs": " SDF/Development Methods/Program Correctness)"         },
         { "content": "Choice of programming language and type-safe languages",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Examples of input validation and data sanitization errors (",
           "num": "2",
           "subtopics": [         { "content": "Buffer overflows",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Integer errors",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "SQL injection",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "XSS vulnerability",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": " {SDF_Development_Methods}{SDF/Development Methods}: Program Correctness {SE_Software_Construction}{SE/Software Construction}: Coding Practices)"         },
         { "content": "Race conditions (",
           "num": "3",
           "addressed": "No"
,
           "xrefs": " {SF_Parallelism}{SF/Parallelism}/ Parallel programming {PD_Parallel_Architecture}{PD/Parallel Architecture}/Shared vs. distributed memory {PD_Communication_and_Coordination}{PD/Communication and Coordination}/Shared Memory {PD_Parallelism_Fundamentals}{PD/Parallelism Fundamentals}/Programming errors not found in sequential programming)"         },
         { "content": "Correct handling of exceptions and unexpected behaviors (",
           "num": "4",
           "addressed": "No"
,
           "xrefs": " {SDF_Development_Methods}{SDF/Development Methods}/program correctness)"         },
         { "content": "Correct usage of third-party components (",
           "num": "5",
           "addressed": "No"
,
           "xrefs": " {SDF_Development_Methods}{SDF/Development Methods}/program correctnes  {SDF_Operating_System_Principles}{SDF/Operating System Principles}/Concepts of application program interfaces (APIs)"         },
         { "content": "Effectively deploying security updates (",
           "num": "6",
           "addressed": "No"
,
           "xrefs": " {OS_Security_and_Protection}{OS/Security and Protection}/Security methods and devices)"         },
         { "content": "Information flow control",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Correctly generating randomness for security purposes",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Mechanisms for detecting and mitigating input and data sanitization errors",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Fuzzing",
           "num": "10",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Static analysis and dynamic analysis",
           "num": "11",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Program verification",
           "num": "12",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Operating system support (e.g., address space randomization, canaries)",
           "num": "13",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Hardware support (e.g., DEP, TPM)",
           "num": "14",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain why input validation and data sanitization is necessary in the face of adversarial control of theExplain why input validation and data sanitization is necessary in the face of adversarial control of theinput channel. [Familiarity]input channel. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain why you might choose to develop a program in a type-safe language like Java, in contrast to anExplain why you might choose to develop a program in a type-safe language like Java, in contrast to anunsafe programming language like C/C++. [Familiarity]unsafe programming language like C/C++. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Classify common input validation errors, and write correct input validation code. [Usage]Classify common input validation errors, and write correct input validation code. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Demonstrate using a high-level programming language how to prevent a race condition from occurring andDemonstrate using a high-level programming language how to prevent a race condition from occurring andhow to handle an exception. [Usage]how to handle an exception. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Demonstrate the identification and graceful handling of error conditions. [Usage]Demonstrate the identification and graceful handling of error conditions. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Explain the risks with misusing interfaces with third-party code and how to correctly use third-party code.Explain the risks with misusing interfaces with third-party code and how to correctly use third-party code.[Familiarity]",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Discuss the need to update software to fix security vulnerabilities and the lifecycle management of the fix.Discuss the need to update software to fix security vulnerabilities and the lifecycle management of the fix.[Familiarity]",
           "mastery": "No",
           "num": "6"
         },
         {"content": "List examples of direct and indirect information flows. [Familiarity]List examples of direct and indirect information flows. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Explain the role of random numbers in security, beyond just cryptography (e.g. password generation,Explain the role of random numbers in security, beyond just cryptography (e.g. password generation,randomized algorithms to avoid algorithmic denial of service attacks). [Familiarity]randomized algorithms to avoid algorithmic denial of service attacks). ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "Explain the different types of mechanisms for detecting and mitigating data sanitization errors.Explain the different types of mechanisms for detecting and mitigating data sanitization errors.[Familiarity]",
           "mastery": "No",
           "num": "9"
         },
         {"content": "Demonstrate how programs are tested for input handling errors. [Usage]Demonstrate how programs are tested for input handling errors. ",
           "mastery": "No",
           "num": "10"
         },
         {"content": "Use static and dynamic tools to identify programming faults. [Usage]Use static and dynamic tools to identify programming faults. ",
           "mastery": "No",
           "num": "11"
         },
         {"content": "Describe how memory architecture is used to protect runtime attacks. [Familiarity]Describe how memory architecture is used to protect runtime attacks. ",
           "mastery": "No",
           "num": "12"
         }
      ]}
      ,
      {"title": "Threats and Attacks",
       "intro": "",
       "topics": [
         { "content": "Attacker goals, capabilities, and motivations (such as underground economy, digital espionage, cyberwarfare, insider threats, hacktivism, advanced persistent threats)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Examples of malware (e.g., viruses, worms, spyware, botnets, Trojan horses or rootkits)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Denial of Service (DoS) and Distributed Denial of Service (DDoS)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Social engineering (e.g., phishing) (",
           "num": "3",
           "addressed": "No"
,
           "xrefs": " {SP_Social_Context}{SP/Social Context}/Social implications of computing in a networked world {HCI_Designing_Interaction}{HCI/Designing Interaction}/Handling human/system failure)"         },
         { "content": "Attacks on privacy and anonymity (",
           "num": "4",
           "addressed": "No"
,
           "xrefs": " {HCI_Foundations}{HCI/Foundations}/Social models that inform interaction design: culture, communication, networks and organizations {SP_Privacy_and_Civil_Liberties}{SP/Privacy and Civil Liberties}/technology-based solutions for privacy protection)"         },
         { "content": "Malware/unwanted communication such as covert channels and steganography",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe likely attacker types against a particular system. [Familiarity]Describe likely attacker types against a particular system. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Discuss the limitations of malware countermeasures (e.g., signature-based detection, behavioral detection).Discuss the limitations of malware countermeasures (e.g., signature-based detection, behavioral detection).[Familiarity]",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Identify instances of social engineering attacks and Denial of Service attacks. [Familiarity]Identify instances of social engineering attacks and Denial of Service attacks. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Discuss how Denial of Service attacks can be identified and mitigated. [Familiarity]Discuss how Denial of Service attacks can be identified and mitigated. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Describe risks to privacy and anonymity in commonly used applications. [Familiarity]Describe risks to privacy and anonymity in commonly used applications. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Discuss the concepts of covert channels and other data leakage procedures. [Familiarity]Discuss the concepts of covert channels and other data leakage procedures. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Network Security",
       "intro": "Discussion of network security relies on previous understanding on fundamental concepts of networking, including protocols, such as TCP/IP, and network architecture/organization (cross-reference {NC/Network Communication}). ",
       "topics": [
         { "content": "Network specific threats and attack types (e.g., denial of service, spoofing, sniffing and traffic redirection, man-in-the-middle, message integrity attacks, routing attacks, and traffic analysis)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Use of cryptography for data and network security",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Architectures for secure networks (e.g., secure channels, secure routing protocols, secure DNS, VPNs, anonymous communication protocols, isolation)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Defense mechanisms and countermeasures (e.g., network monitoring, intrusion detection, firewalls, spoofing and DoS protection, honeypots, tracebacks).",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Security for wireless, cellular networks (",
           "num": "4",
           "addressed": "No"
,
           "xrefs": " {NC_Mobility}{NC_Mobility}{NC/Mobility}/Principles of cellular networks {NC_Mobility}{NC_Mobility}{NC/Mobility}/802.11)"         },
         { "content": "Other non-wired networks (e.g., ad hoc, sensor, and vehicular networks)",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Censorship resistance",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Operational network security management (e.g., configure network access control)",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe the different categories of network threats and attacks. [Familiarity]Describe the different categories of network threats and attacks. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe the architecture for public and private key cryptography and how public key infrastructure (PKI)Describe the architecture for public and private key cryptography and how public key infrastructure (PKI)supports network security. [Familiarity]supports network security. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe virtues and limitations of security technologies at each layer of the network stack. [Familiarity]Describe virtues and limitations of security technologies at each layer of the network stack. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Identify the appropriate defense mechanism(s) and its limitations given a network threat. [Familiarity]Identify the appropriate defense mechanism(s) and its limitations given a network threat. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Discuss security properties and limitations of other non-wired networks. [Familiarity]Discuss security properties and limitations of other non-wired networks. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Identify the additional threats faced by non-wired networks. [Familiarity]Identify the additional threats faced by non-wired networks. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Describe threats that can and cannot be protected against using secure communication channels.Describe threats that can and cannot be protected against using secure communication channels.[Familiarity]",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Summarize defenses against network censorship. [Familiarity]Summarize defenses against network censorship. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Diagram a network for security. [Familiarity]Diagram a network for security. ",
           "mastery": "No",
           "num": "8"
         }
      ]}
      ,
      {"title": "Cryptography",
       "intro": "",
       "topics": [
         { "content": "Basic Cryptography Terminology covering notions pertaining to the different (communication) partners, secure/unsecure channel, attackers and their capabilities, encryption, decryption, keys and their characteristics, signatures",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Cipher types (e.g., Caesar cipher, affine cipher) together with typical attack methods such as frequency analysis",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Public Key Infrastructure support for digital signature and encryption and its challenges",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Mathematical Preliminaries essential for cryptography, including topics in linear algebra, number theory, probability theory, and statistics",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Cryptographic primitives:",
           "num": "4",
           "subtopics": [         { "content": "pseudo-random generators and stream ciphers",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "block ciphers (pseudo-random permutations), e.g., AES",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "pseudo-random functions",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "hash functions, e.g., SHA2, collision resistance",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "message authentication codes",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "key derivations functions",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Symmetric key cryptography",
           "num": "5",
           "subtopics": [         { "content": "Perfect secrecy and the one time pad",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Modes of operation for semantic security and authenticated encryption (e.g., encrypt-then-MAC, OCB, GCM)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Message integrity (e.g., CMAC, HMAC)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Public key cryptography:",
           "num": "6",
           "subtopics": [         { "content": "Trapdoor permutation, e.g., RSA",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Public key encryption, e.g., RSA encryption, EI Gamal encryption",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Digital signatures",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Public-key infrastructure (PKI) and certificates",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Hardness assumptions, e.g., Diffie-Hellman, integer factoring",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Authenticated key exchange protocols, e.g., TLS",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Cryptographic protocols: challenge-response authentication, zero-knowledge protocols, commitment, oblivious transfer, secure 2-party or multi-party computation, secret sharing, and applications",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Motivate concepts using real-world applications, e.g., electronic cash, secure channels between clients and servers, secure electronic mail, entity authentication, device pairing, voting systems.",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Security definitions and attacks on cryptographic primitives:",
           "num": "10",
           "subtopics": [         { "content": "Goals: indistinguishability, unforgeability, collision-resistance",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Attacker capabilities: chosen-message attack (for signatures), birthday attacks, side channel attacks, fault injection attacks.",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Cryptographic standards and references implementations",
           "num": "11",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Quantum cryptography",
           "num": "12",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe the purpose of cryptography and list ways it is used in data communications. [Familiarity]Describe the purpose of cryptography and list ways it is used in data communications. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Define the following terms: cipher, cryptanalysis, cryptographic algorithm, and cryptology, and describeDefine the following terms: cipher, cryptanalysis, cryptographic algorithm, and cryptology, and describethe two basic methods (ciphers) for transforming plain text in cipher text. [Familiarity]the two basic methods (ciphers) for transforming plain text in cipher text. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Discuss the importance of prime numbers in cryptography and explain their use in cryptographicDiscuss the importance of prime numbers in cryptography and explain their use in cryptographicalgorithms. [Familiarity]algorithms. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Explain how public key infrastructure supports digital signing and encryption and discuss theExplain how public key infrastructure supports digital signing and encryption and discuss thelimitations/vulnerabilities. [Familiarity]limitations/vulnerabilities. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Use cryptographic primitives and describe their basic properties. [Usage]Use cryptographic primitives and describe their basic properties. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Illustrate how to measure entropy and how to generate cryptographic randomness. [Usage]Illustrate how to measure entropy and how to generate cryptographic randomness. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Use public-key primitives and their applications. [Usage]Use public-key primitives and their applications. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Explain how key exchange protocols work and how they fail. [Familiarity]Explain how key exchange protocols work and how they fail. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Discuss cryptographic protocols and their properties. [Familiarity]Discuss cryptographic protocols and their properties. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "Describe real-world applications of cryptographic primitives and protocols. [Familiarity]Describe real-world applications of cryptographic primitives and protocols. ",
           "mastery": "No",
           "num": "9"
         },
         {"content": "Summarize security definitions related to attacks on cryptographic primitives, including attackerSummarize security definitions related to attacks on cryptographic primitives, including attackercapabilities and goals.[Familiarity]capabilities and goals.",
           "mastery": "No",
           "num": "10"
         },
         {"content": "12. Apply appropriate known cryptographic techniques for a given scenario. [Usage]12. Apply appropriate known cryptographic techniques for a given scenario. ",
           "mastery": "No",
           "num": "11"
         },
         {"content": "13. Appreciate the dangers of inventing one’s own cryptographic methods. [Familiarity]13. Appreciate the dangers of inventing one’s own cryptographic methods. ",
           "mastery": "No",
           "num": "12"
         },
         {"content": "14. Describe quantum cryptography and the impact of quantum computing on cryptographic algorithms.[Familiarity]14. Describe quantum cryptography and the impact of quantum computing on cryptographic algorithms.",
           "mastery": "No",
           "num": "13"
         }
      ]}
      ,
      {"title": "Web Security",
       "intro": "",
       "topics": [
         { "content": "Web security model",
           "num": "0",
           "subtopics": [         { "content": "Browser security model including same-origin policy",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Client-server trust boundaries, e.g., cannot rely on secure execution in the client Session management, authentication",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Single sign-on",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "HTTPS and certificates",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Application vulnerabilities and defenses",
           "num": "1",
           "subtopics": [         { "content": "SQL injection",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "XSS",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "CSRF",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Client-side security",
           "num": "2",
           "subtopics": [         { "content": "Cookies security policy",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "HTTP security extensions, e.g. HSTS",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Plugins, extensions, and web apps",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Web user tracking",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Server-side security tools, e.g. Web Application Firewalls (WAFs) and fuzzers",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe the browser security model including same-origin policy and threat models in web security.Describe the browser security model including same-origin policy and threat models in web security.[Familiarity]",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Discuss the concept of web sessions, secure communication channels such as TLS and importance ofDiscuss the concept of web sessions, secure communication channels such as TLS and importance ofsecure certificates, authentication including single sign-on such as OAuth and SAML. [Familiarity]secure certificates, authentication including single sign-on such as OAuth and SAML. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe common types of vulnerabilities and attacks in web applications, and defenses against them.Describe common types of vulnerabilities and attacks in web applications, and defenses against them.[Familiarity]",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Use client-side security capabilities in an application. [Usage]Use client-side security capabilities in an application. ",
           "mastery": "No",
           "num": "3"
         }
      ]}
      ,
      {"title": "Platform Security",
       "intro": "",
       "topics": [
         { "content": "Code integrity and code signing",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Secure boot, measured boot, and root of trust",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Attestation",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "TPM and secure co-processors",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Security threats from peripherals, e.g., DMA, IOMMU",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Physical attacks: hardware Trojans, memory probes, cold boot attacks",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Security of embedded devices, e.g., medical devices, cars",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Trusted path",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain the concept of code integrity and code signing and the scope it applies to. [Familiarity]Explain the concept of code integrity and code signing and the scope it applies to. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Discuss the concept of root of trust and the process of secure boot and secure loading. [Familiarity]Discuss the concept of root of trust and the process of secure boot and secure loading. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe the mechanism of remote attestation of system integrity. [Familiarity]Describe the mechanism of remote attestation of system integrity. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Summarize the goals and key primitives of TPM. [Familiarity]Summarize the goals and key primitives of TPM. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Identify the threats of plugging peripherals into a device. [Familiarity]Identify the threats of plugging peripherals into a device. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Identify physical attacks and countermeasures. [Familiarity]Identify physical attacks and countermeasures. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Identify attacks on non-PC hardware platforms. [Familiarity]Identify attacks on non-PC hardware platforms. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Discuss the concept and importance of trusted path. [Familiarity]Discuss the concept and importance of trusted path. ",
           "mastery": "No",
           "num": "7"
         }
      ]}
      ,
      {"title": "Security Policy and Governance",
       "intro": "See general cross-referencing with the SP/Security Policies, Laws and Computer Crimes. ",
       "topics": [
         { "content": "Privacy policy (",
           "num": "0",
           "addressed": "No"
,
           "xrefs": " {SP_Social_Context}{SP/Social Context}/Social implications of computing in a networked world. {SP_Professional_Ethics}{SP/Professional Ethics}: accountability, responsibility and liability {SP_Privacy_and_Civil_Liberties}{SP/Privacy and Civil Liberties}/Legal foundations of privacy protection)"         },
         { "content": "Inference controls/statistical disclosure limitation",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Backup policy, password refresh policy",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Breach disclosure policy",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Data collection and retention policies",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Supply chain policy",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Cloud security tradeoffs",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe the concept of privacy including personally private information, potential violations of privacyDescribe the concept of privacy including personally private information, potential violations of privacydue to security mechanisms, and describe how privacy protection mechanisms run in conflict with securitydue to security mechanisms, and describe how privacy protection mechanisms run in conflict with securitymechanisms. [Familiarity]mechanisms. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe how an attacker can infer a secret by interacting with a database. [Familiarity]Describe how an attacker can infer a secret by interacting with a database. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Explain how to set a data backup policy or password refresh policy. [Familiarity]Explain how to set a data backup policy or password refresh policy. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Discuss how to set a breach disclosure policy. [Familiarity]Discuss how to set a breach disclosure policy. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Describe the consequences of data retention policies. [Familiarity]Describe the consequences of data retention policies. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Identify the risks of relying on outsourced manufacturing. [Familiarity]Identify the risks of relying on outsourced manufacturing. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Identify the risks and benefits of outsourcing to the cloud. [Familiarity]Identify the risks and benefits of outsourcing to the cloud. ",
           "mastery": "No",
           "num": "6"
         }
      ]}
      ,
      {"title": "Digital Forensics",
       "intro": "",
       "topics": [
         { "content": "Basic Principles and methodologies for digital forensics",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Design systems with forensic needs in mind",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Rules of Evidence – general concepts and differences between jurisdictions and Chain of Custody",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Search and Seizure of evidence: legal and procedural requirements",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Digital Evidence methods and standards",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Techniques and standards for Preservation of Data",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Legal and Reporting Issues including working as an expert witness",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "OS/File System Forensics",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Application Forensics",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Web Forensics",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Network Forensics",
           "num": "10",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Mobile Device Forensics",
           "num": "11",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Computer/network/system attacks",
           "num": "12",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Attack detection and investigation",
           "num": "13",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Anti-forensics",
           "num": "14",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe what a digital investigation is, the sources of digital evidence, and the limitations of forensics.Describe what a digital investigation is, the sources of digital evidence, and the limitations of forensics.[Familiarity]",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain how to design software to support forensics. [Familiarity]Explain how to design software to support forensics. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe the legal requirements for use of seized data. [Familiarity]Describe the legal requirements for use of seized data. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe the process of evidence seizure from the time when the requirement was identified to theDescribe the process of evidence seizure from the time when the requirement was identified to thedisposition of the data. [Familiarity]disposition of the data. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Describe how data collection is accomplished and the proper storage of the original and forensics copy.Describe how data collection is accomplished and the proper storage of the original and forensics copy.[Familiarity]",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Conduct data collection on a hard drive. [Usage]Conduct data collection on a hard drive. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Describe a person’s responsibility and liability while testifying as a forensics examiner. [Familiarity]Describe a person’s responsibility and liability while testifying as a forensics examiner. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Recover data based on a given search term from an imaged system. [Usage]Recover data based on a given search term from an imaged system. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Reconstruct application history from application artifacts. [Usage]Reconstruct application history from application artifacts. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "Reconstruct web browsing history from web artifacts. [Usage]Reconstruct web browsing history from web artifacts. ",
           "mastery": "No",
           "num": "9"
         },
         {"content": "Capture and interpret network traffic. [Usage]Capture and interpret network traffic. ",
           "mastery": "No",
           "num": "10"
         },
         {"content": "Discuss the challenges associated with mobile device forensics. [Familiarity]Discuss the challenges associated with mobile device forensics. ",
           "mastery": "No",
           "num": "11"
         },
         {"content": "Inspect a system (network, computer, or application) for the presence of malware or malicious activity.Inspect a system (network, computer, or application) for the presence of malware or malicious activity.[Usage]",
           "mastery": "No",
           "num": "12"
         },
         {"content": "Apply forensics tools to investigate security breaches. [Usage]Apply forensics tools to investigate security breaches. ",
           "mastery": "No",
           "num": "13"
         },
         {"content": "Identify anti-forensic methods. [Familiarity]Identify anti-forensic methods. ",
           "mastery": "No",
           "num": "14"
         }
      ]}
      ,
      {"title": "Secure Software Engineering",
       "intro": "Fundamentals of secure coding practices covered in other knowledge areas, including SDF and SE. For example, see SE/Software Construction; Software Verification and Validation. ",
       "topics": [
         { "content": "Building security into the software development lifecycle (",
           "num": "0",
           "addressed": "No"
,
           "xrefs": " {SE_Software_Processes}{SE/Software Processes})"         },
         { "content": "Secure design principles and patterns",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Secure software specifications and requirements",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Secure software development practices (",
           "num": "3",
           "addressed": "No"
,
           "xrefs": " {SE_Software_Construction}{SE/Software Construction})"         },
         { "content": "Secure testing - the process of testing that security requirements are met (including static and dynamic analysis).",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Software quality assurance and benchmarking measurements",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe the requirements for integrating security into the software development lifecycle. [Familiarity]Describe the requirements for integrating security into the software development lifecycle. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Apply the concepts of the Design Principles for Protection Mechanisms, the Principles for SoftwareApply the concepts of the Design Principles for Protection Mechanisms, the Principles for SoftwareSecurity [2], and the Principles for Secure Design [1] on a software development project. [Usage]Security ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Develop specifications for a software development effort that fully specify functional requirements andDevelop specifications for a software development effort that fully specify functional requirements andidentifies the expected execution paths. [Usage]identifies the expected execution paths. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe software development best practices for minimizing vulnerabilities in programming code.Describe software development best practices for minimizing vulnerabilities in programming code.[Familiarity]",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Conduct a security verification and assessment (static and dynamic) of a software application. [Usage]Conduct a security verification and assessment (static and dynamic) of a software application. ",
           "mastery": "No",
           "num": "4"
         }
      ]}
]},
{"abbrev": "AR",
  "title": "Architecture and Organization",
  "intro": "Computing professionals should not regard the computer as just a black box that executes programs by magic. The knowledge area Architecture and Organization builds on Systems Fundamentals (SF) to develop a deeper understanding of the hardware environment upon which all computing is based, and the interface it provides to higher software layers. Students should acquire an understanding and appreciation of a computer system’s functional components, their characteristics, performance, and interactions, and, in particular, the challenge of harnessing parallelism to sustain performance improvements now and into the future. Students need to understand computer architecture to develop programs that can achieve high performance through a programmer’s awareness of parallelism and latency. In selecting a system to use, students should be able to understand the tradeoff among various components, such as CPU clock speed, cycles per instruction, memory size, and average memory access time. The learning outcomes specified for these topics correspond primarily to the core and are intended to support programs that elect to require only the minimum 16 hours of computer architecture of their students. For programs that want to teach more than the minimum, the same AR topics can be treated at a more advanced level by implementing a two-course sequence. For programs that want to cover the elective topics, those topics can be introduced within a two- course sequence and/or be treated in a more comprehensive way in a third course. ",
  "units": [
      {"title": "Digital Logic and Digital Systems",
       "intro": "",
       "topics": [
         { "content": "Overview and history of computer architecture",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Combinational vs. sequential logic/Field programmable gate arrays as a fundamental combinational + sequential logic building block",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Multiple representations/layers of interpretation (hardware is just another layer)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Computer-aided design tools that process hardware and architectural representations",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Register transfer notation/Hardware Description Language (Verilog/VHDL)",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Physical constraints (gate delays, fan-in, fan-out, energy/power)",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe the progression of computer technology components from vacuum tubes to VLSI, fromDescribe the progression of computer technology components from vacuum tubes to VLSI, frommainframe computer architectures to the organization of warehouse-scale computers. [Familiarity]mainframe computer architectures to the organization of warehouse-scale computers. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Comprehend the trend of modern computer architectures towards multi-core and that parallelism is inherentComprehend the trend of modern computer architectures towards multi-core and that parallelism is inherentin all hardware systems. [Familiarity]in all hardware systems. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Explain the implications of the “power wall” in terms of further processor performance improvements andExplain the implications of the “power wall” in terms of further processor performance improvements andthe drive towards harnessing parallelism. [Familiarity]the drive towards harnessing parallelism. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Articulate that there are many equivalent representations of computer functionality, including logicalArticulate that there are many equivalent representations of computer functionality, including logicalexpressions and gates, and be able to use mathematical expressions to describe the functions of simpleexpressions and gates, and be able to use mathematical expressions to describe the functions of simplecombinational and sequential circuits. [Familiarity]combinational and sequential circuits. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Design the basic building blocks of a computer: arithmetic-logic unit (gate-level), registers (gate-level),Design the basic building blocks of a computer: arithmetic-logic unit (gate-level), registers (gate-level),central processing unit (register transfer-level), memory (register transfer-level). [Usage]central processing unit (register transfer-level), memory (register transfer-level). ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Use CAD tools for capture, synthesis, and simulation to evaluate simple building blocks (e.g., arithmetic-logic unit, registers, movement between registers) of a simple computer design. [Usage]Use CAD tools for capture, synthesis, and simulation to evaluate simple building blocks (e.g., arithmetic-logic unit, registers, movement between registers) of a simple computer design. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Evaluate the functional and timing diagram behavior of a simple processor implemented at the logic circuitEvaluate the functional and timing diagram behavior of a simple processor implemented at the logic circuitlevel. [Assessment]level. ",
           "mastery": "No",
           "num": "6"
         }
      ]}
      ,
      {"title": "Machine Level Representation of Data",
       "intro": "",
       "topics": [
         { "content": "Bits, bytes, and words",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Numeric data representation and number bases",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Fixed- and floating-point systems",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Signed and twos-complement representations",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Representation of non-numeric data (character codes, graphical data)",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Representation of records and arrays",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain why everything is data, including instructions, in computers. [Familiarity]Explain why everything is data, including instructions, in computers. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain the reasons for using alternative formats to represent numerical data. [Familiarity]Explain the reasons for using alternative formats to represent numerical data. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe how negative integers are stored in sign-magnitude and twos-complement representations.Describe how negative integers are stored in sign-magnitude and twos-complement representations.[Familiarity]",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Explain how fixed-length number representations affect accuracy and precision. [Familiarity]Explain how fixed-length number representations affect accuracy and precision. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Describe the internal representation of non-numeric data, such as characters, strings, records, and arrays.Describe the internal representation of non-numeric data, such as characters, strings, records, and arrays.[Familiarity]",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Convert numerical data from one format to another. [Usage]Convert numerical data from one format to another. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Write simple programs at the assembly/machine level for string processing and manipulation. [Usage]Write simple programs at the assembly/machine level for string processing and manipulation. ",
           "mastery": "No",
           "num": "6"
         }
      ]}
      ,
      {"title": "Assembly Level Machine Organization",
       "intro": "",
       "topics": [
         { "content": "Basic organization of the von Neumann machine",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Control unit; instruction fetch, decode, and execution",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Instruction sets and types (data manipulation, control, I/O)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Assembly/machine language programming",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Instruction formats",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Addressing modes",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Subroutine call and return mechanisms (",
           "num": "6",
           "addressed": "No"
,
           "xrefs": " {PL_Language_Translation_and_Execution}{PL/Language Translation and Execution})"         },
         { "content": "I/O and interrupts",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Heap vs. Static vs. Stack vs. Code segments",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Shared memory multiprocessors/multicore organization",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Introduction to SIMD vs. MIMD and the Flynn Taxonomy",
           "num": "10",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain the organization of the classical von Neumann machine and its major functional units. [Familiarity]Explain the organization of the classical von Neumann machine and its major functional units. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe how an instruction is executed in a classical von Neumann machine, with extensions for threads,Describe how an instruction is executed in a classical von Neumann machine, with extensions for threads,multiprocessor synchronization, and SIMD execution. [Familiarity]multiprocessor synchronization, and SIMD execution. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe instruction level parallelism and hazards, and how they are managed in typical processorDescribe instruction level parallelism and hazards, and how they are managed in typical processorpipelines. [Familiarity]pipelines. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "4. Summarize how instructions are represented at both the machine level and in the context of a symbolic4. Summarize how instructions are represented at both the machine level and in the context of a symbolicassembler. [Familiarity]assembler. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "5. Demonstrate how to map between high-level language patterns into assembly/machine language notations.5. Demonstrate how to map between high-level language patterns into assembly/machine language notations.[Familiarity]",
           "mastery": "No",
           "num": "4"
         },
         {"content": "6. Explain different instruction formats, such as addresses per instruction and variable length vs. fixed length6. Explain different instruction formats, such as addresses per instruction and variable length vs. fixed lengthformats. [Familiarity]formats. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "7. Explain how subroutine calls are handled at the assembly level. [Familiarity]7. Explain how subroutine calls are handled at the assembly level. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "8. Explain the basic concepts of interrupts and I/O operations. [Familiarity]8. Explain the basic concepts of interrupts and I/O operations. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "9. Write simple assembly language program segments. [Usage]9. Write simple assembly language program segments. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "10. Show how fundamental high-level programming constructs are implemented at the machine-language10. Show how fundamental high-level programming constructs are implemented at the machine-languagelevel. [Usage]level. ",
           "mastery": "No",
           "num": "9"
         }
      ]}
      ,
      {"title": "Memory System Organization and Architecture",
       "intro": "cross-reference {OS/Memory Management}{OS/Virtual Machines} ",
       "topics": [
         { "content": "Storage systems and their technology",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Memory hierarchy: importance of temporal and spatial locality",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Main memory organization and operations",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Latency, cycle time, bandwidth, and interleaving",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Cache memories (address mapping, block size, replacement and store policy)",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Multiprocessor cache consistency/Using the memory system for inter-core synchronization/atomic memory operations",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Virtual memory (page table, TLB)",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Fault handling and reliability",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Error coding, data compression, and data integrity (",
           "num": "8",
           "addressed": "No"
,
           "xrefs": " {SF_Reliability_through_Redundancy}{SF/Reliability through Redundancy})"         }
      ],
      "skills": [
         {"content": "Identify the main types of memory technology (e.g., SRAM, DRAM, Flash, magnetic disk) and theirIdentify the main types of memory technology (e.g., SRAM, DRAM, Flash, magnetic disk) and theirrelative cost and performance. [Familiarity]relative cost and performance. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain the effect of memory latency on running time. [Familiarity]Explain the effect of memory latency on running time. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe how the use of memory hierarchy (cache, virtual memory) is used to reduce the effective memoryDescribe how the use of memory hierarchy (cache, virtual memory) is used to reduce the effective memorylatency. [Familiarity]latency. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe the principles of memory management. [Familiarity]Describe the principles of memory management. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Explain the workings of a system with virtual memory management. [Familiarity]Explain the workings of a system with virtual memory management. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Compute Average Memory Access Time under a variety of cache and memory configurations and mixes ofCompute Average Memory Access Time under a variety of cache and memory configurations and mixes ofinstruction and data references. [Usage]instruction and data references. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Interfacing and Communication",
       "intro": "cross-reference Operating Systems (OS) Knowledge Area for a discussion of the operating system view of input/output processing and management. The focus here is on the hardware mechanisms for supporting device interfacing and processor-to-processor communications. ",
       "topics": [
         { "content": "I/O fundamentals: handshaking, buffering, programmed I/O, interrupt-driven I/O",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Interrupt structures: vectored and prioritized, interrupt acknowledgment",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "External storage, physical organization, and drives",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Buses: bus protocols, arbitration, direct-memory access (DMA)",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Introduction to networks: communications networks as another layer of remote access",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Multimedia support",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "RAID architectures",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain how interrupts are used to implement I/O control and data transfers. [Familiarity]Explain how interrupts are used to implement I/O control and data transfers. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Identify various types of buses in a computer system. [Familiarity]Identify various types of buses in a computer system. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe data access from a magnetic disk drive. [Familiarity]Describe data access from a magnetic disk drive. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Compare common network organizations, such as ethernet/bus, ring, switched vs. routed. [Familiarity]Compare common network organizations, such as ethernet/bus, ring, switched vs. routed. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Identify the cross-layer interfaces needed for multimedia access and presentation, from image fetch fromIdentify the cross-layer interfaces needed for multimedia access and presentation, from image fetch fromremote storage, through transport over a communications network, to staging into local memory, and finalremote storage, through transport over a communications network, to staging into local memory, and finalpresentation to a graphical display. [Familiarity]presentation to a graphical display. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Describe the advantages and limitations of RAID architectures. [Familiarity]Describe the advantages and limitations of RAID architectures. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Functional Organization",
       "intro": "Note: elective for computer scientist; would be core for computer engineering curriculum. ",
       "topics": [
         { "content": "Implementation of simple datapaths, including instruction pipelining, hazard detection and resolution",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Control unit: hardwired realization vs. microprogrammed realization",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Instruction pipelining",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Introduction to instruction-level parallelism (ILP)",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Compare alternative implementation of datapaths. [Familiarity]Compare alternative implementation of datapaths. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Discuss the concept of control points and the generation of control signals using hardwired orDiscuss the concept of control points and the generation of control signals using hardwired ormicroprogrammed implementations. [Familiarity]microprogrammed implementations. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Explain basic instruction level parallelism using pipelining and the major hazards that may occur.Explain basic instruction level parallelism using pipelining and the major hazards that may occur.[Familiarity]",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Design and implement a complete processor, including datapath and control. [Usage]Design and implement a complete processor, including datapath and control. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Determine, for a given processor and memory system implementation, the average cycles per instruction.Determine, for a given processor and memory system implementation, the average cycles per instruction.[Assessment]",
           "mastery": "No",
           "num": "4"
         }
      ]}
      ,
      {"title": "Multiprocessing and Alternative Architectures",
       "intro": "The view here is on the hardware implementation of SIMD and MIMD architectures. cross-reference {PD/Parallel Architecture}. ",
       "topics": [
         { "content": "Power Law",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Example SIMD and MIMD instruction sets and architectures",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Interconnection networks (hypercube, shuffle-exchange, mesh, crossbar)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Shared multiprocessor memory systems and memory consistency",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Multiprocessor cache coherence",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Discuss the concept of parallel processing beyond the classical von Neumann model. [Familiarity]Discuss the concept of parallel processing beyond the classical von Neumann model. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe alternative parallel architectures such as SIMD and MIMD. [Familiarity]Describe alternative parallel architectures such as SIMD and MIMD. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Explain the concept of interconnection networks and characterize different approaches. [Familiarity]Explain the concept of interconnection networks and characterize different approaches. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Discuss the special concerns that multiprocessing systems present with respect to memory management andDiscuss the special concerns that multiprocessing systems present with respect to memory management anddescribe how these are addressed. [Familiarity]describe how these are addressed. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Describe the differences between memory backplane, processor memory interconnect, and remote memoryDescribe the differences between memory backplane, processor memory interconnect, and remote memoryvia networks, their implications for access latency and impact on program performance. [Familiarity]via networks, their implications for access latency and impact on program performance. ",
           "mastery": "No",
           "num": "4"
         }
      ]}
      ,
      {"title": "Performance Enhancements",
       "intro": "",
       "topics": [
         { "content": "Superscalar architecture",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Branch prediction, Speculative execution, Out-of-order execution",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Prefetching",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Vector processors and GPUs",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Hardware support for multithreading",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Scalability",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Alternative architectures, such as VLIW/EPIC, and Accelerators and other kinds of Special-Purpose Processors",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe superscalar architectures and their advantages. [Familiarity]Describe superscalar architectures and their advantages. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain the concept of branch prediction and its utility. [Familiarity]Explain the concept of branch prediction and its utility. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Characterize the costs and benefits of prefetching. [Familiarity]Characterize the costs and benefits of prefetching. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Explain speculative execution and identify the conditions that justify it. [Familiarity]Explain speculative execution and identify the conditions that justify it. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Discuss the performance advantages that multithreading offered in an architecture along with the factorsDiscuss the performance advantages that multithreading offered in an architecture along with the factorsthat make it difficult to derive maximum benefits from this approach. [Familiarity]that make it difficult to derive maximum benefits from this approach. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Describe the relevance of scalability to performance. [Familiarity]Describe the relevance of scalability to performance. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
]},
{"abbrev": "PBD",
  "title": "Platform-Based Development",
  "intro": "Platform-based development is concerned with the design and development of software applications that reside on specific software platforms. In contrast to general purpose programming, platform-based development takes into account platform-specific constraints. For instance web programming, multimedia development, mobile computing, app development, and robotics are examples of relevant platforms that provide specific services/APIs/hardware that constrain development. Such platforms are characterized by the use of specialized APIs, distinct delivery/update mechanisms, and being abstracted away from the machine level. Platform-based development may be applied over a wide breadth of ecosystems. While we recognize that some platforms (e.g., web development) are prominent, we are also cognizant of the fact that no particular platform should be specified as a requirement in the CS2013 curricular guidelines. Consequently, this Knowledge Area highlights many of the platforms that have become popular, without including any such platform in the core curriculum. We note that the general skill of developing with respect to an API or a constrained environment is covered in other Knowledge Areas, such as Software Development Fundamentals (SDF). Platform-based development further emphasizes such general skills within the context of particular platforms. ",
  "units": [
      {"title": "Introduction",
       "intro": "This knowledge unit describes the fundamental differences that Platform-Based Development has over traditional software development. ",
       "topics": [
         { "content": "Overview of platforms (e.g., Web, Mobile, Game, Industrial)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Programming via platform-specific APIs",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Overview of Platform Languages (e.g., Objective C, HTML5)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Programming under platform constraints",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe how platform-based development differs from general purpose programming. [Familiarity]Describe how platform-based development differs from general purpose programming. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "List characteristics of platform languages. [Familiarity]List characteristics of platform languages. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Write and execute a simple platform-based program. [Usage]Write and execute a simple platform-based program. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "List the advantages and disadvantages of programming with platform constraints. [Familiarity]List the advantages and disadvantages of programming with platform constraints. ",
           "mastery": "No",
           "num": "3"
         }
      ]}
      ,
      {"title": "Web Platforms",
       "intro": "",
       "topics": [
         { "content": "Web programming languages (e.g., HTML5, Java Script, PHP, CSS)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Web platform constraints",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Software as a Service (SaaS)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Web standards",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Design and Implement a simple web application. [Usage]Design and Implement a simple web application. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe the constraints that the web puts on developers. [Familiarity]Describe the constraints that the web puts on developers. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Compare and contrast web programming with general purpose programming. [Assessment]Compare and contrast web programming with general purpose programming. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe the differences between Software-as-a-Service and traditional software products. [Familiarity]Describe the differences between Software-as-a-Service and traditional software products. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Discuss how web standards impact software development. [Familiarity]Discuss how web standards impact software development. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Review an existing web application against a current web standard. [Assessment]Review an existing web application against a current web standard. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Mobile Platforms",
       "intro": "",
       "topics": [
         { "content": "Mobile programming languages",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Challenges with mobility and wireless communication",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Location-aware applications",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Performance / power tradeoffs",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Mobile platform constraints",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Emerging technologies",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Design and implement a mobile application for a given mobile platform. [Usage]Design and implement a mobile application for a given mobile platform. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Discuss the constraints that mobile platforms put on developers. [Familiarity]Discuss the constraints that mobile platforms put on developers. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Discuss the performance vs. power tradeoff. [Familiarity]Discuss the performance vs. power tradeoff. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Compare and contrast mobile programming with general purpose programming. [Assessment]Compare and contrast mobile programming with general purpose programming. ",
           "mastery": "No",
           "num": "3"
         }
      ]}
      ,
      {"title": "Industrial Platforms",
       "intro": "This knowledge unit is related to IS/Robotics. ",
       "topics": [
         { "content": "Types of Industrial Platforms (e.g., Mathematic, Robotic, Industrial Control)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Robotic software and its architecture",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Domain-specific languages",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Industrial platform constraints",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Design and implement an industrial application on a given platform (e.g., using Lego Mindstorms orDesign and implement an industrial application on a given platform (e.g., using Lego Mindstorms orMatlab). [Usage]Matlab). ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Compare and contrast domain specific languages with general purpose programming languages.Compare and contrast domain specific languages with general purpose programming languages.[Assessment]",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Discuss the constraints that a given industrial platforms impose on developers. [Familiarity]Discuss the constraints that a given industrial platforms impose on developers. ",
           "mastery": "No",
           "num": "2"
         }
      ]}
      ,
      {"title": "Game Platforms",
       "intro": "",
       "topics": [
         { "content": "Types of game platforms (e.g., XBox, Wii, PlayStation)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Game platform languages (e.g., C++, Java, Lua, Python)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Game platform constraints",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Design and implement a simple application on a game platform. [Usage]Design and implement a simple application on a game platform. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe the constraints that game platforms impose on developers. [Familiarity]Describe the constraints that game platforms impose on developers. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Compare and contrast game programming with general purpose programming. [Assessment]Compare and contrast game programming with general purpose programming. ",
           "mastery": "No",
           "num": "2"
         }
      ]}
]},
{"abbrev": "CN",
  "title": "Computational Science",
  "intro": "Computational Science is a field of applied computer science, that is, the application of computer science to solve problems across a range of disciplines. In the book Introduction to Computational Science [3], the authors offer the following definition: “the field of computational science combines computer simulation, scientific visualization, mathematical modeling, computer programming and data structures, networking, database design, symbolic computation, and high performance computing with various disciplines.” Computer science, which largely focuses on the theory, design, and implementation of algorithms for manipulating data and information, can trace its roots to the earliest devices used to assist people in computation over four thousand years ago. Various systems were created and used to calculate astronomical positions. Ada Lovelace’s programming achievement was intended to calculate Bernoulli numbers. In the late nineteenth century, mechanical calculators became available, and were immediately put to use by scientists. The needs of scientists and engineers for computation have long driven research and innovation in computing. As computers increase in their problem- solving power, computational science has grown in both breadth and importance. It is a discipline in its own right [2] and is considered to be “one of the five college majors on the rise [1].” An amazing assortment of sub-fields have arisen under the umbrella of Computational Science, including computational biology, computational chemistry, computational mechanics, computational archeology, computational finance, computational sociology and computational forensics. Some fundamental concepts of computational science are germane to every computer scientist (e.g., modeling and simulation), and computational science topics are extremely valuable components of an undergraduate program in computer science. This area offers exposure to many valuable ideas and techniques, including precision of numerical representation, error analysis, numerical techniques, parallel architectures and algorithms, modeling and simulation, information visualization, software engineering, and optimization. Topics relevant to computational science include fundamental concepts in program construction (SDF/Fundamental Programming Concepts), algorithm design (SDF/Algorithms and Design), program testing (SDF/Development Methods), data representations (AR/Machine Representation of Data), and basic computer architecture (AR/Memory System Organization and Architecture). At the sametime, students who take courses in this area have an opportunity to apply these techniques in a wide range of application areas, such as molecular and fluid dynamics, celestial mechanics, economics, biology, geology, medicine, and social network analysis. Many of the techniques used in these areas require advanced mathematics such as calculus, differential equations, and linear algebra. The descriptions here assume that students have acquired the needed mathematical background elsewhere. In the computational science community, the terms run, modify, and create are often used to describe levels of understanding. This chapter follows the conventions of other chapters in this volume and uses the terms familiarity, usage, and assessment. ",
  "units": [
      {"title": "Introduction to Modeling and Simulation",
       "intro": "Abstraction is a fundamental concept in computer science. A principal approach to computing is to abstract the real world, create a model that can be simulated on a machine. The roots of computer science can be traced to this approach, modeling things such as trajectories of artillery shells and the modeling cryptographic protocols, both of which pushed the development of early computing systems in the early and mid-1940’s. Modeling and simulation of real world systems represent essential knowledge for computer scientists and provide a foundation for computational sciences. Any introduction to modeling and simulation would either include or presume an introduction to computing. In addition, a general set of modeling and simulation techniques, data visualization methods, and software testing and evaluation mechanisms are also important. ",
       "topics": [
         { "content": "Models as abstractions of situations",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Simulations as dynamic modeling",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Simulation techniques and tools, such as physical simulations, human-in-the-loop guided simulations, and virtual reality",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Foundational approaches to validating models (e.g., comparing a simulation’s output to real data or the output of another model)",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Presentation of results in a form relevant to the system being modeled",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain the concept of modeling and the use of abstraction that allows the use of a machine to solve aExplain the concept of modeling and the use of abstraction that allows the use of a machine to solve aproblem. [Familiarity]problem. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe the relationship between modeling and simulation, i.e., thinking of simulation as dynamicDescribe the relationship between modeling and simulation, i.e., thinking of simulation as dynamicmodeling. [Familiarity]modeling. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Create a simple, formal mathematical model of a real-world situation and use that model in a simulation.Create a simple, formal mathematical model of a real-world situation and use that model in a simulation.[Usage]",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Differentiate among the different types of simulations, including physical simulations, human-guidedDifferentiate among the different types of simulations, including physical simulations, human-guidedsimulations, and virtual reality. [Familiarity]simulations, and virtual reality. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Describe several approaches to validating models. [Familiarity]Describe several approaches to validating models. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Create a simple display of the results of a simulation. [Usage]Create a simple display of the results of a simulation. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Modeling and Simulation",
       "intro": "",
       "topics": [
         { "content": "Purpose of modeling and simulation including optimization; supporting decision making, forecasting, safety considerations; for training and education",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Tradeoffs including performance, accuracy, validity, and complexity",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "The simulation process; identification of key characteristics or behaviors, simplifying assumptions; validation of outcomes",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Model building: use of mathematical formulas or equations, graphs, constraints; methodologies and techniques; use of time stepping for dynamic systems",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Formal models and modeling techniques: mathematical descriptions involving simplifying assumptions and avoiding detail. Examples of techniques include:",
           "num": "4",
           "subtopics": [         { "content": "Monte Carlo methods",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Stochastic processes",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Queuing theory",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Petri nets and colored Petri nets",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Graph structures such as directed graphs, trees, networks",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Games, game theory, the modeling of things using game theory",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Linear programming and its extensions",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Dynamic programming",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Differential equations: ODE, PDE",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Non-linear techniques",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "State spaces and transitions",
           "num": "10",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Assessing and evaluating models and simulations in a variety of contexts; verification and validation of models and simulations",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Important application areas including health care and diagnostics, economics and finance, city and urban planning, science, and engineering",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Software in support of simulation and modeling; packages, languages",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain and give examples of the benefits of simulation and modeling in a range of important applicationExplain and give examples of the benefits of simulation and modeling in a range of important applicationareas. [Familiarity]areas. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "2. Demonstrate the ability to apply the techniques of modeling and simulation to a range of problem areas.2. Demonstrate the ability to apply the techniques of modeling and simulation to a range of problem areas.[Usage]",
           "mastery": "No",
           "num": "1"
         },
         {"content": "3. Explain the constructs and concepts of a particular modeling approach. [Familiarity]3. Explain the constructs and concepts of a particular modeling approach. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "4. Explain the difference between validation and verification of a model; demonstrate the difference with4. Explain the difference between validation and verification of a model; demonstrate the difference withspecific examples 1 . [Assessment]specific examples 1 . ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "5. Verify and validate the results of a simulation. [Assessment]5. Verify and validate the results of a simulation. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "6. Evaluate a simulation, highlighting the benefits and the drawbacks. [Assessment]6. Evaluate a simulation, highlighting the benefits and the drawbacks. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "7. Choose an appropriate modeling approach for a given problem or situation. [Assessment]7. Choose an appropriate modeling approach for a given problem or situation. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "8. Compare results from different simulations of the same situation and explain any differences. [Assessment]8. Compare results from different simulations of the same situation and explain any differences. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "9. Infer the behavior of a system from the results of a simulation of the system. [Assessment]9. Infer the behavior of a system from the results of a simulation of the system. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "10. Extend or adapt an existing model to a new situation. [Assessment]10. Extend or adapt an existing model to a new situation. ",
           "mastery": "No",
           "num": "9"
         }
      ]}
      ,
      {"title": "Processing",
       "intro": "The processing topic area includes numerous topics from other knowledge areas. Specifically, coverage of processing should include a discussion of hardware architectures, including parallel systems, memory hierarchies, and interconnections among processors. These are covered in AR/Interfacing and Communication, AR/Multiprocessing and Alternative Architectures, AR/Performance Enhancements. ",
       "topics": [
         { "content": "Fundamental programming concepts:",
           "num": "0",
           "subtopics": [         { "content": "The concept of an algorithm consisting of a finite number of well-defined steps, each of which completes in a finite amount of time, as does the entire process.",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Examples of well-known algorithms such as sorting and searching.",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "The concept of analysis as understanding what the problem is really asking, how a problem can be approached using an algorithm, and how information is represented so that a machine can process it.",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "The development or identification of a workflow.",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "The process of converting an algorithm to machine-executable code.",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Software processes including lifecycle models, requirements, design, implementation, verification and maintenance.",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Machine representation of data computer arithmetic.",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Numerical methods",
           "num": "1",
           "subtopics": [         { "content": "Algorithms for numerically fitting data (e.g., Newton’s method)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Architectures for numerical computation, including parallel architectures",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Fundamental properties of parallel and distributed computation:",
           "num": "2",
           "subtopics": [         { "content": "Bandwidth.",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Latency.",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Scalability.",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Granularity.",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Parallelism including task, data, and event parallelism.",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Parallel architectures including processor architectures, memory and caching.",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Parallel programming paradigms including threading, message passing, event driven techniques, parallel software architectures, and MapReduce.",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Grid computing.",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "The impact of architecture on computational time.",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Total time to science curve for parallelism: continuum of things.",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Computing costs, e.g., the cost of re-computing a value vs. the cost of storing and lookup.",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain the characteristics and defining properties of algorithms and how they relate to machineExplain the characteristics and defining properties of algorithms and how they relate to machineprocessing. [Familiarity]processing. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Analyze simple problem statements to identify relevant information and select appropriate processing toAnalyze simple problem statements to identify relevant information and select appropriate processing tosolve the problem. [Assessment]solve the problem. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Identify or sketch a workflow for an existing computational process such as the creation of a graph basedIdentify or sketch a workflow for an existing computational process such as the creation of a graph basedon experimental data. [Familiarity]on experimental data. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe the process of converting an algorithm to machine-executable code. [Familiarity]Describe the process of converting an algorithm to machine-executable code. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Summarize the phases of software development and compare several common lifecycle models.Summarize the phases of software development and compare several common lifecycle models.[Familiarity]",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Explain how data is represented in a machine. Compare representations of integers to floating pointExplain how data is represented in a machine. Compare representations of integers to floating pointnumbers. Describe underflow, overflow, round off, and truncation errors in data representations.numbers. Describe underflow, overflow, round off, and truncation errors in data representations.[Familiarity]",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Apply standard numerical algorithms to solve ODEs and PDEs. Use computing systems to solve systems ofApply standard numerical algorithms to solve ODEs and PDEs. Use computing systems to solve systems ofequations. [Usage]equations. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "8. Describe the basic properties of bandwidth, latency, scalability and granularity. [Familiarity]8. Describe the basic properties of bandwidth, latency, scalability and granularity. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "9. Describe the levels of parallelism including task, data, and event parallelism. [Familiarity]9. Describe the levels of parallelism including task, data, and event parallelism. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "10. Compare and contrast parallel programming paradigms recognizing the strengths and weaknesses of each.10. Compare and contrast parallel programming paradigms recognizing the strengths and weaknesses of each.[Assessment]",
           "mastery": "No",
           "num": "9"
         },
         {"content": "11. Identify the issues impacting correctness and efficiency of a computation. [Familiarity]11. Identify the issues impacting correctness and efficiency of a computation. ",
           "mastery": "No",
           "num": "10"
         },
         {"content": "12. Design, code, test and debug programs for a parallel computation. [Usage]12. Design, code, test and debug programs for a parallel computation. ",
           "mastery": "No",
           "num": "11"
         }
      ]}
      ,
      {"title": "Interactive Visualization",
       "intro": "This sub-area is related to modeling and simulation. Most topics are discussed in detail in other knowledge areas in this document. There are many ways to present data and information, including immersion, realism, variable perspectives; haptics and heads-up displays, sonification, and gesture mapping. Interactive visualization in general requires understanding of human perception (GV/Basics); graphics pipelines, geometric representations and data structures (GV/Fundamental Concepts); 2D and 3D rendering, surface and volume rendering (GV/Rendering, GV/Modeling, and GV/Advanced Rendering); and the use of APIs for developing user interfaces using standard input components such as menus, sliders, and buttons; and standard output components for data display, including charts, graphs, tables, and histograms (HCI/GUI Construction, HCI/GUI Programming). ",
       "topics": [
         { "content": "Principles of data visualization",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Graphing and visualization algorithms",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Image processing techniques",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Scalability concerns",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Compare common computer interface mechanisms with respect to ease-of-use, learnability, and cost.Compare common computer interface mechanisms with respect to ease-of-use, learnability, and cost.[Assessment]",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Use standard APIs and tools to create visual displays of data, including graphs, charts, tables, andUse standard APIs and tools to create visual displays of data, including graphs, charts, tables, andhistograms. [Usage]histograms. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe several approaches to using a computer as a means for interacting with and processing data.Describe several approaches to using a computer as a means for interacting with and processing data.[Familiarity]",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Extract useful information from a dataset. [Assessment]Extract useful information from a dataset. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Analyze and select visualization techniques for specific problems. [Assessment]Analyze and select visualization techniques for specific problems. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Describe issues related to scaling data analysis from small to large data sets. [Familiarity]Describe issues related to scaling data analysis from small to large data sets. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Data, Information, and Knowledge",
       "intro": "Many topics are discussed in detail in other knowledge areas in this document, specifically Information Management (IM/Information Management Concepts, IM/Database Systems, and IM/Data Modeling), Algorithms and Complexity (AL/Basic Analysis, AL/Fundamental Data Structures and Algorithms), and Software Development Fundamentals (SDF/Fundamental Programming Concepts, SDF/Development Methods). ",
       "topics": [
         { "content": "Content management models, frameworks, systems, design methods (as in IM. Information Management)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Digital representations of content including numbers, text, images (e.g., raster and vector), video (e.g., QuickTime, MPEG2, MPEG4), audio (e.g., written score, MIDI, sampled digitized sound track) and animations; complex/composite/aggregate objects; FRBR",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Digital content creation/capture and preservation, including digitization, sampling, compression, conversion, transformation/translation, migration/emulation, crawling, harvesting",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Content structure / management, including digital libraries and static/dynamic/stream aspects for:",
           "num": "3",
           "subtopics": [         { "content": "Data: data structures, databases",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Information: document collections, multimedia pools, hyperbases (hypertext, hypermedia), catalogs, repositories",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Knowledge: ontologies, triple stores, semantic networks, rules",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Processing and pattern recognition, including indexing, searching (including: queries and query languages; central / federated / P2P), retrieving, clustering, classifying/categorizing, analyzing/mining/extracting, rendering, reporting, handling transactions",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "User / society support for presentation and interaction, including browse, search, filter, route, visualize, share, collaborate, rate, annotate, personalize, recommend",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Modeling, design, logical and physical implementation, using relevant systems/software",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Identify all of the data, information, and knowledge elements and related organizations, for a computationalIdentify all of the data, information, and knowledge elements and related organizations, for a computationalscience application. [Assessment]science application. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe how to represent data and information for processing. [Familiarity]Describe how to represent data and information for processing. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe typical user requirements regarding that data, information, and knowledge. [Familiarity]Describe typical user requirements regarding that data, information, and knowledge. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Select a suitable system or software implementation to manage data, information, and knowledge.Select a suitable system or software implementation to manage data, information, and knowledge.[Assessment]",
           "mastery": "No",
           "num": "3"
         },
         {"content": "List and describe the reports, transactions, and other processing needed for a computational scienceList and describe the reports, transactions, and other processing needed for a computational scienceapplication. [Familiarity]application. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Compare and contrast database management, information retrieval, and digital library systems with regardCompare and contrast database management, information retrieval, and digital library systems with regardto handling typical computational science applications. [Assessment]to handling typical computational science applications. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Design a digital library for some computational science users/societies, with appropriate content andDesign a digital library for some computational science users/societies, with appropriate content andservices. [Usage]services. ",
           "mastery": "No",
           "num": "6"
         }
      ]}
      ,
      {"title": "Numerical Analysis",
       "intro": "Cross-reference {AR/Machine Level Representation of Data} ",
       "topics": [
         { "content": "Error, stability, convergence, including truncation and round-off",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Function approximation including Taylor’s series, interpolation, extrapolation, and regression",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Numerical differentiation and integration (Simpson’s Rule, explicit and implicit methods)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Differential equations (Euler’s Method, finite differences)",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Define error, stability, machine precision concepts and the inexactness of computational approximations. [Familiarity]Define error, stability, machine precision concepts and the inexactness of computational approximations. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Implement Taylor series, interpolation, extrapolation, and regression algorithms for approximating functions. [Usage]Implement Taylor series, interpolation, extrapolation, and regression algorithms for approximating functions. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Implement algorithms for differentiation and integration. [Usage]Implement algorithms for differentiation and integration. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Implement algorithms for solving differential equations. [Usage]Implement algorithms for solving differential equations. ",
           "mastery": "No",
           "num": "3"
         }
      ]}
]},
{"abbrev": "SDF",
  "title": "Software Development Fundamentals",
  "intro": "Fluency in the process of software development is a prerequisite to the study of most of computer science. In order to use computers to solve problems effectively, students must be competent at reading and writing programs in multiple programming languages. Beyond programming skills, however, they must be able to design and analyze algorithms, select appropriate paradigms, and utilize modern development and testing tools. This knowledge area brings together those fundamental concepts and skills related to the software development process. As such, it provides a foundation for other software-oriented knowledge areas, most notably Programming Languages, Algorithms and Complexity, and Software Engineering. It is important to note that this knowledge area is distinct from the old Programming Fundamentals knowledge area from CC2001. Whereas that knowledge area focused exclusively on the programming skills required in an introductory computer science course, this new knowledge area is intended to fill a much broader purpose. It focuses on the entire software development process, identifying those concepts and skills that should be mastered in the first year of a computer science program. This includes the design and simple analysis of algorithms, fundamental programming concepts and data structures, and basic software development methods and tools. As a result of its broader purpose, the Software Development Fundamentals knowledge area includes fundamental concepts and skills that could naturally be listed in other software-oriented knowledge areas (e.g., programming constructs from Programming Languages, simple algorithm analysis from Algorithms & Complexity, simple development methodologies from Software Engineering). Likewise, each of these knowledge areas will contain more advanced material that builds upon the fundamental concepts and skills listed here. While broader in scope than the old Programming Fundamentals, this knowledge area still allows for considerable flexibility in the design of first-year curricula. For example, the Fundamental Programming Concepts unit identifies only those concepts that are common to all programming paradigms. It is expected that an instructor would select one or more programming paradigms (e.g., object-oriented programming, functional programming, scripting) to illustrate these programming concepts, and would pull paradigm-specific content from the Programming Languages knowledge area to fill out a course. Likewise, an instructor could choose to emphasize formal analysis (e.g., Big-Oh, computability) or design methodologies (e.g., team projects, software life cycle) early, thus integrating hours from the Programming Languages, Algorithms and Complexity, and/or Software Engineering knowledge areas. Thus, the 43 hours of material in this knowledge area will typically be augmented with core material from one or more of these knowledge areas to form a complete and coherent first-year experience. When considering the hours allocated to each knowledge unit, it should be noted that these hours reflect the minimal amount of classroom coverage needed to introduce the material. Many software development topics will reappear and be reinforced by later topics (e.g., applying iteration constructs when processing lists). In addition, the mastery of concepts and skills from this knowledge area requires a significant amount of software development experience outside of class. ",
  "units": [
      {"title": "Algorithms and Design",
       "intro": "",
       "topics": [
         { "content": "The concept and properties of algorithms",
           "num": "0",
           "subtopics": [         { "content": "Informal comparison of algorithm efficiency (e.g., operation counts)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "The role of algorithms in the problem-solving process",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Problem-solving strategies",
           "num": "2",
           "subtopics": [         { "content": "Iterative and recursive mathematical functions",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Iterative and recursive traversal of data structures",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Divide-and-conquer strategies",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Fundamental design concepts and principles",
           "num": "3",
           "subtopics": [         { "content": "Abstraction",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Program decomposition",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Encapsulation and information hiding",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Separation of behavior and implementation",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Discuss the importance of algorithms in the problem-solving process. [Familiarity]Discuss the importance of algorithms in the problem-solving process. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Discuss how a problem may be solved by multiple algorithms, each with different properties. [Familiarity]Discuss how a problem may be solved by multiple algorithms, each with different properties. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Create algorithms for solving simple problems. [Usage]Create algorithms for solving simple problems. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Use a programming language to implement, test, and debug algorithms for solving simple problems.Use a programming language to implement, test, and debug algorithms for solving simple problems.[Usage]",
           "mastery": "No",
           "num": "3"
         },
         {"content": "5. Implement, test, and debug simple recursive functions and procedures. [Usage]5. Implement, test, and debug simple recursive functions and procedures. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "6. Determine whether a recursive or iterative solution is most appropriate for a problem. [Assessment]6. Determine whether a recursive or iterative solution is most appropriate for a problem. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "7. Implement a divide-and-conquer algorithm for solving a problem. [Usage]7. Implement a divide-and-conquer algorithm for solving a problem. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "8. Apply the techniques of decomposition to break a program into smaller pieces. [Usage]8. Apply the techniques of decomposition to break a program into smaller pieces. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "9. Identify the data components and behaviors of multiple abstract data types. [Usage]9. Identify the data components and behaviors of multiple abstract data types. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "10. Implement a coherent abstract data type, with loose coupling between components and behaviors. [Usage]10. Implement a coherent abstract data type, with loose coupling between components and behaviors. ",
           "mastery": "No",
           "num": "9"
         },
         {"content": "11. Identify the relative strengths and weaknesses among multiple designs or implementations for a problem.11. Identify the relative strengths and weaknesses among multiple designs or implementations for a problem.[Assessment]",
           "mastery": "No",
           "num": "10"
         }
      ]}
      ,
      {"title": "Fundamental Programming Concepts",
       "intro": "",
       "topics": [
         { "content": "Arrays",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Records/structs (heterogeneous aggregates)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Strings and string processing",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Abstract data types and their implementation",
           "num": "3",
           "subtopics": [         { "content": "Stacks",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Queues",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Priority queues",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Sets",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Maps",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "References and aliasing",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Linked lists",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Strategies for choosing the appropriate data structure",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Analyze and explain the behavior of simple programs involving the fundamental programming constructs variables, expressions, assignments, I/O, control constructs, functions, parameter passing, and recursion. [Assessment]Analyze and explain the behavior of simple programs involving the fundamental programming constructs variables, expressions, assignments, I/O, control constructs, functions, parameter passing, and recursion. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Identify and describe uses of primitive data types. [Familiarity]Identify and describe uses of primitive data types. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Write programs that use primitive data types. [Usage]Write programs that use primitive data types. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Modify and expand short programs that use standard conditional and iterative control structures and functions. [Usage]Modify and expand short programs that use standard conditional and iterative control structures and functions. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Design, implement, test, and debug a program that uses each of the following fundamentalDesign, implement, test, and debug a program that uses each of the following fundamentalprogramming constructs: basic computation, simple I/O, standard conditional and iterative structures,programming constructs: basic computation, simple I/O, standard conditional and iterative structures,the definition of functions, and parameter passing. [Usage]the definition of functions, and parameter passing. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Write a program that uses file I/O to provide persistence across multiple executions. [Usage]Write a program that uses file I/O to provide persistence across multiple executions. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Choose appropriate conditional and iteration constructs for a given programming task. [Assessment]Choose appropriate conditional and iteration constructs for a given programming task. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Describe the concept of recursion and give examples of its use. [Familiarity]Describe the concept of recursion and give examples of its use. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Identify the base case and the general case of a recursively-defined problem. [Assessment]Identify the base case and the general case of a recursively-defined problem. ",
           "mastery": "No",
           "num": "8"
         }
      ]}
      ,
      {"title": "Fundamental Data Structures",
       "intro": "",
       "topics": [
         { "content": "Arrays",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Records/structs (heterogeneous aggregates)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Strings and string processing",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Abstract data types and their implementation",
           "num": "3",
           "subtopics": [         { "content": "Stacks",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Queues",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Priority queues",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Sets",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Maps",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "References and aliasing",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Linked lists",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Strategies for choosing the appropriate data structure",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Discuss the appropriate use of built-in data structures. [Familiarity]Discuss the appropriate use of built-in data structures. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe common applications for each of the following data structures: stack, queue, priority queue, set,Describe common applications for each of the following data structures: stack, queue, priority queue, set,and map. [Familiarity]and map. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Write programs that use each of the following data structures: arrays, records/structs, strings, linked lists,Write programs that use each of the following data structures: arrays, records/structs, strings, linked lists,stacks, queues, sets, and maps. [Usage]stacks, queues, sets, and maps. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Compare alternative implementations of data structures with respect to performance. [Assessment]Compare alternative implementations of data structures with respect to performance. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Describe how references allow for objects to be accessed in multiple ways. [Familiarity]Describe how references allow for objects to be accessed in multiple ways. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Compare and contrast the costs and benefits of dynamic and static data structure implementations.Compare and contrast the costs and benefits of dynamic and static data structure implementations.[Assessment]",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Choose the appropriate data structure for modeling a given problem. [Assessment]Choose the appropriate data structure for modeling a given problem. ",
           "mastery": "No",
           "num": "6"
         }
      ]}
      ,
      {"title": "Development Methods",
       "intro": "",
       "topics": [
         { "content": "Program comprehension",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Program correctness",
           "num": "1",
           "subtopics": [         { "content": "Types of errors (syntax, logic, run-time)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "The concept of a specification",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Defensive programming (e.g. secure coding, exception handling)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Code reviews",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Testing fundamentals and test-case generation",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "The role and the use of contracts, including pre- and post-conditions",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Unit testing",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Simple refactoring",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Modern programming environments",
           "num": "3",
           "subtopics": [         { "content": "Code search",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Programming using library components and their APIs",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Debugging strategies",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Documentation and program style",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Trace the execution of a variety of code segments and write summaries of their computations. [Assessment]Trace the execution of a variety of code segments and write summaries of their computations. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain why the creation of correct program components is important in the production of high-qualityExplain why the creation of correct program components is important in the production of high-qualitysoftware. [Familiarity]software. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "3. Identify common coding errors that lead to insecure programs (e.g., buffer overflows, memory leaks,3. Identify common coding errors that lead to insecure programs (e.g., buffer overflows, memory leaks,malicious code) and apply strategies for avoiding such errors. [Usage]malicious code) and apply strategies for avoiding such errors. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "4. Conduct a personal code review (focused on common coding errors) on a program component using a4. Conduct a personal code review (focused on common coding errors) on a program component using aprovided checklist. [Usage]provided checklist. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "5. Contribute to a small-team code review focused on component correctness. [Usage]5. Contribute to a small-team code review focused on component correctness. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "6. Describe how a contract can be used to specify the behavior of a program component. [Familiarity]6. Describe how a contract can be used to specify the behavior of a program component. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "7. Refactor a program by identifying opportunities to apply procedural abstraction. [Usage]7. Refactor a program by identifying opportunities to apply procedural abstraction. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "8. Apply a variety of strategies to the testing and debugging of simple programs. [Usage]8. Apply a variety of strategies to the testing and debugging of simple programs. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "9. Construct, execute and debug programs using a modern IDE and associated tools such as unit testing tools9. Construct, execute and debug programs using a modern IDE and associated tools such as unit testing toolsand visual debuggers. [Usage]and visual debuggers. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "10. Construct and debug programs using the standard libraries available with a chosen programming language. [Usage]10. Construct and debug programs using the standard libraries available with a chosen programming language. ",
           "mastery": "No",
           "num": "9"
         },
         {"content": "11. Analyze the extent to which another programmer’s code meets documentation and programming style11. Analyze the extent to which another programmer’s code meets documentation and programming stylestandards. [Assessment]standards. ",
           "mastery": "No",
           "num": "10"
         },
         {"content": "12. Apply consistent documentation and program style standards that contribute to the readability and maintainability of software. [Usage]12. Apply consistent documentation and program style standards that contribute to the readability and maintainability of software. ",
           "mastery": "No",
           "num": "11"
         }
      ]}
]},
{"abbrev": "PL",
  "title": "Programming Languages",
  "intro": "Programming languages are the medium through which programmers precisely describe concepts, formulate algorithms, and reason about solutions. In the course of a career, a computer scientist will work with many different languages, separately or together. Software developers must understand the programming models underlying different languages and make informed design choices in languages supporting multiple complementary approaches. Computer scientists will often need to learn new languages and programming constructs, and must understand the principles underlying how programming language features are defined, composed, and implemented. The effective use of programming languages, and appreciation of their limitations, also requires a basic knowledge of programming language translation and static program analysis, as well as run-time components such as memory management. ",
  "units": [
      {"title": "Object-Oriented Programming",
       "intro": "",
       "topics": [
         { "content": "Object-oriented design",
           "num": "0",
           "subtopics": [         { "content": "Decomposition into objects carrying state and having behavior",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Class-hierarchy design for modeling",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Definition of classes: fields, methods, and constructors",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Subclasses, inheritance, and method overriding",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Dynamic dispatch: definition of method-call",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Subtyping (",
           "num": "4",
           "subtopics": [         { "content": "Subtype polymorphism; implicit upcasts in typed languages",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Notion of behavioral replacement: subtypes acting like supertypes",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Relationship between subtyping and inheritance",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": " {PL_Type_Systems}{PL/Type Systems})"         },
         { "content": "Object-oriented idioms for encapsulation",
           "num": "5",
           "subtopics": [         { "content": "Privacy and visibility of class members",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Interfaces revealing only method signatures",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Abstract base classes",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Using collection classes, iterators, and other common library components",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Design and implement a class. [Usage]Design and implement a class. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Use subclassing to design simple class hierarchies that allow code to be reused for distinct subclasses.Use subclassing to design simple class hierarchies that allow code to be reused for distinct subclasses.[Usage]",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Correctly reason about control flow in a program using dynamic dispatch. [Usage]Correctly reason about control flow in a program using dynamic dispatch. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Compare and contrast (1) the procedural/functional approach (defining a function for each operation withCompare and contrast (1) the procedural/functional approach (defining a function for each operation withthe function body providing a case for each data variant) and (2) the object-oriented approach (defining athe function body providing a case for each data variant) and (2) the object-oriented approach (defining aclass for each data variant with the class definition providing a method for each operation). Understandclass for each data variant with the class definition providing a method for each operation). Understandboth as defining a matrix of operations and variants. [Assessment]both as defining a matrix of operations and variants. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Explain the relationship between object-oriented inheritance (code-sharing and overriding) and subtypingExplain the relationship between object-oriented inheritance (code-sharing and overriding) and subtyping(the idea of a subtype being usable in a context that expects the supertype). [Familiarity](the idea of a subtype being usable in a context that expects the supertype). ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Use object-oriented encapsulation mechanisms such as interfaces and private members. [Usage]Use object-oriented encapsulation mechanisms such as interfaces and private members. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Define and use iterators and other operations on aggregates, including operations that take functions asDefine and use iterators and other operations on aggregates, including operations that take functions asarguments, in multiple programming languages, selecting the most natural idioms for each language.arguments, in multiple programming languages, selecting the most natural idioms for each language.[Usage]",
           "mastery": "No",
           "num": "6"
         }
      ]}
      ,
      {"title": "Functional Programming",
       "intro": "",
       "topics": [
         { "content": "Effect-free programming",
           "num": "0",
           "subtopics": [         { "content": "Function calls have no side effects, facilitating compositional reasoning",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Variables are immutable, preventing unexpected changes to program data by other code",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Data can be freely aliased or copied without introducing unintended effects from mutation",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Processing structured data (e.g., trees) via functions with cases for each data variant",
           "num": "1",
           "subtopics": [         { "content": "Associated language constructs such as discriminated unions and pattern-matching over them",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Functions defined over compound data in terms of functions applied to the constituent pieces",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "First-class functions (taking, returning, and storing functions)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Function closures (functions using variables in the enclosing lexical environment)",
           "num": "3",
           "subtopics": [         { "content": "Basic meaning and definition -- creating closures at run-time by capturing the environment",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Canonical idioms: call-backs, arguments to iterators, reusable code via function arguments",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Using a closure to encapsulate data in its environment",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Currying and partial application",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Defining higher-order operations on aggregates, especially map, reduce/fold, and filter",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Write basic algorithms that avoid assigning to mutable state or considering reference equality. [Usage]Write basic algorithms that avoid assigning to mutable state or considering reference equality. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Write useful functions that take and return other functions. [Usage]Write useful functions that take and return other functions. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Compare and contrast (1) the procedural/functional approach (defining a function for each operation with the function body providing a case for each data variant) and (2) the object-oriented approach (defining a class for each data variant with the class definition providing a method for each operation). Understand both as defining a matrix of operations and variants. [Assessment]Compare and contrast (1) the procedural/functional approach (defining a function for each operation with the function body providing a case for each data variant) and (2) the object-oriented approach (defining a class for each data variant with the class definition providing a method for each operation). Understand both as defining a matrix of operations and variants. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Correctly reason about variables and lexical scope in a program using function closures. [Usage]Correctly reason about variables and lexical scope in a program using function closures. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Use functional encapsulation mechanisms such as closures and modular interfaces. [Usage]Use functional encapsulation mechanisms such as closures and modular interfaces. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Define and use iterators and other operations on aggregates, including operations that take functions asDefine and use iterators and other operations on aggregates, including operations that take functions asarguments, in multiple programming languages, selecting the most natural idioms for each language.arguments, in multiple programming languages, selecting the most natural idioms for each language.[Usage]",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Event-Driven and Reactive Programming",
       "intro": "This material can stand alone or be integrated with other knowledge units on concurrency, asynchrony, and threading to allow contrasting events with threads. ",
       "topics": [
         { "content": "Events and event handlers",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Canonical uses such as GUIs, mobile devices, robots, servers",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Using a reactive framework",
           "num": "2",
           "subtopics": [         { "content": "Defining event handlers/listeners",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Main event loop not under event-handler-writer’s control",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Externally-generated events and program-generated events",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Separation of model, view, and controller",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Write event handlers for use in reactive systems, such as GUIs. [Usage]Write event handlers for use in reactive systems, such as GUIs. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain why an event-driven programming style is natural in domains where programs react to externalExplain why an event-driven programming style is natural in domains where programs react to externalevents. [Familiarity]events. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe an interactive system in terms of a model, a view, and a controller. [Familiarity]Describe an interactive system in terms of a model, a view, and a controller. ",
           "mastery": "No",
           "num": "2"
         }
      ]}
      ,
      {"title": "Basic Type Systems",
       "intro": "",
       "topics": [
         { "content": "A type as a set of values together with a set of operations",
           "num": "0",
           "subtopics": [         { "content": "Primitive types (e.g., numbers, Booleans)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Compound types built from other types (e.g., records, unions, arrays, lists, functions, references)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Association of types to variables, arguments, results, and fields",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Type safety and errors caused by using values inconsistently given their intended types",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Goals and limitations of static typing",
           "num": "3",
           "subtopics": [         { "content": "Eliminating some classes of errors without running the program",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Undecidability means static analysis must conservatively approximate program behavior",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Generic types (parametric polymorphism)",
           "num": "4",
           "subtopics": [         { "content": "Definition",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Use for generic libraries such as collections",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Comparison with ad hoc polymorphism (overloading) and subtype polymorphism",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Complementary benefits of static and dynamic typing",
           "num": "5",
           "subtopics": [         { "content": "Errors early vs. errors late/avoided",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Enforce invariants during code development and code maintenance vs. postpone typing decisions",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "while prototyping and conveniently allow flexible coding patterns such as heterogeneous",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "collections",
           "num": "7",
           "subtopics": [         { "content": "Avoid misuse of code vs. allow more code reuse",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Detect incomplete programs vs. allow incomplete programs to run",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "For both a primitive and a compound type, informally describe the values that have that type. [Familiarity]For both a primitive and a compound type, informally describe the values that have that type. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "For a language with a static type system, describe the operations that are forbidden statically, such asFor a language with a static type system, describe the operations that are forbidden statically, such aspassing the wrong type of value to a function or method. [Familiarity]passing the wrong type of value to a function or method. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe examples of program errors detected by a type system. [Familiarity]Describe examples of program errors detected by a type system. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "For multiple programming languages, identify program properties checked statically and programFor multiple programming languages, identify program properties checked statically and programproperties checked dynamically. [Usage]properties checked dynamically. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Give an example program that does not type-check in a particular language and yet would have no error ifGive an example program that does not type-check in a particular language and yet would have no error ifrun. [Familiarity]run. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Use types and type-error messages to write and debug programs. [Usage]Use types and type-error messages to write and debug programs. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Explain how typing rules define the set of operations that are legal for a type. [Familiarity]Explain how typing rules define the set of operations that are legal for a type. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Write down the type rules governing the use of a particular compound type. [Usage]Write down the type rules governing the use of a particular compound type. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Explain why undecidability requires type systems to conservatively approximate program behavior.Explain why undecidability requires type systems to conservatively approximate program behavior.[Familiarity]",
           "mastery": "No",
           "num": "8"
         },
         {"content": "10. Define and use program pieces (such as functions, classes, methods) that use generic types, including for10. Define and use program pieces (such as functions, classes, methods) that use generic types, including forcollections. [Usage]collections. ",
           "mastery": "No",
           "num": "9"
         },
         {"content": "11. Discuss the differences among generics, subtyping, and overloading. [Familiarity]11. Discuss the differences among generics, subtyping, and overloading. ",
           "mastery": "No",
           "num": "10"
         },
         {"content": "12. Explain multiple benefits and limitations of static typing in writing, maintaining, and debugging software.12. Explain multiple benefits and limitations of static typing in writing, maintaining, and debugging software.[Familiarity]",
           "mastery": "No",
           "num": "11"
         }
      ]}
      ,
      {"title": "Program Representation",
       "intro": "",
       "topics": [
         { "content": "Programs that take (other) programs as input such as interpreters, compilers, type-checkers, documentation generators",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Abstract syntax trees; contrast with concrete syntax",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Data structures to represent code for execution, translation, or transmission",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain how programs that process other programs treat the other programs as their input data.Explain how programs that process other programs treat the other programs as their input data.[Familiarity]",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe an abstract syntax tree for a small language. [Usage]Describe an abstract syntax tree for a small language. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe the benefits of having program representations other than strings of source code. [Familiarity]Describe the benefits of having program representations other than strings of source code. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Write a program to process some representation of code for some purpose, such as an interpreter, anWrite a program to process some representation of code for some purpose, such as an interpreter, anexpression optimizer, or a documentation generator. [Usage]expression optimizer, or a documentation generator. ",
           "mastery": "No",
           "num": "3"
         }
      ]}
      ,
      {"title": "Language Translation and Execution",
       "intro": "",
       "topics": [
         { "content": "Interpretation vs. compilation to native code vs. compilation to portable intermediate representation",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Language translation pipeline: parsing, optional type-checking, translation, linking, execution",
           "num": "1",
           "subtopics": [         { "content": "Execution as native code or within a virtual machine",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Alternatives like dynamic loading and dynamic (or “just-in-time”) code generation",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Run-time representation of core language constructs such as objects (method tables) and first-class functions (closures)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Run-time layout of memory: call-stack, heap, static data",
           "num": "3",
           "subtopics": [         { "content": "Implementing loops, recursion, and tail calls",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Memory management",
           "num": "4",
           "subtopics": [         { "content": "Manual memory management: allocating, de-allocating, and reusing heap memory",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Automated memory management: garbage collection as an automated technique using the notion of reachability",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Distinguish a language definition (what constructs mean) from a particular language implementationDistinguish a language definition (what constructs mean) from a particular language implementation(compiler vs. interpreter, run-time representation of data objects, etc.). [Familiarity](compiler vs. interpreter, run-time representation of data objects, etc.). ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Distinguish syntax and parsing from semantics and evaluation. [Familiarity]Distinguish syntax and parsing from semantics and evaluation. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Sketch a low-level run-time representation of core language constructs, such as objects or closures.Sketch a low-level run-time representation of core language constructs, such as objects or closures.[Familiarity]",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Explain how programming language implementations typically organize memory into global data, text,Explain how programming language implementations typically organize memory into global data, text,heap, and stack sections and how features such as recursion and memory management map to this memoryheap, and stack sections and how features such as recursion and memory management map to this memorymodel. [Familiarity]model. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Identify and fix memory leaks and dangling-pointer dereferences. [Usage]Identify and fix memory leaks and dangling-pointer dereferences. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Discuss the benefits and limitations of garbage collection, including the notion of reachability. [Familiarity]Discuss the benefits and limitations of garbage collection, including the notion of reachability. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Syntax Analysis",
       "intro": "",
       "topics": [
         { "content": "Scanning (lexical analysis) using regular expressions",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Parsing strategies including top-down (e.g., recursive descent, Earley parsing, or LL) and bottom-up (e.g., backtracking or LR) techniques; role of context-free grammars",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Generating scanners and parsers from declarative specifications",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Use formal grammars to specify the syntax of languages. [Usage]Use formal grammars to specify the syntax of languages. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Use declarative tools to generate parsers and scanners. [Usage]Use declarative tools to generate parsers and scanners. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Identify key issues in syntax definitions: ambiguity, associativity, precedence. [Familiarity]Identify key issues in syntax definitions: ambiguity, associativity, precedence. ",
           "mastery": "No",
           "num": "2"
         }
      ]}
      ,
      {"title": "Compiler Semantic Analysis",
       "intro": "",
       "topics": [
         { "content": "High-level program representations such as abstract syntax trees",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Scope and binding resolution",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Type checking",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Declarative specifications such as attribute grammars",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Implement context-sensitive, source-level static analyses such as type-checkers or resolving identifiers to identify their binding occurrences. [Usage]Implement context-sensitive, source-level static analyses such as type-checkers or resolving identifiers to identify their binding occurrences. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe semantic analyses using an attribute grammar. [Usage]Describe semantic analyses using an attribute grammar. ",
           "mastery": "No",
           "num": "1"
         }
      ]}
      ,
      {"title": "Code Generation",
       "intro": "",
       "topics": [
         { "content": "Procedure calls and method dispatching",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Separate compilation; linking",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Instruction selection",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Instruction scheduling",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Register allocation",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Peephole optimization",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Identify all essential steps for automatically converting source code into assembly or other low-levelIdentify all essential steps for automatically converting source code into assembly or other low-levellanguages. [Familiarity]languages. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Generate the low-level code for calling functions/methods in modern languages. [Usage]Generate the low-level code for calling functions/methods in modern languages. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Discuss why separate compilation requires uniform calling conventions. [Familiarity]Discuss why separate compilation requires uniform calling conventions. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Discuss why separate compilation limits optimization because of unknown effects of calls. [Familiarity]Discuss why separate compilation limits optimization because of unknown effects of calls. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Discuss opportunities for optimization introduced by naive translation and approaches for achievingDiscuss opportunities for optimization introduced by naive translation and approaches for achievingoptimization, such as instruction selection, instruction scheduling, register allocation, and peepholeoptimization, such as instruction selection, instruction scheduling, register allocation, and peepholeoptimization. [Familiarity]optimization. ",
           "mastery": "No",
           "num": "4"
         }
      ]}
      ,
      {"title": "Runtime Systems",
       "intro": "",
       "topics": [
         { "content": "Dynamic memory management approaches and techniques: malloc/free, garbage collection (mark-sweep, copying, reference counting), regions (also known as arenas or zones)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Data layout for objects and activation records",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Just-in-time compilation and dynamic recompilation Other common features of virtual machines, such as class loading, threads, and security.",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Compare the benefits of different memory-management schemes, using concepts such as fragmentation,Compare the benefits of different memory-management schemes, using concepts such as fragmentation,locality, and memory overhead. [Familiarity]locality, and memory overhead. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Discuss benefits and limitations of automatic memory management. [Familiarity]Discuss benefits and limitations of automatic memory management. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Explain the use of metadata in run-time representations of objects and activation records, such as classExplain the use of metadata in run-time representations of objects and activation records, such as classpointers, array lengths, return addresses, and frame pointers. [Familiarity]pointers, array lengths, return addresses, and frame pointers. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Discuss advantages, disadvantages, and difficulties of just-in-time and dynamic recompilation.Discuss advantages, disadvantages, and difficulties of just-in-time and dynamic recompilation.[Familiarity]",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Identify the services provided by modern language run-time systems. [Familiarity]Identify the services provided by modern language run-time systems. ",
           "mastery": "No",
           "num": "4"
         }
      ]}
      ,
      {"title": "Static Analysis",
       "intro": "",
       "topics": [
         { "content": "Relevant program representations, such as basic blocks, control-flow graphs, def-use chains, and static",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "single assignment",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Undecidability and consequences for program analysis",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Flow-insensitive analyses, such as type-checking and scalable pointer and alias analyses",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Flow-sensitive analyses, such as forward and backward dataflow analyses",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Path-sensitive analyses, such as software model checking",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Tools and frameworks for defining analyses",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Role of static analysis in program optimization",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Role of static analysis in (partial) verification and bug-finding",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Define useful static analyses in terms of a conceptual framework such as dataflow analysis. [Usage]Define useful static analyses in terms of a conceptual framework such as dataflow analysis. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain why non-trivial sound static analyses must be approximate. [Familiarity]Explain why non-trivial sound static analyses must be approximate. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Communicate why an analysis is correct (sound and terminating). [Usage]Communicate why an analysis is correct (sound and terminating). ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Distinguish “may” and “must” analyses. [Familiarity]Distinguish “may” and “must” analyses. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Explain why potential aliasing limits sound program analysis and how alias analysis can help. [Familiarity]Explain why potential aliasing limits sound program analysis and how alias analysis can help. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Use the results of a static analysis for program optimization and/or partial program correctness. [Usage]Use the results of a static analysis for program optimization and/or partial program correctness. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Advanced Programming Constructs",
       "intro": "",
       "topics": [
         { "content": "Lazy evaluation and infinite streams",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Control Abstractions: Exception Handling, Continuations, Monads",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Object-oriented abstractions: Multiple inheritance, Mixins, Traits, Multimethods",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Metaprogramming: Macros, Generative programming, Model-based development",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Module systems",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "String manipulation via pattern-matching (regular expressions)",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Dynamic code evaluation (“eval”)",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Language support for checking assertions, invariants, and pre/post-conditions",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Use various advanced programming constructs and idioms correctly. [Usage]Use various advanced programming constructs and idioms correctly. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Discuss how various advanced programming constructs aim to improve program structure, software quality, and programmer productivity. [Familiarity]Discuss how various advanced programming constructs aim to improve program structure, software quality, and programmer productivity. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Discuss how various advanced programming constructs interact with the definition and implementation of other language features. [Familiarity]Discuss how various advanced programming constructs interact with the definition and implementation of other language features. ",
           "mastery": "No",
           "num": "2"
         }
      ]}
      ,
      {"title": "Concurrency and Parallelism",
       "intro": "Support for concurrency is a fundamental programming-languages issue with rich material in programming language design, language implementation, and language theory. Due to coverage in other Knowledge Areas, this elective Knowledge Unit aims only to complement the material included elsewhere in the Body of Knowledge. Courses on programming languages are an excellent place to include a general treatment of concurrency including this other material. Cross-reference {PD/Parallel and Distributed Computing}, {SF/Parallelism}. ",
       "topics": [
         { "content": "Constructs for thread-shared variables and shared-memory synchronization",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Actor models",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Futures",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Language support for data parallelism",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Models for passing messages between sequential processes",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Effect of memory-consistency models on language semantics and correct code generation",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Write correct concurrent programs using multiple programming models, such as shared memory, actors, futures, and data-parallelism primitives. [Usage]Write correct concurrent programs using multiple programming models, such as shared memory, actors, futures, and data-parallelism primitives. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Use a message-passing model to analyze a communication protocol. [Usage]Use a message-passing model to analyze a communication protocol. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Explain why programming languages do not guarantee sequential consistency in the presence of data races and what programmers must do as a result. [Familiarity]Explain why programming languages do not guarantee sequential consistency in the presence of data races and what programmers must do as a result. ",
           "mastery": "No",
           "num": "2"
         }
      ]}
      ,
      {"title": "Type Systems",
       "intro": "",
       "topics": [
         { "content": "Compositional type constructors, such as product types (for aggregates), sum types (for unions), function",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "types, quantified types, and recursive types",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Type checking",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Type safety as preservation plus progress",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Type inference",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Static overloading",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Define a type system precisely and compositionally. [Usage]Define a type system precisely and compositionally. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "For various foundational type constructors, identify the values they describe and the invariants theyFor various foundational type constructors, identify the values they describe and the invariants theyenforce. [Familiarity]enforce. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Precisely specify the invariants preserved by a sound type system. [Familiarity]Precisely specify the invariants preserved by a sound type system. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Prove type safety for a simple language in terms of preservation and progress theorems. [Usage]Prove type safety for a simple language in terms of preservation and progress theorems. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Implement a unification-based type-inference algorithm for a simple language. [Usage]Implement a unification-based type-inference algorithm for a simple language. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Explain how static overloading and associated resolution algorithms influence the dynamic behavior ofExplain how static overloading and associated resolution algorithms influence the dynamic behavior ofprograms. [Familiarity]programs. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Formal Semantics",
       "intro": "",
       "topics": [
         { "content": "Syntax vs. semantics",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Lambda Calculus",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Approaches to semantics: Operational, Denotational, Axiomatic",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Proofs by induction over language semantics",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Formal definitions and proofs for type systems (",
           "num": "4",
           "addressed": "No"
,
           "xrefs": " {PL_Type_Systems}{PL/Type Systems})"         },
         { "content": "Parametricity (",
           "num": "5",
           "addressed": "No"
,
           "xrefs": " {PL_Type_Systems}{PL/Type Systems})"         },
         { "content": "Using formal semantics for systems modeling",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Give a formal semantics for a small language. [Usage]Give a formal semantics for a small language. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Write a lambda-calculus program and show its evaluation to a normal form. [Usage]Write a lambda-calculus program and show its evaluation to a normal form. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Discuss the different approaches of operational, denotational, and axiomatic semantics. [Familiarity]Discuss the different approaches of operational, denotational, and axiomatic semantics. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Use induction to prove properties of all programs in a language. [Usage]Use induction to prove properties of all programs in a language. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Use induction to prove properties of all programs in a language that are well-typed according to a formallyUse induction to prove properties of all programs in a language that are well-typed according to a formallydefined type system. [Usage]defined type system. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Use parametricity to establish the behavior of code given only its type. [Usage]Use parametricity to establish the behavior of code given only its type. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Use formal semantics to build a formal model of a software system other than a programming language.Use formal semantics to build a formal model of a software system other than a programming language.[Usage]",
           "mastery": "No",
           "num": "6"
         }
      ]}
      ,
      {"title": "Language Pragmatics",
       "intro": "",
       "topics": [
         { "content": "Principles of language design such as orthogonality",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Evaluation order, precedence, and associativity",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Eager vs. delayed evaluation",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Defining control and iteration constructs",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "External calls and system libraries",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Discuss the role of concepts such as orthogonality and well-chosen defaults in language design.Discuss the role of concepts such as orthogonality and well-chosen defaults in language design.[Familiarity]",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Use crisp and objective criteria for evaluating language-design decisions. [Usage]Use crisp and objective criteria for evaluating language-design decisions. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Give an example program whose result can differ under different rules for evaluation order, precedence, orGive an example program whose result can differ under different rules for evaluation order, precedence, orassociativity. [Usage]associativity. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Show uses of delayed evaluation, such as user-defined control abstractions. [Familiarity]Show uses of delayed evaluation, such as user-defined control abstractions. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Discuss the need for allowing calls to external calls and system libraries and the consequences for languageDiscuss the need for allowing calls to external calls and system libraries and the consequences for languageimplementation. [Familiarity]implementation. ",
           "mastery": "No",
           "num": "4"
         }
      ]}
      ,
      {"title": "Logic Programming",
       "intro": "",
       "topics": [
         { "content": "Clausal representation of data structures and algorithms",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Unification",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Backtracking and search",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Cuts",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Use a logic language to implement a conventional algorithm. [Usage]Use a logic language to implement a conventional algorithm. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Use a logic language to implement an algorithm employing implicit search using clauses, relations, andUse a logic language to implement an algorithm employing implicit search using clauses, relations, andcuts. [Usage]cuts. ",
           "mastery": "No",
           "num": "1"
         }
      ]}
]},
{"abbrev": "IM",
  "title": "Information Management",
  "intro": "Information Management is primarily concerned with the capture, digitization, representation, organization, transformation, and presentation of information; algorithms for efficient and effective access and updating of stored information; data modeling and abstraction; and physical file storage techniques. The student needs to be able to develop conceptual and physical data models, determine which IM methods and techniques are appropriate for a given problem, and be able to select and implement an appropriate IM solution that addresses relevant design concerns including scalability, accessibility and usability. We also note that IM is related to fundamental information security concepts that are described in the Information Assurance and Security (IAS) topic area, IAS/Fundamental Concepts. ",
  "units": [
      {"title": "Information Management Concepts",
       "intro": "",
       "topics": [
         { "content": "Information systems as socio-technical systems",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Basic information storage and retrieval (IS&R) concepts",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Information capture and representation",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Supporting human needs: searching, retrieving, linking, browsing, navigating",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Information management applications",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Declarative and navigational queries, use of links",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Analysis and indexing",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Quality issues: reliability, scalability, efficiency, and effectiveness",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe how humans gain access to information and data to support their needs. [Familiarity]Describe how humans gain access to information and data to support their needs. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe the advantages and disadvantages of central organizational control over data. [Assessment]Describe the advantages and disadvantages of central organizational control over data. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Identify the careers/roles associated with information management (e.g., database administrator, dataIdentify the careers/roles associated with information management (e.g., database administrator, datamodeler, application developer, end-user). [Familiarity]modeler, application developer, end-user). ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Compare and contrast information with data and knowledge. [Assessment]Compare and contrast information with data and knowledge. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Demonstrate uses of explicitly stored metadata/schema associated with data. [Usage]Demonstrate uses of explicitly stored metadata/schema associated with data. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Identify issues of data persistence for an organization. [Familiarity]Identify issues of data persistence for an organization. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Critique an information application with regard to satisfying user information needs. [Assessment]Critique an information application with regard to satisfying user information needs. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Explain uses of declarative queries. [Familiarity]Explain uses of declarative queries. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Give a declarative version for a navigational query. [Familiarity]Give a declarative version for a navigational query. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "Describe several technical solutions to the problems related to information privacy, integrity, security, andDescribe several technical solutions to the problems related to information privacy, integrity, security, andpreservation. [Familiarity]preservation. ",
           "mastery": "No",
           "num": "9"
         },
         {"content": "11. Explain measures of efficiency (throughput, response time) and effectiveness (recall, precision).11. Explain measures of efficiency (throughput, response time) and effectiveness (recall, precision).[Familiarity]",
           "mastery": "No",
           "num": "10"
         },
         {"content": "12. Describe approaches to scale up information systems. [Familiarity]12. Describe approaches to scale up information systems. ",
           "mastery": "No",
           "num": "11"
         },
         {"content": "13. Identify vulnerabilities and failure scenarios in common forms of information systems. [Usage]13. Identify vulnerabilities and failure scenarios in common forms of information systems. ",
           "mastery": "No",
           "num": "12"
         }
      ]}
      ,
      {"title": "Database Systems",
       "intro": "",
       "topics": [
         { "content": "Approaches to and evolution of database systems",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Components of database systems",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Design of core DBMS functions (e.g., query mechanisms, transaction management, buffer management, access methods)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Database architecture and data independence",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Use of a declarative query language",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Systems supporting structured and/or stream content",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Approaches for managing large volumes of data (e.g., noSQL database systems, use of MapReduce).",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain the characteristics that distinguish the database approach from the approach of programming withExplain the characteristics that distinguish the database approach from the approach of programming withdata files. [Familiarity]data files. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe the most common designs for core database system components including the query optimizer,Describe the most common designs for core database system components including the query optimizer,query executor, storage manager, access methods, and transaction processor. [Familiarity]query executor, storage manager, access methods, and transaction processor. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Cite the basic goals, functions, and models of database systems. [Familiarity]Cite the basic goals, functions, and models of database systems. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe the components of a database system and give examples of their use. [Familiarity]Describe the components of a database system and give examples of their use. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Identify major DBMS functions and describe their role in a database system. [Familiarity]Identify major DBMS functions and describe their role in a database system. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Explain the concept of data independence and its importance in a database system. [Familiarity]Explain the concept of data independence and its importance in a database system. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Use a declarative query language to elicit information from a database. [Usage]Use a declarative query language to elicit information from a database. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Describe facilities that datatbases provide supporting structures and/or stream (sequence) data, e.g., text.Describe facilities that datatbases provide supporting structures and/or stream (sequence) data, e.g., text.[Familiarity]",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Describe major approaches to storing and processing large volumes of data. [Familiarity]Describe major approaches to storing and processing large volumes of data. ",
           "mastery": "No",
           "num": "8"
         }
      ]}
      ,
      {"title": "Data Modeling",
       "intro": "",
       "topics": [
         { "content": "Data modeling",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Conceptual models (e.g., entity-relationship, UML diagrams)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Spreadsheet models",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Relational data models",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Object-oriented models (",
           "num": "4",
           "addressed": "No"
,
           "xrefs": " {PL/Object-Oriented Programming})"         },
         { "content": "Semi-structured data model (expressed using DTD or XML Schema, for example)",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Compare and contrast appropriate data models, including internal structures, for different types of data.Compare and contrast appropriate data models, including internal structures, for different types of data.[Assessment]",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe concepts in modeling notation (e.g., Entity-Relation Diagrams or UML) and how they would be used. [Familiarity]Describe concepts in modeling notation (e.g., Entity-Relation Diagrams or UML) and how they would be used. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Define the fundamental terminology used in the relational data model. [Familiarity]Define the fundamental terminology used in the relational data model. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe the basic principles of the relational data model. [Familiarity]Describe the basic principles of the relational data model. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Apply the modeling concepts and notation of the relational data model. [Usage]Apply the modeling concepts and notation of the relational data model. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Describe the main concepts of the OO model such as object identity, type constructors, encapsulation,Describe the main concepts of the OO model such as object identity, type constructors, encapsulation,inheritance, polymorphism, and versioning. [Familiarity]inheritance, polymorphism, and versioning. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Describe the differences between relational and semi-structured data models. [Assessment]Describe the differences between relational and semi-structured data models. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Give a semi-structured equivalent (e.g., in DTD or XML Schema) for a given relational schema. [Usage]Give a semi-structured equivalent (e.g., in DTD or XML Schema) for a given relational schema. ",
           "mastery": "No",
           "num": "7"
         }
      ]}
      ,
      {"title": "Indexing",
       "intro": "",
       "topics": [
         { "content": "The impact of indices on query performance",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "The basic structure of an index",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Keeping a buffer of data in memory",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Creating indexes with SQL",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Indexing text",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Indexing the web (e.g., web crawling)",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Generate an index file for a collection of resources. [Usage]Generate an index file for a collection of resources. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain the role of an inverted index in locating a document in a collection. [Familiarity]Explain the role of an inverted index in locating a document in a collection. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Explain how stemming and stop words affect indexing. [Familiarity]Explain how stemming and stop words affect indexing. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Identify appropriate indices for given relational schema and query set. [Usage]Identify appropriate indices for given relational schema and query set. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Estimate time to retrieve information, when indices are used compared to when they are not used. [Usage]Estimate time to retrieve information, when indices are used compared to when they are not used. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Describe key challenges in web crawling, e.g., detecting duplicate documents, determining the crawlingDescribe key challenges in web crawling, e.g., detecting duplicate documents, determining the crawlingfrontier. [Familiarity]frontier. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Relational Databases",
       "intro": "",
       "topics": [
         { "content": "Mapping conceptual schema to a relational schema",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Entity and referential integrity",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Relational algebra and relational calculus",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Relational Database design",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Functional dependency",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Decomposition of a schema; lossless-join and dependency-preservation properties of a decomposition",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Candidate keys, superkeys, and closure of a set of attributes",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Normal forms (BCNF)",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Multi-valued dependency (4NF)",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Join dependency (PJNF, 5NF)",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Representation theory",
           "num": "10",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Prepare a relational schema from a conceptual model developed using the entity- relationship model.Prepare a relational schema from a conceptual model developed using the entity- relationship model.[Usage]",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain and demonstrate the concepts of entity integrity constraint and referential integrity constraintExplain and demonstrate the concepts of entity integrity constraint and referential integrity constraint(including definition of the concept of a foreign key). [Usage](including definition of the concept of a foreign key). ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Demonstrate use of the relational algebra operations from mathematical set theory (union, intersection,Demonstrate use of the relational algebra operations from mathematical set theory (union, intersection,difference, and Cartesian product) and the relational algebra operations developed specifically for relationaldifference, and Cartesian product) and the relational algebra operations developed specifically for relationaldatabases (select (restrict), project, join, and division). [Usage]databases (select (restrict), project, join, and division). ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Write queries in the relational algebra. [Usage]Write queries in the relational algebra. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Write queries in the tuple relational calculus. [Usage]Write queries in the tuple relational calculus. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Determine the functional dependency between two or more attributes that are a subset of a relation.Determine the functional dependency between two or more attributes that are a subset of a relation.[Assessment]",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Connect constraints expressed as primary key and foreign key, with functional dependencies. [Usage]Connect constraints expressed as primary key and foreign key, with functional dependencies. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Compute the closure of a set of attributes under given functional dependencies. [Usage]Compute the closure of a set of attributes under given functional dependencies. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Determine whether a set of attributes form a superkey and/or candidate key for a relation with givenDetermine whether a set of attributes form a superkey and/or candidate key for a relation with givenfunctional dependencies. [Assessment]functional dependencies. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "Evaluate a proposed decomposition, to say whether it has lossless-join and dependency-preservation.Evaluate a proposed decomposition, to say whether it has lossless-join and dependency-preservation.[Assessment]",
           "mastery": "No",
           "num": "9"
         },
         {"content": "Describe the properties of BCNF, PJNF, 5NF. [Familiarity]Describe the properties of BCNF, PJNF, 5NF. ",
           "mastery": "No",
           "num": "10"
         },
         {"content": "Explain the impact of normalization on the efficiency of database operations especially query optimization.Explain the impact of normalization on the efficiency of database operations especially query optimization.[Familiarity]",
           "mastery": "No",
           "num": "11"
         },
         {"content": "Describe what is a multi-valued dependency and what type of constraints it specifies. [Familiarity]Describe what is a multi-valued dependency and what type of constraints it specifies. ",
           "mastery": "No",
           "num": "12"
         }
      ]}
      ,
      {"title": "Query Languages",
       "intro": "",
       "topics": [
         { "content": "Overview of database languages",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "SQL (data definition, query formulation, update sublanguage, constraints, integrity)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Selections",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Projections",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Select-project-join",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Aggregates and group-by",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Subqueries",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "QBE and 4th-generation environments",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Different ways to invoke non-procedural queries in conventional languages",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Introduction to other major query languages (e.g., XPATH, SPARQL)",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Stored procedures",
           "num": "10",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Create a relational database schema in SQL that incorporates key, entity integrity, and referential integrityCreate a relational database schema in SQL that incorporates key, entity integrity, and referential integrityconstraints. [Usage]constraints. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Use SQL to create tables and retrieve (SELECT) information from a database. [Usage]Use SQL to create tables and retrieve (SELECT) information from a database. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Evaluate a set of query processing strategies and select the optimal strategy. [Assessment]Evaluate a set of query processing strategies and select the optimal strategy. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Create a non-procedural query by filling in templates of relations to construct an example of the desiredCreate a non-procedural query by filling in templates of relations to construct an example of the desiredquery result. [Usage]query result. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Embed object-oriented queries into a stand-alone language such as C++ or Java (e.g., SELECTEmbed object-oriented queries into a stand-alone language such as C++ or Java (e.g., SELECTCol.Method() FROM Object). [Usage]Col.Method() FROM Object). ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Write a stored procedure that deals with parameters and has some control flow, to provide a givenWrite a stored procedure that deals with parameters and has some control flow, to provide a givenfunctionality. [Usage]functionality. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Transaction Processing",
       "intro": "",
       "topics": [
         { "content": "Transactions",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Failure and recovery",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Concurrency control",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Interaction of transaction management with storage, especially buffering",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Create a transaction by embedding SQL into an application program. [Usage]Create a transaction by embedding SQL into an application program. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain the concept of implicit commits. [Familiarity]Explain the concept of implicit commits. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe the issues specific to efficient transaction execution. [Familiarity]Describe the issues specific to efficient transaction execution. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Explain when and why rollback is needed and how logging assures proper rollback. [Assessment]Explain when and why rollback is needed and how logging assures proper rollback. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Explain the effect of different isolation levels on the concurrency control mechanisms. [Assessment]Explain the effect of different isolation levels on the concurrency control mechanisms. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Choose the proper isolation level for implementing a specified transaction protocol. [Assessment]Choose the proper isolation level for implementing a specified transaction protocol. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Identify appropriate transaction boundaries in application programs. [Assessment]Identify appropriate transaction boundaries in application programs. ",
           "mastery": "No",
           "num": "6"
         }
      ]}
      ,
      {"title": "Distributed Databases",
       "intro": "",
       "topics": [
         { "content": "Distributed DBMS",
           "num": "0",
           "subtopics": [         { "content": "Distributed data storage",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Distributed query processing",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Distributed transaction model",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Homogeneous and heterogeneous solutions",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Client-server distributed databases (",
           "num": "4",
           "addressed": "No"
,
           "xrefs": " {SF_Computational_Paradigms}{SF/Computational Paradigms})"         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Parallel DBMS",
           "num": "1",
           "subtopics": [         { "content": "Parallel DBMS architectures: shared memory, shared disk, shared nothing;",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Speedup and scale-up, e.g., use of the MapReduce processing model (",
           "num": "1",
           "addressed": "No"
,
           "xrefs": " {CN_Processing}{CN/Processing}, {PD_Parallel_Decomposition}{PD/Parallel Decomposition})"         }, 
         { "content": "Data replication and weak consistency models",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain the techniques used for data fragmentation, replication, and allocation during the distributedExplain the techniques used for data fragmentation, replication, and allocation during the distributeddatabase design process. [Familiarity]database design process. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Evaluate simple strategies for executing a distributed query to select the strategy that minimizes the amountEvaluate simple strategies for executing a distributed query to select the strategy that minimizes the amountof data transfer. [Assessment]of data transfer. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Explain how the two-phase commit protocol is used to deal with committing a transaction that accessesExplain how the two-phase commit protocol is used to deal with committing a transaction that accessesdatabases stored on multiple nodes. [Familiarity]databases stored on multiple nodes. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe distributed concurrency control based on the distinguished copy techniques and the votingDescribe distributed concurrency control based on the distinguished copy techniques and the votingmethod. [Familiarity]method. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Describe the three levels of software in the client-server model. [Familiarity]Describe the three levels of software in the client-server model. ",
           "mastery": "No",
           "num": "4"
         }
      ]}
      ,
      {"title": "Physical Database Design",
       "intro": "",
       "topics": [
         { "content": "Storage and file structure",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Indexed files",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Hashed files",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Signature files",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "B-trees",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Files with dense index",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Files with variable length records",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Database efficiency and tuning",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain the concepts of records, record types, and files, as well as the different techniques for placing fileExplain the concepts of records, record types, and files, as well as the different techniques for placing filerecords on disk. [Familiarity]records on disk. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Give examples of the application of primary, secondary, and clustering indexes. [Familiarity]Give examples of the application of primary, secondary, and clustering indexes. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Distinguish between a non-dense index and a dense index. [Assessment]Distinguish between a non-dense index and a dense index. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Implement dynamic multilevel indexes using B-trees. [Usage]Implement dynamic multilevel indexes using B-trees. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Explain the theory and application of internal and external hashing techniques. [Familiarity]Explain the theory and application of internal and external hashing techniques. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Use hashing to facilitate dynamic file expansion. [Usage]Use hashing to facilitate dynamic file expansion. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Describe the relationships among hashing, compression, and efficient database searches. [Familiarity]Describe the relationships among hashing, compression, and efficient database searches. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Evaluate costs and benefits of various hashing schemes. [Assessment]Evaluate costs and benefits of various hashing schemes. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Explain how physical database design affects database transaction efficiency. [Familiarity]Explain how physical database design affects database transaction efficiency. ",
           "mastery": "No",
           "num": "8"
         }
      ]}
      ,
      {"title": "Data Mining",
       "intro": "",
       "topics": [
         { "content": "Uses of data mining",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Data mining algorithms",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Associative and sequential patterns",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Data clustering",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Market basket analysis",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Data cleaning",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Data visualization (",
           "num": "6",
           "addressed": "No"
,
           "xrefs": " {GV_Visualization}{GV/Visualization} and {CN_Interactive_Visualization}{CN/Interactive Visualization})"         }
      ],
      "skills": [
         {"content": "Compare and contrast different uses of data mining as evidenced in both research and application.Compare and contrast different uses of data mining as evidenced in both research and application.[Assessment]",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain the value of finding associations in market basket data. [Familiarity]Explain the value of finding associations in market basket data. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Characterize the kinds of patterns that can be discovered by association rule mining. [Assessment]Characterize the kinds of patterns that can be discovered by association rule mining. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe how to extend a relational system to find patterns using association rules. [Familiarity]Describe how to extend a relational system to find patterns using association rules. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Evaluate different methodologies for effective application of data mining. [Assessment]Evaluate different methodologies for effective application of data mining. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Identify and characterize sources of noise, redundancy, and outliers in presented data. [Assessment]Identify and characterize sources of noise, redundancy, and outliers in presented data. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Identify mechanisms (on-line aggregation, anytime behavior, interactive visualization) to close the loop inIdentify mechanisms (on-line aggregation, anytime behavior, interactive visualization) to close the loop inthe data mining process. [Familiarity]the data mining process. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Describe why the various close-the-loop processes improve the effectiveness of data mining. [Familiarity]Describe why the various close-the-loop processes improve the effectiveness of data mining. ",
           "mastery": "No",
           "num": "7"
         }
      ]}
      ,
      {"title": "Information Storage and Retrieval",
       "intro": "",
       "topics": [
         { "content": "Documents, electronic publishing, markup, and markup languages",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Tries, inverted files, PAT trees, signature files, indexing",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Morphological analysis, stemming, phrases, stop lists",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Term frequency distributions, uncertainty, fuzziness, weighting",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Vector space, probabilistic, logical, and advanced models",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Information needs, relevance, evaluation, effectiveness",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Thesauri, ontologies, classification and categorization, metadata",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Bibliographic information, bibliometrics, citations",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Routing and (community) filtering",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Multimedia search, information seeking behavior, user modeling, feedback",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Information summarization and visualization",
           "num": "10",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Faceted search (e.g., using citations, keywords, classification schemes)",
           "num": "11",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Digital libraries",
           "num": "12",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Digitization, storage, interchange, digital objects, composites, and packages",
           "num": "13",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Metadata and cataloging",
           "num": "14",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Naming, repositories, archives",
           "num": "15",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Archiving and preservation, integrity",
           "num": "16",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Spaces (conceptual, geographical, 2/3D, VR)",
           "num": "17",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Architectures (agents, buses, wrappers/mediators), interoperability",
           "num": "18",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Services (searching, linking, browsing, and so forth)",
           "num": "19",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Intellectual property rights management, privacy, and protection (watermarking)",
           "num": "20",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain basic information storage and retrieval concepts. [Familiarity]Explain basic information storage and retrieval concepts. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe what issues are specific to efficient information retrieval. [Familiarity]Describe what issues are specific to efficient information retrieval. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Give applications of alternative search strategies and explain why the particular search strategy isGive applications of alternative search strategies and explain why the particular search strategy isappropriate for the application. [Assessment]appropriate for the application. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Design and implement a small to medium size information storage and retrieval system, or digital library.Design and implement a small to medium size information storage and retrieval system, or digital library.[Usage]",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Describe some of the technical solutions to the problems related to archiving and preserving information inDescribe some of the technical solutions to the problems related to archiving and preserving information ina digital library. [Familiarity]a digital library. ",
           "mastery": "No",
           "num": "4"
         }
      ]}
      ,
      {"title": "Multimedia Systems",
       "intro": "",
       "topics": [
         { "content": "Input and output devices, device drivers, control signals and protocols, DSPs",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Standards (e.g., audio, graphics, video)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Applications, media editors, authoring systems, and authoring",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Streams/structures, capture/represent/transform, spaces/domains, compression/coding",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Content-based analysis, indexing, and retrieval of audio, images, animation, and video",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Presentation, rendering, synchronization, multi-modal integration/interfaces",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Real-time delivery, quality of service (including performance), capacity planning, audio/video conferencing, video-on-demand",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe the media and supporting devices commonly associated with multimedia information andDescribe the media and supporting devices commonly associated with multimedia information andsystems. [Familiarity]systems. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Demonstrate the use of content-based information analysis in a multimedia information system. [Usage]Demonstrate the use of content-based information analysis in a multimedia information system. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Critique multimedia presentations in terms of their appropriate use of audio, video, graphics, color, andCritique multimedia presentations in terms of their appropriate use of audio, video, graphics, color, andother information presentation concepts. [Assessment]other information presentation concepts. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Implement a multimedia application using an authoring system. [Usage]Implement a multimedia application using an authoring system. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "For each of several media or multimedia standards, describe in non-technical language what the standardFor each of several media or multimedia standards, describe in non-technical language what the standardcalls for, and explain how aspects of human perception might be sensitive to the limitations of thatcalls for, and explain how aspects of human perception might be sensitive to the limitations of thatstandard. [Familiarity]standard. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Describe the characteristics of a computer system (including identification of support tools and appropriateDescribe the characteristics of a computer system (including identification of support tools and appropriatestandards) that has to host the implementation of one of a range of possible multimedia applications.standards) that has to host the implementation of one of a range of possible multimedia applications.[Familiarity]",
           "mastery": "No",
           "num": "5"
         }
      ]}
]},
{"abbrev": "SE",
  "title": "Software Engineering",
  "intro": "In every computing application domain, professionalism, quality, schedule, and cost are critical to producing software systems. Because of this, the elements of software engineering are applicable to developing software in all areas of computing. A wide variety of software engineering practices have been developed and utilized since the need for a discipline of software engineering was first recognized. Many trade-offs between these different practices have also been identified. Practicing software engineers have to select and apply appropriate techniques and practices to a given development effort in order to maximize value. To learn how to do so, they study the elements of software engineering. Software engineering is the discipline concerned with the application of theory, knowledge, and practice to effectively and efficiently build reliable software systems that satisfy the requirements of customers and users. This discipline is applicable to small, medium, and large-scale systems. It encompasses all phases of the lifecycle of a software system, including requirements elicitation, analysis and specification; design; construction; verification and validation; deployment; and operation and maintenance. Whether small or large, following a traditional plan-driven development process, an agile approach, or some other method, software engineering is concerned with the best way to build good software systems. Software engineering uses engineering methods, processes, techniques, and measurements. It benefits from the use of tools for managing software development; analyzing and modeling software artifacts; assessing and controlling quality; and for ensuring a disciplined, controlled approach to software evolution and reuse. The software engineering toolbox has evolved over the years. For instance, the use of contracts, with requires and ensure clauses and class invariants, is one good practice that has become more common. Software development, which can involve an individual developer or a team or teams of developers, requires choosing the most appropriate tools, methods, and approaches for a given development environment. Students and instructors need to understand the impacts of specialization on software engineering approaches. For example, specialized systems include: • Real time systems • Client-server systems • Distributed systems • Parallel systems • Web-based systems • High integrity systems • Games • Mobile computing • Domain specific software (e.g., scientific computing or business applications) Issues raised by each of these specialized systems demand specific treatments in each phase of software engineering. Students must become aware of the differences between general software engineering techniques and principles and the techniques and principles needed to address issues specific to specialized systems. An important effect of specialization is that different choices of material may need to be made when teaching applications of software engineering, such as between different process models, different approaches to modeling systems, or different choices of techniques for carrying out any of the key activities. This is reflected in the assignment of core and elective material, with the core topics and learning outcomes focusing on the principles underlying the various choices, and the details of the various alternatives from which the choices have to be made being assigned to the elective material. Another division of the practices of software engineering is between those concerned with the fundamental need to develop systems that implement correctly the functionality that is required for them and those concerned with other qualities for systems and the trade-offs needed to balance these qualities. This division too is reflected in the assignment of core and elective material, so that topics and learning outcomes concerned with the basic methods for developing such system are assigned to the core and those that are concerned with other qualities and trade- offs between them are assigned to the elective material. In general, students can best learn to apply much of the material defined in the Sofware Engineering KA by participating in a project. Such projects should require students to work on a team to develop a software system through as much of its lifecycle as is possible. Much of software engineering is devoted to effective communication among team members and stakeholders. Utilizing project teams, projects can be sufficiently challenging to require students to use effective software engineering techniques and to develop and practice their communication skills. While organizing and running effective projects within the academic framework can be challenging, the best way to learn to apply software engineering theory and knowledge is in the practical environment of a project. The minimum hours specified for some knowledge units in this document may appear insufficient to accomplish associated application- level learning outcomes. It should be understood that these outcomes are to be achieved through project experience that may even occur later in the curriculum than when the topics within the knowledge unit are introduced. Further, there is increasing evidence that students learn to apply software engineering principles more effectively through an iterative approach, where students have the opportunity to work through a development cycle, assess their work, and then apply the knowledge gained through their assessment to another development cycle. Agile and iterative lifecycle models inherently afford such opportunities. Software lifecycle terminology in this document is based on that used in earlier sources, such as the Software Engineering Body of Knowledge (SWEBOK) and the ACM/IEEE-CS Software Engineering 2004 Curriculum Guidelines (SE2004). While some terms were originally defined in the context of plan-driven development processes, they are treated here as generic, and thus equally applicable to agile processes. Note: The SDF/Development Methods knowledge unit includes 9 Core-Tier1 hours that constitute an introduction to certain aspects of software engineering. The knowledge units, topics and core hour specifications in this Software Engineering Knowledge Area must be understood as assuming previous exposure to the material described in SDF/Development Methods. ",
  "units": [
      {"title": "Software Processes",
       "intro": "",
       "topics": [
         { "content": "Systems level considerations, i.e., the interaction of software with its intended environment (",
           "num": "0",
           "addressed": "No"
,
           "xrefs": " {IAS_Secure_Software_Engineering}{IAS/Secure Software Engineering})"         },
         { "content": "Introduction to software process models (e.g., waterfall, incremental, agile)",
           "num": "1",
           "subtopics": [         { "content": "Activities within software lifecycles",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Programming in the large vs. individual programming",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Evaluation of software process models",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Software quality concepts",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Process improvement",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Software process capability maturity models",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Software process measurements",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe how software can interact with and participate in various systems including information management, embedded, process control, and communications systems. [Familiarity]Describe how software can interact with and participate in various systems including information management, embedded, process control, and communications systems. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe the relative advantages and disadvantages among several major process models (e.g., waterfall, iterative, and agile). [Familiarity]Describe the relative advantages and disadvantages among several major process models (e.g., waterfall, iterative, and agile). ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe the different practices that are key components of various process models. [Familiarity]Describe the different practices that are key components of various process models. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Differentiate among the phases of software development. [Familiarity]Differentiate among the phases of software development. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Describe how programming in the large differs from individual efforts with respect to understanding a largeDescribe how programming in the large differs from individual efforts with respect to understanding a largecode base, code reading, understanding builds, and understanding context of changes. [Familiarity]code base, code reading, understanding builds, and understanding context of changes. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Explain the concept of a software lifecycle and provide an example, illustrating its phases including theExplain the concept of a software lifecycle and provide an example, illustrating its phases including thedeliverables that are produced. [Familiarity]deliverables that are produced. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Compare several common process models with respect to their value for development of particular classesCompare several common process models with respect to their value for development of particular classesof software systems taking into account issues such as requirement stability, size, and non-functionalof software systems taking into account issues such as requirement stability, size, and non-functionalcharacteristics. [Usage]characteristics. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Define software quality and describe the role of quality assurance activities in the software process.Define software quality and describe the role of quality assurance activities in the software process.[Familiarity]",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Describe the intent and fundamental similarities among process improvement approaches. [Familiarity]Describe the intent and fundamental similarities among process improvement approaches. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "Compare several process improvement models such as CMM, CMMI, CQI, Plan-Do-Check-Act, orCompare several process improvement models such as CMM, CMMI, CQI, Plan-Do-Check-Act, orISO9000. [Assessment]ISO9000. ",
           "mastery": "No",
           "num": "9"
         },
         {"content": "Assess a development effort and recommend potential changes by participating in process improvementAssess a development effort and recommend potential changes by participating in process improvement(using a model such as PSP) or engaging in a project retrospective. [Usage](using a model such as PSP) or engaging in a project retrospective. ",
           "mastery": "No",
           "num": "10"
         },
         {"content": "Explain the role of process maturity models in process improvement. [Familiarity]Explain the role of process maturity models in process improvement. ",
           "mastery": "No",
           "num": "11"
         },
         {"content": "Describe several process metrics for assessing and controlling a project. [Familiarity]Describe several process metrics for assessing and controlling a project. ",
           "mastery": "No",
           "num": "12"
         },
         {"content": "Use project metrics to describe the current state of a project. [Usage]Use project metrics to describe the current state of a project. ",
           "mastery": "No",
           "num": "13"
         }
      ]}
      ,
      {"title": "Software Project Management",
       "intro": "",
       "topics": [
         { "content": "Team participation",
           "num": "0",
           "subtopics": [         { "content": "Team processes including responsibilities for tasks, meeting structure, and work schedule",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Roles and responsibilities in a software team",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Team conflict resolution",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Risks associated with virtual teams (communication, perception, structure)",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Effort Estimation (at the personal level)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Risk (cross reference {IAS/Secure Software Engineering})",
           "num": "2",
           "subtopics": [         { "content": "The role of risk in the lifecycle",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Risk categories including security, safety, market, financial, technology, people, quality, structure and process",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Team management",
           "num": "3",
           "subtopics": [         { "content": "Team organization and decision-making",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Role identification and assignment",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Individual and team performance assessment",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Project management",
           "num": "4",
           "subtopics": [         { "content": "Scheduling and tracking",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Project management tools",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Cost/benefit analysis",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Software measurement and estimation techniques",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Software quality assurance and the role of measurements",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Risk",
           "num": "7",
           "subtopics": [         { "content": "Risk identification and management",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Risk analysis and evaluation",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Risk tolerance (e.g., risk-adverse, risk-neutral, risk-seeking)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Risk planning",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "System-wide approach to risk including hazards associated with tools",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Discuss common behaviors that contribute to the effective functioning of a team. [Familiarity]Discuss common behaviors that contribute to the effective functioning of a team. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Create and follow an agenda for a team meeting. [Usage]Create and follow an agenda for a team meeting. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Identify and justify necessary roles in a software development team. [Usage]Identify and justify necessary roles in a software development team. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Understand the sources, hazards, and potential benefits of team conflict. [Usage]Understand the sources, hazards, and potential benefits of team conflict. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Apply a conflict resolution strategy in a team setting. [Usage]Apply a conflict resolution strategy in a team setting. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Use an ad hoc method to estimate software development effort (e.g., time) and compare to actual effort required. [Usage]Use an ad hoc method to estimate software development effort (e.g., time) and compare to actual effort required. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "List several examples of software risks. [Familiarity]List several examples of software risks. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Describe the impact of risk in a software development lifecycle. [Familiarity]Describe the impact of risk in a software development lifecycle. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Describe different categories of risk in software systems. [Familiarity]Describe different categories of risk in software systems. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "10. Demonstrate through involvement in a team project the central elements of team building and team10. Demonstrate through involvement in a team project the central elements of team building and teammanagement. [Usage]management. ",
           "mastery": "No",
           "num": "9"
         },
         {"content": "11. Describe how the choice of process model affects team organizational structures and decision-making11. Describe how the choice of process model affects team organizational structures and decision-makingprocesses. [Familiarity]processes. ",
           "mastery": "No",
           "num": "10"
         },
         {"content": "12. Create a team by identifying appropriate roles and assigning roles to team members. [Usage]12. Create a team by identifying appropriate roles and assigning roles to team members. ",
           "mastery": "No",
           "num": "11"
         },
         {"content": "13. Assess and provide feedback to teams and individuals on their performance in a team setting. [Usage]13. Assess and provide feedback to teams and individuals on their performance in a team setting. ",
           "mastery": "No",
           "num": "12"
         },
         {"content": "14. Using a particular software process, describe the aspects of a project that need to be planned and monitored,14. Using a particular software process, describe the aspects of a project that need to be planned and monitored,(e.g., estimates of size and effort, a schedule, resource allocation, configuration control, change(e.g., estimates of size and effort, a schedule, resource allocation, configuration control, changemanagement, and project risk identification and management). [Familiarity]management, and project risk identification and management). ",
           "mastery": "No",
           "num": "13"
         },
         {"content": "15. Track the progress of some stage in a project using appropriate project metrics. [Usage]15. Track the progress of some stage in a project using appropriate project metrics. ",
           "mastery": "No",
           "num": "14"
         },
         {"content": "16. Compare simple software size and cost estimation techniques. [Usage]16. Compare simple software size and cost estimation techniques. ",
           "mastery": "No",
           "num": "15"
         },
         {"content": "17. Use a project management tool to assist in the assignment and tracking of tasks in a software development17. Use a project management tool to assist in the assignment and tracking of tasks in a software developmentproject. [Usage]project. ",
           "mastery": "No",
           "num": "16"
         },
         {"content": "18. Describe the impact of risk tolerance on the software development process. [Assessment]18. Describe the impact of risk tolerance on the software development process. ",
           "mastery": "No",
           "num": "17"
         },
         {"content": "19. Identify risks and describe approaches to managing risk (avoidance, acceptance, transference, mitigation),19. Identify risks and describe approaches to managing risk (avoidance, acceptance, transference, mitigation),and characterize the strengths and shortcomings of each. [Familiarity]and characterize the strengths and shortcomings of each. ",
           "mastery": "No",
           "num": "18"
         },
         {"content": "20. Explain how risk affects decisions in the software development process. [Usage]20. Explain how risk affects decisions in the software development process. ",
           "mastery": "No",
           "num": "19"
         },
         {"content": "21. Identify security risks for a software system. [Usage]21. Identify security risks for a software system. ",
           "mastery": "No",
           "num": "20"
         },
         {"content": "22. Demonstrate a systematic approach to the task of identifying hazards and risks in a particular situation.22. Demonstrate a systematic approach to the task of identifying hazards and risks in a particular situation.[Usage]",
           "mastery": "No",
           "num": "21"
         },
         {"content": "23. Apply the basic principles of risk management in a variety of simple scenarios including a security23. Apply the basic principles of risk management in a variety of simple scenarios including a securitysituation. [Usage]situation. ",
           "mastery": "No",
           "num": "22"
         },
         {"content": "24. Conduct a cost/benefit analysis for a risk mitigation approach. [Usage]24. Conduct a cost/benefit analysis for a risk mitigation approach. ",
           "mastery": "No",
           "num": "23"
         },
         {"content": "25. Identify and analyze some of the risks for an entire system that arise from aspects other than the software.25. Identify and analyze some of the risks for an entire system that arise from aspects other than the software.[Usage]",
           "mastery": "No",
           "num": "24"
         }
      ]}
      ,
      {"title": "Tools and Environments",
       "intro": "",
       "topics": [
         { "content": "Software configuration management and version control",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Release management",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Requirements analysis and design modeling tools",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Testing tools including static and dynamic analysis tools",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Programming environments that automate parts of program construction processes (e.g., automated builds)",
           "num": "4",
           "subtopics": [         { "content": "Continuous integration",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Tool integration concepts and mechanisms",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe the difference between centralized and distributed software configuration management.Describe the difference between centralized and distributed software configuration management.[Familiarity]",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe how version control can be used to help manage software release management. [Familiarity]Describe how version control can be used to help manage software release management. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Identify configuration items and use a source code control tool in a small team-based project. [Usage]Identify configuration items and use a source code control tool in a small team-based project. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe how available static and dynamic test tools can be integrated into the software developmentDescribe how available static and dynamic test tools can be integrated into the software developmentenvironment. [Familiarity]environment. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Describe the issues that are important in selecting a set of tools for the development of a particular softwareDescribe the issues that are important in selecting a set of tools for the development of a particular softwaresystem, including tools for requirements tracking, design modeling, implementation, build automation, andsystem, including tools for requirements tracking, design modeling, implementation, build automation, andtesting. [Familiarity]testing. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Demonstrate the capability to use software tools in support of the development of a software product ofDemonstrate the capability to use software tools in support of the development of a software product ofmedium size. [Usage]medium size. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Requirements Engineering",
       "intro": "The purpose of requirements engineering is to develop a common understanding of the needs, priorities, and constraints relevant to a software system. Many software failures arise from an incomplete understanding of requirements for the software to be developed or inadequate management of those requirements. Specifications of requirements range in formality from completely informal (e.g., spoken) to rigorously mathematical (e.g., written in a formal specification language such as Z or first-order logic). In practice, successful software engineering efforts use requirements specifications to reduce ambiguity and improve the consistency and completeness of the development team’s understanding of the vision of the intended software. Plan-driven approaches tend to produce formal documents with numbered requirements. Agile approaches tend to favor less formal specifications that include user stories, use cases, and test cases. ",
       "topics": [
         { "content": "Describing functional requirements using, for example, use cases or users stories",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Properties of requirements including consistency, validity, completeness, and feasibility",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Software requirements elicitation",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Describing system data using, for example, class diagrams or entity-relationship diagrams",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Non-functional requirements and their relationship to software quality (",
           "num": "4",
           "addressed": "No"
,
           "xrefs": " {IAS_Secure_Software_Engineering}{IAS/Secure Software Engineering})"         },
         { "content": "Evaluation and use of requirements specifications",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Requirements analysis modeling techniques",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Acceptability of certainty / uncertainty considerations regarding software / system behavior",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Prototyping",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Basic concepts of formal requirements specification",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Requirements specification",
           "num": "10",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Requirements validation",
           "num": "11",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Requirements tracing",
           "num": "12",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "List the key components of a use case or similar description of some behavior that is required for a system.List the key components of a use case or similar description of some behavior that is required for a system.[Familiarity]",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe how the requirements engineering process supports the elicitation and validation of behavioralDescribe how the requirements engineering process supports the elicitation and validation of behavioralrequirements. [Familiarity]requirements. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Interpret a given requirements model for a simple software system. [Familiarity]Interpret a given requirements model for a simple software system. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe the fundamental challenges of and common techniques used for requirements elicitation.Describe the fundamental challenges of and common techniques used for requirements elicitation.[Familiarity]",
           "mastery": "No",
           "num": "3"
         },
         {"content": "List the key components of a data model (e.g., class diagrams or ER diagrams). [Familiarity]List the key components of a data model (e.g., class diagrams or ER diagrams). ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Identify both functional and non-functional requirements in a given requirements specification for aIdentify both functional and non-functional requirements in a given requirements specification for asoftware system. [Usage]software system. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Conduct a review of a set of software requirements to determine the quality of the requirements withConduct a review of a set of software requirements to determine the quality of the requirements withrespect to the characteristics of good requirements. [Usage]respect to the characteristics of good requirements. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Apply key elements and common methods for elicitation and analysis to produce a set of softwareApply key elements and common methods for elicitation and analysis to produce a set of softwarerequirements for a medium-sized software system. [Usage]requirements for a medium-sized software system. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Compare the plan-driven and agile approaches to requirements specification and validation and describe theCompare the plan-driven and agile approaches to requirements specification and validation and describe thebenefits and risks associated with each. [Familiarity]benefits and risks associated with each. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "Use a common, non-formal method to model and specify the requirements for a medium-size softwareUse a common, non-formal method to model and specify the requirements for a medium-size softwaresystem. [Usage]system. ",
           "mastery": "No",
           "num": "9"
         },
         {"content": "Translate into natural language a software requirements specification (e.g., a software component contract)Translate into natural language a software requirements specification (e.g., a software component contract)written in a formal specification language. [Usage]written in a formal specification language. ",
           "mastery": "No",
           "num": "10"
         },
         {"content": "Create a prototype of a software system to mitigate risk in requirements. [Usage]Create a prototype of a software system to mitigate risk in requirements. ",
           "mastery": "No",
           "num": "11"
         },
         {"content": "Differentiate between forward and backward tracing and explain their roles in the requirements validationDifferentiate between forward and backward tracing and explain their roles in the requirements validationprocess. [Familiarity]process. ",
           "mastery": "No",
           "num": "12"
         }
      ]}
      ,
      {"title": "Software Design",
       "intro": "",
       "topics": [
         { "content": "System design principles: levels of abstraction (architectural design and detailed design), separation of concerns, information hiding, coupling and cohesion, re-use of standard structures",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Design Paradigms such as structured design (top-down functional decomposition), object-oriented analysis and design, event driven design, component-level design, data-structured centered, aspect oriented, function oriented, service oriented",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Structural and behavioral models of software designs",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Design patterns",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Relationships between requirements and designs: transformation of models, design of contracts, invariants",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Software architecture concepts and standard architectures (e.g. client-server, n-layer, transform centered, pipes-and-filters)",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Refactoring designs using design patterns",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "The use of components in design: component selection, design, adaptation and assembly of components, components and patterns, components and objects (for example, building a GUI using a standard widget set)",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Internal design qualities, and models for them: efficiency and performance, redundancy and fault tolerance, traceability of requirements",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "External design qualities, and models for them: functionality, reliability, performance and efficiency, usability, maintainability, portability",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Measurement and analysis of design quality",
           "num": "10",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Tradeoffs between different aspects of quality",
           "num": "11",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Application frameworks",
           "num": "12",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Middleware: the object-oriented paradigm within middleware, object request brokers and marshalling, transaction processing monitors, workflow systems",
           "num": "13",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Principles of secure design and coding (",
           "num": "14",
           "subtopics": [         { "content": "Principle of least privilege",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Principle of fail-safe defaults",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Principle of psychological acceptability",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": " {IAS_Principles_of_Secure_Design}{IAS/Principles of Secure Design})"         }
      ],
      "skills": [
         {"content": "Articulate design principles including separation of concerns, information hiding, coupling and cohesion,Articulate design principles including separation of concerns, information hiding, coupling and cohesion,and encapsulation. [Familiarity]and encapsulation. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Use a design paradigm to design a simple software system, and explain how system design principles haveUse a design paradigm to design a simple software system, and explain how system design principles havebeen applied in this design. [Usage]been applied in this design. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Construct models of the design of a simple software system that are appropriate for the paradigm used toConstruct models of the design of a simple software system that are appropriate for the paradigm used todesign it. [Usage]design it. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Within the context of a single design paradigm, describe one or more design patterns that could beWithin the context of a single design paradigm, describe one or more design patterns that could beapplicable to the design of a simple software system. [Familiarity]applicable to the design of a simple software system. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "For a simple system suitable for a given scenario, discuss and select an appropriate design paradigm.For a simple system suitable for a given scenario, discuss and select an appropriate design paradigm.[Usage]",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Create appropriate models for the structure and behavior of software products from their requirementsCreate appropriate models for the structure and behavior of software products from their requirementsspecifications. [Usage]specifications. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Explain the relationships between the requirements for a software product and its design, using appropriateExplain the relationships between the requirements for a software product and its design, using appropriatemodels. [Assessment]models. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "For the design of a simple software system within the context of a single design paradigm, describe theFor the design of a simple software system within the context of a single design paradigm, describe thesoftware architecture of that system. [Familiarity]software architecture of that system. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Given a high-level design, identify the software architecture by differentiating among common softwareGiven a high-level design, identify the software architecture by differentiating among common softwarearchitectures such as 3-tier, pipe-and-filter, and client-server. [Familiarity]architectures such as 3-tier, pipe-and-filter, and client-server. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "Investigate the impact of software architectures selection on the design of a simple system. [Assessment]Investigate the impact of software architectures selection on the design of a simple system. ",
           "mastery": "No",
           "num": "9"
         },
         {"content": "Apply simple examples of patterns in a software design. [Usage]Apply simple examples of patterns in a software design. ",
           "mastery": "No",
           "num": "10"
         },
         {"content": "Describe a form of refactoring and discuss when it may be applicable. [Familiarity]Describe a form of refactoring and discuss when it may be applicable. ",
           "mastery": "No",
           "num": "11"
         },
         {"content": "Select suitable components for use in the design of a software product. [Usage]Select suitable components for use in the design of a software product. ",
           "mastery": "No",
           "num": "12"
         },
         {"content": "Explain how suitable components might need to be adapted for use in the design of a software product.Explain how suitable components might need to be adapted for use in the design of a software product.[Familiarity]",
           "mastery": "No",
           "num": "13"
         },
         {"content": "Design a contract for a typical small software component for use in a given system. [Usage]Design a contract for a typical small software component for use in a given system. ",
           "mastery": "No",
           "num": "14"
         },
         {"content": "16. Discuss and select appropriate software architecture for a simple system suitable for a given scenario.16. Discuss and select appropriate software architecture for a simple system suitable for a given scenario.[Usage]",
           "mastery": "No",
           "num": "15"
         },
         {"content": "17. Apply models for internal and external qualities in designing software components to achieve an acceptable17. Apply models for internal and external qualities in designing software components to achieve an acceptabletradeoff between conflicting quality aspects. [Usage]tradeoff between conflicting quality aspects. ",
           "mastery": "No",
           "num": "16"
         },
         {"content": "18. Analyze a software design from the perspective of a significant internal quality attribute. [Assessment]18. Analyze a software design from the perspective of a significant internal quality attribute. ",
           "mastery": "No",
           "num": "17"
         },
         {"content": "19. Analyze a software design from the perspective of a significant external quality attribute. [Assessment]19. Analyze a software design from the perspective of a significant external quality attribute. ",
           "mastery": "No",
           "num": "18"
         },
         {"content": "20. Explain the role of objects in middleware systems and the relationship with components. [Familiarity]20. Explain the role of objects in middleware systems and the relationship with components. ",
           "mastery": "No",
           "num": "19"
         },
         {"content": "21. Apply component-oriented approaches to the design of a range of software, such as using components for21. Apply component-oriented approaches to the design of a range of software, such as using components forconcurrency and transactions, for reliable communication services, for database interaction includingconcurrency and transactions, for reliable communication services, for database interaction includingservices for remote query and database management, or for secure communication and access. [Usage]services for remote query and database management, or for secure communication and access. ",
           "mastery": "No",
           "num": "20"
         },
         {"content": "22. Refactor an existing software implementation to improve some aspect of its design. [Usage]22. Refactor an existing software implementation to improve some aspect of its design. ",
           "mastery": "No",
           "num": "21"
         },
         {"content": "23. State and apply the principles of least privilege and fail-safe defaults. [Familiarity]23. State and apply the principles of least privilege and fail-safe defaults. ",
           "mastery": "No",
           "num": "22"
         }
      ]}
      ,
      {"title": "Software Construction",
       "intro": "",
       "topics": [
         { "content": "Coding practices: techniques, idioms/patterns, mechanisms for building quality programs (",
           "num": "0",
           "subtopics": [         { "content": "Defensive coding practices",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Secure coding practices",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Using exception handling mechanisms to make programs more robust, fault-tolerant",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": " {IAS_Defensive_Programming}{IAS/Defensive Programming}; {SDF_Development_Methods}{SDF/Development Methods})"         },
         { "content": "Coding standards",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Integration strategies",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Development context: “green field” vs. existing code base",
           "num": "3",
           "subtopics": [         { "content": "Change impact analysis",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Change actualization",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Potential security problems in programs",
           "num": "4",
           "subtopics": [         { "content": "Buffer and other types of overflows",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Race conditions",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Improper initialization, including choice of privileges",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Checking input",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Assuming success and correctness",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Validating assumptions",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe techniques, coding idioms and mechanisms for implementing designs to achieve desired properties such as reliability, efficiency, and robustness. [Familiarity]Describe techniques, coding idioms and mechanisms for implementing designs to achieve desired properties such as reliability, efficiency, and robustness. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Build robust code using exception handling mechanisms. [Usage]Build robust code using exception handling mechanisms. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe secure coding and defensive coding practices. [Familiarity]Describe secure coding and defensive coding practices. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Select and use a defined coding standard in a small software project. [Usage]Select and use a defined coding standard in a small software project. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Compare and contrast integration strategies including top-down, bottom-up, and sandwich integration.Compare and contrast integration strategies including top-down, bottom-up, and sandwich integration.[Familiarity]",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Describe the process of analyzing and implementing changes to code base developed for a specific project.Describe the process of analyzing and implementing changes to code base developed for a specific project.[Familiarity]",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Describe the process of analyzing and implementing changes to a large existing code base. [Familiarity]Describe the process of analyzing and implementing changes to a large existing code base. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Rewrite a simple program to remove common vulnerabilities, such as buffer overflows, integer overflowsRewrite a simple program to remove common vulnerabilities, such as buffer overflows, integer overflowsand race conditions. [Usage]and race conditions. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Write a software component that performs some non-trivial task and is resilient to input and run-timeWrite a software component that performs some non-trivial task and is resilient to input and run-timeerrors. [Usage]errors. ",
           "mastery": "No",
           "num": "8"
         }
      ]}
      ,
      {"title": "Software Verification and Validation",
       "intro": "",
       "topics": [
         { "content": "Verification and validation concepts",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Inspections, reviews, audits",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Testing types, including human computer interface, usability, reliability, security, conformance to specification (",
           "num": "2",
           "addressed": "No"
,
           "xrefs": " {IAS_Secure_Software_Engineering}{IAS/Secure Software Engineering})"         },
         { "content": "Testing fundamentals (",
           "num": "3",
           "subtopics": [         { "content": "Unit, integration, validation, and system testing",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Test plan creation and test case generation",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Black-box and white-box testing techniques",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Regression testing and test automation",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": " {SDF_Development_Methods}{SDF/Development Methods})"         },
         { "content": "Defect tracking",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Limitations of testing in particular domains, such as parallel or safety-critical systems",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Static approaches and dynamic approaches to verification",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Test-driven development",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Validation planning; documentation for validation",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Object-oriented testing; systems testing",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Verification and validation of non-code artifacts (documentation, help files, training materials)",
           "num": "10",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Fault logging, fault tracking and technical support for such activities",
           "num": "11",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Fault estimation and testing termination including defect seeding",
           "num": "12",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Distinguish between program validation and verification. [Familiarity]Distinguish between program validation and verification. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe the role that tools can play in the validation of software. [Familiarity]Describe the role that tools can play in the validation of software. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Undertake, as part of a team activity, an inspection of a medium-size code segment. [Usage]Undertake, as part of a team activity, an inspection of a medium-size code segment. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe and distinguish among the different types and levels of testing (unit, integration, systems, and acceptance). [Familiarity]Describe and distinguish among the different types and levels of testing (unit, integration, systems, and acceptance). ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Describe techniques for identifying significant test cases for integration, regression and system testing. [Familiarity]Describe techniques for identifying significant test cases for integration, regression and system testing. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Create and document a set of tests for a medium-size code segment. [Usage]Create and document a set of tests for a medium-size code segment. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Describe how to select good regression tests and automate them. [Familiarity]Describe how to select good regression tests and automate them. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Use a defect tracking tool to manage software defects in a small software project. [Usage]Use a defect tracking tool to manage software defects in a small software project. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Discuss the limitations of testing in a particular domain. [Familiarity]Discuss the limitations of testing in a particular domain. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "10. Evaluate a test suite for a medium-size code segment. [Usage]10. Evaluate a test suite for a medium-size code segment. ",
           "mastery": "No",
           "num": "9"
         },
         {"content": "11. Compare static and dynamic approaches to verification. [Familiarity]11. Compare static and dynamic approaches to verification. ",
           "mastery": "No",
           "num": "10"
         },
         {"content": "12. Identify the fundamental principles of test-driven development methods and explain the role of automated12. Identify the fundamental principles of test-driven development methods and explain the role of automatedtesting in these methods. [Familiarity]testing in these methods. ",
           "mastery": "No",
           "num": "11"
         },
         {"content": "13. Discuss the issues involving the testing of object-oriented software. [Usage]13. Discuss the issues involving the testing of object-oriented software. ",
           "mastery": "No",
           "num": "12"
         },
         {"content": "14. Describe techniques for the verification and validation of non-code artifacts. [Familiarity]14. Describe techniques for the verification and validation of non-code artifacts. ",
           "mastery": "No",
           "num": "13"
         },
         {"content": "15. Describe approaches for fault estimation. [Familiarity]15. Describe approaches for fault estimation. ",
           "mastery": "No",
           "num": "14"
         },
         {"content": "16. Estimate the number of faults in a small software application based on fault density and fault seeding.16. Estimate the number of faults in a small software application based on fault density and fault seeding.[Usage]",
           "mastery": "No",
           "num": "15"
         },
         {"content": "17. Conduct an inspection or review of software source code for a small or medium sized software project.17. Conduct an inspection or review of software source code for a small or medium sized software project.[Usage]",
           "mastery": "No",
           "num": "16"
         }
      ]}
      ,
      {"title": "Software Evolution",
       "intro": "",
       "topics": [
         { "content": "Software development in the context of large, pre-existing code bases",
           "num": "0",
           "subtopics": [         { "content": "Software change",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Concerns and concern location",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Refactoring",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Software evolution",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Characteristics of maintainable software",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Reengineering systems",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Software reuse",
           "num": "4",
           "subtopics": [         { "content": "Code segments",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Libraries and frameworks",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Components",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Product lines",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Identify the principal issues associated with software evolution and explain their impact on the softwareIdentify the principal issues associated with software evolution and explain their impact on the softwarelifecycle. [Familiarity]lifecycle. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Estimate the impact of a change request to an existing product of medium size. [Usage]Estimate the impact of a change request to an existing product of medium size. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Use refactoring in the process of modifying a software component. [Usage]Use refactoring in the process of modifying a software component. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Discuss the challenges of evolving systems in a changing environment. [Familiarity]Discuss the challenges of evolving systems in a changing environment. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Outline the process of regression testing and its role in release management. [Familiarity]Outline the process of regression testing and its role in release management. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Discuss the advantages and disadvantages of different types of software reuse. [Familiarity]Discuss the advantages and disadvantages of different types of software reuse. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Software Reliability",
       "intro": "",
       "topics": [
         { "content": "Software reliability engineering concepts",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Software reliability, system reliability and failure behavior (",
           "num": "1",
           "addressed": "No"
,
           "xrefs": " {SF_Reliability_Through_Redundancy}{SF/Reliability Through Redundancy})"         },
         { "content": "Fault lifecycle concepts and techniques",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Software reliability models",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Software fault tolerance techniques and models",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Software reliability engineering practices",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Measurement-based analysis of software reliability",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain the problems that exist in achieving very high levels of reliability. [Familiarity]Explain the problems that exist in achieving very high levels of reliability. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe how software reliability contributes to system reliability. [Familiarity]Describe how software reliability contributes to system reliability. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "List approaches to minimizing faults that can be applied at each stage of the software lifecycle.List approaches to minimizing faults that can be applied at each stage of the software lifecycle.[Familiarity]",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Compare the characteristics of three different reliability modeling approaches. [Familiarity]Compare the characteristics of three different reliability modeling approaches. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Demonstrate the ability to apply multiple methods to develop reliability estimates for a software system.Demonstrate the ability to apply multiple methods to develop reliability estimates for a software system.[Usage]",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Identify methods that will lead to the realization of a software architecture that achieves a specified level ofIdentify methods that will lead to the realization of a software architecture that achieves a specified level ofreliability. [Usage]reliability. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Identify ways to apply redundancy to achieve fault tolerance for a medium-sized application. [Usage]Identify ways to apply redundancy to achieve fault tolerance for a medium-sized application. ",
           "mastery": "No",
           "num": "6"
         }
      ]}
      ,
      {"title": "Formal Methods",
       "intro": "The topics listed below have a strong dependency on core material from the Discrete Structures (DS) Knowledge Area, particularly knowledge units DS/Functions Relations and Sets, DS/Basic Logic and DS/Proof Techniques. ",
       "topics": [
         { "content": "Role of formal specification and analysis techniques in the software development cycle",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Program assertion languages and analysis approaches (including languages for writing and analyzing pre- and post-conditions, such as OCL, JML)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Formal approaches to software modeling and analysis",
           "num": "2",
           "subtopics": [         { "content": "Model checkers",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Model finders",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Tools in support of formal methods",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe the role formal specification and analysis techniques can play in the development of complexDescribe the role formal specification and analysis techniques can play in the development of complexsoftware and compare their use as validation and verification techniques with testing. [Familiarity]software and compare their use as validation and verification techniques with testing. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Apply formal specification and analysis techniques to software designs and programs with low complexity.Apply formal specification and analysis techniques to software designs and programs with low complexity.[Usage]",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Explain the potential benefits and drawbacks of using formal specification languages. [Familiarity]Explain the potential benefits and drawbacks of using formal specification languages. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Create and evaluate program assertions for a variety of behaviors ranging from simple through complex.Create and evaluate program assertions for a variety of behaviors ranging from simple through complex.[Usage]",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Using a common formal specification language, formulate the specification of a simple software systemUsing a common formal specification language, formulate the specification of a simple software systemand derive examples of test cases from the specification. [Usage]and derive examples of test cases from the specification. ",
           "mastery": "No",
           "num": "4"
         }
      ]}
]},
{"abbrev": "OS",
  "title": "Operating Systems",
  "intro": "An operating system defines an abstraction of hardware and manages resource sharing among the computer’s users. The topics in this area explain the most basic knowledge of operating systems in the sense of interfacing an operating system to networks, teaching the difference between the kernel and user modes, and developing key approaches to operating system design and implementation. This knowledge area is structured to be complementary to the Systems Fundamentals (SF), Networking and Communication (NC), Information Assurance and Security (IAS), and the Parallel and Distributed Computing (PD) knowledge areas. The Systems Fundamentals and Information Assurance and Security knowledge areas are the new ones to include contemporary issues. For example, Systems Fundamentals includes topics such as performance, virtualization and isolation, and resource allocation and scheduling; Parallel and Distributed Systems includes parallelism fundamentals; and and Information Assurance and Security includes forensics and security issues in depth. Many courses in Operating Systems will draw material from across these knowledge areas. ",
  "units": [
      {"title": "Overview of Operating Systems",
       "intro": "",
       "topics": [
         { "content": "Role and purpose of the operating system",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Functionality of a typical operating system",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Mechanisms to support client-server models, hand-held devices",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Design issues (efficiency, robustness, flexibility, portability, security, compatibility)",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Influences of security, networking, multimedia, windowing systems",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain the objectives and functions of modern operating systems. [Familiarity]Explain the objectives and functions of modern operating systems. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Analyze the tradeoffs inherent in operating system design. [Usage]Analyze the tradeoffs inherent in operating system design. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe the functions of a contemporary operating system with respect to convenience, efficiency, and theDescribe the functions of a contemporary operating system with respect to convenience, efficiency, and theability to evolve. [Familiarity]ability to evolve. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Discuss networked, client-server, distributed operating systems and how they differ from single userDiscuss networked, client-server, distributed operating systems and how they differ from single useroperating systems. [Familiarity]operating systems. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Identify potential threats to operating systems and the security features design to guard against them.Identify potential threats to operating systems and the security features design to guard against them.[Familiarity]",
           "mastery": "No",
           "num": "4"
         }
      ]}
      ,
      {"title": "Operating System Principles",
       "intro": "",
       "topics": [
         { "content": "Structuring methods (monolithic, layered, modular, micro-kernel models)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Abstractions, processes, and resources",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Concepts of application program interfaces (APIs)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "The evolution of hardware/software techniques and application needs",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Device organization",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Interrupts: methods and implementations",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Concept of user/system state and protection, transition to kernel mode",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain the concept of a logical layer. [Familiarity]Explain the concept of a logical layer. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain the benefits of building abstract layers in hierarchical fashion. [Familiarity]Explain the benefits of building abstract layers in hierarchical fashion. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe the value of APIs and middleware. [Assessment]Describe the value of APIs and middleware. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe how computing resources are used by application software and managed by system software.Describe how computing resources are used by application software and managed by system software.[Familiarity]",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Contrast kernel and user mode in an operating system. [Usage]Contrast kernel and user mode in an operating system. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Discuss the advantages and disadvantages of using interrupt processing. [Familiarity]Discuss the advantages and disadvantages of using interrupt processing. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Explain the use of a device list and driver I/O queue. [Familiarity]Explain the use of a device list and driver I/O queue. ",
           "mastery": "No",
           "num": "6"
         }
      ]}
      ,
      {"title": "Concurrency",
       "intro": "",
       "topics": [
         { "content": "States and state diagrams (",
           "num": "0",
           "addressed": "No"
,
           "xrefs": " {SF_State_and_State_Machines}{SF/State and State Machines})"         },
         { "content": "Structures (ready list, process control blocks, and so forth)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Dispatching and context switching",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "The role of interrupts",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Managing atomic access to OS objects",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Implementing synchronization primitives",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Multiprocessor issues (spin-locks, reentrancy) (",
           "num": "6",
           "addressed": "No"
,
           "xrefs": " {SF_Parallelism}{SF/Parallelism})"         }
      ],
      "skills": [
         {"content": "Describe the need for concurrency within the framework of an operating system. [Familiarity]Describe the need for concurrency within the framework of an operating system. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Demonstrate the potential run-time problems arising from the concurrent operation of many separate tasks.Demonstrate the potential run-time problems arising from the concurrent operation of many separate tasks.[Usage]",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Summarize the range of mechanisms that can be employed at the operating system level to realizeSummarize the range of mechanisms that can be employed at the operating system level to realizeconcurrent systems and describe the benefits of each. [Familiarity]concurrent systems and describe the benefits of each. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Explain the different states that a task may pass through and the data structures needed to support theExplain the different states that a task may pass through and the data structures needed to support themanagement of many tasks. [Familiarity]management of many tasks. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Summarize techniques for achieving synchronization in an operating system (e.g., describe how toSummarize techniques for achieving synchronization in an operating system (e.g., describe how toimplement a semaphore using OS primitives). [Familiarity]implement a semaphore using OS primitives). ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Describe reasons for using interrupts, dispatching, and context switching to support concurrency in anDescribe reasons for using interrupts, dispatching, and context switching to support concurrency in anoperating system. [Familiarity]operating system. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Create state and transition diagrams for simple problem domains. [Usage]Create state and transition diagrams for simple problem domains. ",
           "mastery": "No",
           "num": "6"
         }
      ]}
      ,
      {"title": "Scheduling and Dispatch",
       "intro": "",
       "topics": [
         { "content": "Preemptive and non-preemptive scheduling (",
           "num": "0",
           "addressed": "No"
,
           "xrefs": " {SF_Resource_Allocation_and_Scheduling}{SF/Resource Allocation and Scheduling}, {PD_Parallel_Performance}{PD/Parallel Performance})"         },
         { "content": "Schedulers and policies (",
           "num": "1",
           "addressed": "No"
,
           "xrefs": " {SF_Resource_Allocation_and_Scheduling}{SF/Resource Allocation and Scheduling}, {PD_Parallel_Performance}{PD/Parallel Performance})"         },
         { "content": "Processes and threads (",
           "num": "2",
           "addressed": "No"
,
           "xrefs": " {SF_Computational_paradigms}{SF/Computational paradigms})"         },
         { "content": "Deadlines and real-time issues",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Compare and contrast the common algorithms used for both preemptive and non-preemptive scheduling ofCompare and contrast the common algorithms used for both preemptive and non-preemptive scheduling oftasks in operating systems, such as priority, performance comparison, and fair-share schemes. [Usage]tasks in operating systems, such as priority, performance comparison, and fair-share schemes. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe relationships between scheduling algorithms and application domains. [Familiarity]Describe relationships between scheduling algorithms and application domains. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Discuss the types of processor scheduling such as short-term, medium-term, long-term, and I/O.Discuss the types of processor scheduling such as short-term, medium-term, long-term, and I/O.[Familiarity]",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe the difference between processes and threads. [Usage]Describe the difference between processes and threads. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Compare and contrast static and dynamic approaches to real-time scheduling. [Usage]Compare and contrast static and dynamic approaches to real-time scheduling. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Discuss the need for preemption and deadline scheduling. [Familiarity]Discuss the need for preemption and deadline scheduling. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Identify ways that the logic embodied in scheduling algorithms are applicable to other domains, such asIdentify ways that the logic embodied in scheduling algorithms are applicable to other domains, such asdisk I/O, network scheduling, project scheduling, and problems beyond computing. [Usage]disk I/O, network scheduling, project scheduling, and problems beyond computing. ",
           "mastery": "No",
           "num": "6"
         }
      ]}
      ,
      {"title": "Memory Management",
       "intro": "",
       "topics": [
         { "content": "Review of physical memory and memory management hardware",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Working sets and thrashing",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Caching (",
           "num": "2",
           "addressed": "No"
,
           "xrefs": " {AR_Memory_System_Organization_and_Architecture}{AR/Memory System Organization and Architecture})"         }
      ],
      "skills": [
         {"content": "Explain memory hierarchy and cost-performance trade-offs. [Familiarity]Explain memory hierarchy and cost-performance trade-offs. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Summarize the principles of virtual memory as applied to caching and paging. [Familiarity]Summarize the principles of virtual memory as applied to caching and paging. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Evaluate the trade-offs in terms of memory size (main memory, cache memory, auxiliary memory) andEvaluate the trade-offs in terms of memory size (main memory, cache memory, auxiliary memory) andprocessor speed. [Assessment]processor speed. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Defend the different ways of allocating memory to tasks, citing the relative merits of each. [Assessment]Defend the different ways of allocating memory to tasks, citing the relative merits of each. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Describe the reason for and use of cache memory (performance and proximity, different dimension of howDescribe the reason for and use of cache memory (performance and proximity, different dimension of howcaches complicate isolation and VM abstraction). [Familiarity]caches complicate isolation and VM abstraction). ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Discuss the concept of thrashing, both in terms of the reasons it occurs and the techniques used to recognizeDiscuss the concept of thrashing, both in terms of the reasons it occurs and the techniques used to recognizeand manage the problem. [Familiarity]and manage the problem. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Security and Protection",
       "intro": "",
       "topics": [
         { "content": "Overview of system security",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Policy/mechanism separation",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Security methods and devices",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Protection, access control, and authentication",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Backups",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Articulate the need for protection and security in an OS (cross-reference {IAS/Security Architecture andArticulate the need for protection and security in an OS (cross-reference {IAS/Security Architecture andSystems Administration}/Investigating Operating Systems Security for various systems). [Assessment]Systems Administration}/Investigating Operating Systems Security for various systems). ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Summarize the features and limitations of an operating system used to provide protection and security. [Familiarity]Summarize the features and limitations of an operating system used to provide protection and security. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Explain the mechanisms available in an OS to control access to resources. [Familiarity]Explain the mechanisms available in an OS to control access to resources. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Carry out simple system administration tasks according to a security policy, for example creating accounts,Carry out simple system administration tasks according to a security policy, for example creating accounts,setting permissions, applying patches, and arranging for regular backups. [Usage]setting permissions, applying patches, and arranging for regular backups. ",
           "mastery": "No",
           "num": "3"
         }
      ]}
      ,
      {"title": "Virtual Machines",
       "intro": "",
       "topics": [
         { "content": "Types of virtualization (including Hardware/Software, OS, Server, Service, Network)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Paging and virtual memory",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Virtual file systems",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Hypervisors",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Portable virtualization; emulation vs. isolation",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Cost of virtualization",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain the concept of virtual memory and how it is realized in hardware and software. [Familiarity]Explain the concept of virtual memory and how it is realized in hardware and software. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Differentiate emulation and isolation. [Familiarity]Differentiate emulation and isolation. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Evaluate virtualization trade-offs. [Assessment]Evaluate virtualization trade-offs. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Discuss hypervisors and the need for them in conjunction with different types of hypervisors. [Usage]Discuss hypervisors and the need for them in conjunction with different types of hypervisors. ",
           "mastery": "No",
           "num": "3"
         }
      ]}
      ,
      {"title": "Device Management",
       "intro": "",
       "topics": [
         { "content": "Characteristics of serial and parallel devices",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Abstracting device differences",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Buffering strategies",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Direct memory access",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Recovery from failures",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain the key difference between serial and parallel devices and identify the conditions in which each isExplain the key difference between serial and parallel devices and identify the conditions in which each isappropriate. [Familiarity]appropriate. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Identify the relationship between the physical hardware and the virtual devices maintained by the operatingIdentify the relationship between the physical hardware and the virtual devices maintained by the operatingsystem. [Usage]system. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Explain buffering and describe strategies for implementing it. [Familiarity]Explain buffering and describe strategies for implementing it. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Differentiate the mechanisms used in interfacing a range of devices (including hand-held devices,Differentiate the mechanisms used in interfacing a range of devices (including hand-held devices,networks, multimedia) to a computer and explain the implications of these for the design of an operatingnetworks, multimedia) to a computer and explain the implications of these for the design of an operatingsystem. [Usage]system. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Describe the advantages and disadvantages of direct memory access and discuss the circumstances inDescribe the advantages and disadvantages of direct memory access and discuss the circumstances inwhich its use is warranted. [Usage]which its use is warranted. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Identify the requirements for failure recovery. [Familiarity]Identify the requirements for failure recovery. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Implement a simple device driver for a range of possible devices. [Usage]Implement a simple device driver for a range of possible devices. ",
           "mastery": "No",
           "num": "6"
         }
      ]}
      ,
      {"title": "File Systems",
       "intro": "",
       "topics": [
         { "content": "Files: data, metadata, operations, organization, buffering, sequential, nonsequential",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Directories: contents and structure",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "File systems: partitioning, mount/unmount, virtual file systems",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Standard implementation techniques",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Memory-mapped files",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Special-purpose file systems",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Naming, searching, access, backups",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Journaling and log-structured file systems",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe the choices to be made in designing file systems. [Familiarity]Describe the choices to be made in designing file systems. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Compare and contrast different approaches to file organization, recognizing the strengths and weaknessesCompare and contrast different approaches to file organization, recognizing the strengths and weaknessesof each. [Usage]of each. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Summarize how hardware developments have led to changes in the priorities for the design and theSummarize how hardware developments have led to changes in the priorities for the design and themanagement of file systems. [Familiarity]management of file systems. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Summarize the use of journaling and how log-structured file systems enhance fault tolerance. [Familiarity]Summarize the use of journaling and how log-structured file systems enhance fault tolerance. ",
           "mastery": "No",
           "num": "3"
         }
      ]}
      ,
      {"title": "Real Time and Embedded Systems",
       "intro": "",
       "topics": [
         { "content": "Process and task scheduling",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Memory/disk management requirements in a real-time environment",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Failures, risks, and recovery",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Special concerns in real-time systems",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe what makes a system a real-time system. [Familiarity]Describe what makes a system a real-time system. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain the presence of and describe the characteristics of latency in real-time systems. [Familiarity]Explain the presence of and describe the characteristics of latency in real-time systems. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Summarize special concerns that real-time systems present, including risk, and how these concerns areSummarize special concerns that real-time systems present, including risk, and how these concerns areaddressed. [Familiarity]addressed. ",
           "mastery": "No",
           "num": "2"
         }
      ]}
      ,
      {"title": "Fault Tolerance",
       "intro": "",
       "topics": [
         { "content": "Fundamental concepts: reliable and available systems (",
           "num": "0",
           "addressed": "No"
,
           "xrefs": " {SF_Reliability_through_Redundancy}{SF/Reliability through Redundancy})"         },
         { "content": "Spatial and temporal redundancy (",
           "num": "1",
           "addressed": "No"
,
           "xrefs": " {SF_Reliability_through_Redundancy}{SF/Reliability through Redundancy})"         },
         { "content": "Methods used to implement fault tolerance",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Examples of OS mechanisms for detection, recovery, restart to implement fault tolerance, use of these",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "techniques for the OS’s own services",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain the relevance of the terms fault tolerance, reliability, and availability. [Familiarity]Explain the relevance of the terms fault tolerance, reliability, and availability. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Outline the range of methods for implementing fault tolerance in an operating system. [Familiarity]Outline the range of methods for implementing fault tolerance in an operating system. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Explain how an operating system can continue functioning after a fault occurs. [Familiarity]Explain how an operating system can continue functioning after a fault occurs. ",
           "mastery": "No",
           "num": "2"
         }
      ]}
      ,
      {"title": "System Performance Evaluation",
       "intro": "",
       "topics": [
         { "content": "Why system performance needs to be evaluated (",
           "num": "0",
           "addressed": "No"
,
           "xrefs": " {SF_Performance}{SF/Performance}/Figures of performance merit)"         },
         { "content": "What is to be evaluated (",
           "num": "1",
           "addressed": "No"
,
           "xrefs": " {SF_Performance}{SF/Performance}/Figures of performance merit)"         },
         { "content": "Systems performance policies, e.g., caching, paging, scheduling, memory management, and security",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Evaluation models: deterministic, analytic, simulation, or implementation-specific",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "How to collect evaluation data (profiling and tracing mechanisms)",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe the performance measurements used to determine how a system performs. [Familiarity]Describe the performance measurements used to determine how a system performs. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain the main evaluation models used to evaluate a system. [Familiarity]Explain the main evaluation models used to evaluate a system. ",
           "mastery": "No",
           "num": "1"
         }
      ]}
]},
{"abbrev": "HCI",
  "title": "Human-Computer Interaction",
  "intro": "Human-computer interaction (HCI) is concerned with designing interactions between human activities and the computational systems that support them, and with constructing interfaces to afford those interactions. Interaction between users and computational artefacts occurs at an interface that includes both software and hardware. Thus interface design impacts the software life-cycle in that it should occur early; the design and implementation of core functionality can influence the user interface – for better or worse. Because it deals with people as well as computational systems, as a knowledge area HCI demands the consideration of cultural, social, organizational, cognitive and perceptual issues. Consequently it draws on a variety of disciplinary traditions, including psychology, ergonomics, computer science, graphic and product design, anthropology and engineering. ",
  "units": [
      {"title": "Foundations",
       "intro": "Motivation: For end-users, the interface is the system. So design in this domain must be interaction-focused and human-centered. Students need a different repertoire of techniques to address this than is provided elsewhere in the curriculum. ",
       "topics": [
         { "content": "Contexts for HCI (anything with a user interface, e.g., webpage, business applications, mobile applications, and games)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Processes for user-centered development, e.g., early focus on users, empirical testing, iterative design",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Different measures for evaluation, e.g., utility, efficiency, learnability, user satisfaction",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Usability heuristics and the principles of usability testing",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Physical capabilities that inform interaction design, e.g., color perception, ergonomics",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Cognitive models that inform interaction design, e.g., attention, perception and recognition, movement, and memory; gulfs of expectation and execution",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Social models that inform interaction design, e.g., culture, communication, networks and organizations",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Principles of good design and good designers; engineering tradeoffs",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Accessibility, e.g., interfaces for differently-abled populations (e.g., blind, motion-impaired)",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Interfaces for differently-aged population groups (e.g., children, 80+)",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Discuss why human-centered software development is important. [Familiarity]Discuss why human-centered software development is important. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Summarize the basic precepts of psychological and social interaction. [Familiarity]Summarize the basic precepts of psychological and social interaction. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Develop and use a conceptual vocabulary for analyzing human interaction with software: affordance,Develop and use a conceptual vocabulary for analyzing human interaction with software: affordance,conceptual model, feedback, and so forth. [Usage]conceptual model, feedback, and so forth. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Define a user-centered design process that explicitly takes account of the fact that the user is not like the developer or their acquaintances. [Usage]Define a user-centered design process that explicitly takes account of the fact that the user is not like the developer or their acquaintances. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Create and conduct a simple usability test for an existing software application. [Assessment]Create and conduct a simple usability test for an existing software application. ",
           "mastery": "No",
           "num": "4"
         }
      ]}
      ,
      {"title": "Designing Interaction",
       "intro": "Motivation: CS students need a minimal set of well-established methods and tools to bring to interface construction. ",
       "topics": [
         { "content": "Principles of graphical user interfaces (GUIs)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Elements of visual design (layout, color, fonts, labeling)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Task analysis, including qualitative aspects of generating task analytic models",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Low-fidelity (paper) prototyping",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Quantitative evaluation techniques, e.g., keystroke-level evaluation",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Help and documentation",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Handling human/system failure",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "User interface standards",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "For an identified user group, undertake and document an analysis of their needs. [Assessment]For an identified user group, undertake and document an analysis of their needs. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Create a simple application, together with help and documentation, that supports a graphical userCreate a simple application, together with help and documentation, that supports a graphical userinterface. [Usage]interface. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Conduct a quantitative evaluation and discuss/report the results. [Usage]Conduct a quantitative evaluation and discuss/report the results. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Discuss at least one national or international user interface design standard. [Familiarity]Discuss at least one national or international user interface design standard. ",
           "mastery": "No",
           "num": "3"
         }
      ]}
      ,
      {"title": "Programming Interactive Systems",
       "intro": "Motivation: To take a user-experience-centered view of software development and then cover approaches and technologies to make that happen. ",
       "topics": [
         { "content": "Software Architecture Patterns, e.g., Model-View controller; command objects, online, offline (",
           "num": "0",
           "addressed": "No"
,
           "xrefs": " {PL_Event_Driven}{PL/Event Driven}, {PL_Reactive_Programming}{PL/Reactive Programming}, where MVC is used in the context of event-driven programming)"         },
         { "content": "Interaction Design Patterns: visual hierarchy, navigational distance",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Event management and user interaction",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Geometry management (",
           "num": "3",
           "addressed": "No"
,
           "xrefs": " GV/Geometric Modelling)"         },
         { "content": "Choosing interaction styles and interaction techniques",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Presenting information: navigation, representation, manipulation",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Interface animation techniques (e.g., scene graphs)",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Widget classes and libraries",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Modern GUI libraries (e.g. iOS, Android, JavaFX) GUI builders and UI programming environments (",
           "num": "8",
           "addressed": "No"
,
           "xrefs": " {PBD_Mobile_Platforms}{PBD/Mobile Platforms})"         },
         { "content": "Declarative Interface Specification: Stylesheets and DOMs",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Data-driven applications (database-backed web pages)",
           "num": "10",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Cross-platform design",
           "num": "11",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Design for resource-constrained devices (e.g. small, mobile devices)",
           "num": "12",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain the importance of Model-View controller to interface programming. [Familiarity]Explain the importance of Model-View controller to interface programming. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Create an application with a modern graphical user interface. [Usage]Create an application with a modern graphical user interface. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Identify commonalities and differences in UIs across different platforms. [Familiarity]Identify commonalities and differences in UIs across different platforms. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Explain and use GUI programming concepts: event handling, constraint-based layout management, etc.Explain and use GUI programming concepts: event handling, constraint-based layout management, etc.[Familiarity]",
           "mastery": "No",
           "num": "3"
         }
      ]}
      ,
      {"title": "User-Centered Design and Testing",
       "intro": "Motivation: An exploration of techniques to ensure that end-users are fully considered at all stages of the design process, from inception to implementation. ",
       "topics": [
         { "content": "Approaches to, and characteristics of, the design process",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Functionality and usability requirements (",
           "num": "1",
           "addressed": "No"
,
           "xrefs": " {SE_Requirements_Engineering}{SE/Requirements Engineering})"         },
         { "content": "Techniques for gathering requirements, e.g., interviews, surveys, ethnographic and contextual enquiry",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Techniques and tools for the analysis and presentation of requirements, e.g., reports, personas",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Prototyping techniques and tools, e.g., sketching, storyboards, low-fidelity prototyping, wireframes",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Evaluation without users, using both qualitative and quantitative techniques, e.g., walkthroughs, GOMS,",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "expert-based analysis, heuristics, guidelines, and standards",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Evaluation with users, e.g., observation, think-aloud, interview, survey, experiment",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Challenges to effective evaluation, e.g., sampling, generalization",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Reporting the results of evaluations",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Internationalization, designing for users from other cultures, cross-cultural",
           "num": "10",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain how user-centered design complements other software process models. [Familiarity]Explain how user-centered design complements other software process models. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Use lo-fi (low fidelity) prototyping techniques to gather, and report, user responses. [Usage]Use lo-fi (low fidelity) prototyping techniques to gather, and report, user responses. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Choose appropriate methods to support the development of a specific UI. [Assessment]Choose appropriate methods to support the development of a specific UI. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Use a variety of techniques to evaluate a given UI. [Assessment]Use a variety of techniques to evaluate a given UI. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Compare the constraints and benefits of different evaluative methods. [Assessment]Compare the constraints and benefits of different evaluative methods. ",
           "mastery": "No",
           "num": "4"
         }
      ]}
      ,
      {"title": "New Interactive Technologies",
       "intro": "Motivation: As technologies evolve, new interaction styles are made possible. This knowledge unit should be considered extensible, to track emergent technology. ",
       "topics": [
         { "content": "Choosing interaction styles and interaction techniques",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Representing information to users: navigation, representation, manipulation",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Approaches to design, implementation and evaluation of non-mouse interaction",
           "num": "2",
           "subtopics": [         { "content": "Touch and multi-touch interfaces",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Shared, embodied, and large interfaces",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "New input modalities (such as sensor and location data)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "New Windows, e.g., iPhone, Android",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Speech recognition and natural language processing (cross reference {IS/Natural Language Processing})",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Wearable and tangible interfaces",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Persuasive interaction and emotion",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Ubiquitous and context-aware interaction technologies (Ubicomp)",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Bayesian inference (e.g. predictive text, guided pointing)",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Ambient/peripheral display and interaction",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe when non-mouse interfaces are appropriate. [Familiarity]Describe when non-mouse interfaces are appropriate. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Understand the interaction possibilities beyond mouse-and-pointer interfaces. [Familiarity]Understand the interaction possibilities beyond mouse-and-pointer interfaces. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Discuss the advantages (and disadvantages) of non-mouse interfaces. [Assessment]Discuss the advantages (and disadvantages) of non-mouse interfaces. ",
           "mastery": "No",
           "num": "2"
         }
      ]}
      ,
      {"title": "Collaboration and Communication",
       "intro": "Motivation: Computer interfaces not only support users in achieving their individual goals but also in their interaction with others, whether that is task-focused (work or gaming) or task- unfocused (social networking). ",
       "topics": [
         { "content": "Asynchronous group communication, e.g., e-mail, forums, social networks",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Synchronous group communication, e.g., chat rooms, conferencing, online games",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Social media, social computing, and social network analysis",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Online collaboration, 'smart' spaces, and social coordination aspects of workflow technologies",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Online communities",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Software characters and intelligent agents, virtual worlds and avatars (",
           "num": "5",
           "addressed": "No"
,
           "xrefs": " {IS_Agents}{IS/Agents})"         },
         { "content": "Social psychology",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe the difference between synchronous and asynchronous communication. [Familiarity]Describe the difference between synchronous and asynchronous communication. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Compare the HCI issues in individual interaction with group interaction. [Assessment]Compare the HCI issues in individual interaction with group interaction. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Discuss several issues of social concern raised by collaborative software. [Familiarity]Discuss several issues of social concern raised by collaborative software. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Discuss the HCI issues in software that embodies human intention. [Familiarity]Discuss the HCI issues in software that embodies human intention. ",
           "mastery": "No",
           "num": "3"
         }
      ]}
      ,
      {"title": "Statistical Methods for HCI",
       "intro": "Motivation: Much HCI work depends on the proper use, understanding and application of statistics. This knowledge is often held by students who join the field from psychology, but less common in students with a CS background. ",
       "topics": [
         { "content": "t-tests",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "ANOVA",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Randomization (non-parametric) testing, within vs. between-subjects design",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Calculating effect size",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Exploratory data analysis",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Presenting statistical data",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Combining qualitative and quantitative results",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain basic statistical concepts and their areas of application. [Familiarity]Explain basic statistical concepts and their areas of application. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Extract and articulate the statistical arguments used in papers that quantitatively report user studies.Extract and articulate the statistical arguments used in papers that quantitatively report user studies.[Usage]",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Design a user study that will yield quantitative results. [Usage]Design a user study that will yield quantitative results. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Conduct and report on a study that utilizes both qualitative and quantitative evaluation. [Usage]Conduct and report on a study that utilizes both qualitative and quantitative evaluation. ",
           "mastery": "No",
           "num": "3"
         }
      ]}
      ,
      {"title": "Human Factors and Security",
       "intro": "Motivation: Effective interface design requires basic knowledge of security psychology. Many attacks do not have a technological basis, but exploit human propensities and vulnerabilities. “Only amateurs attack machines; professionals target people” (Bruce Schneier, https://www.schneier.com/blog/archives/2013/03/phishing_has_go.h.) ",
       "topics": [
         { "content": "Applied psychology and security policies",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Security economics",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Regulatory environments – responsibility, liability and self-determination",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Organizational vulnerabilities and threats",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Usability design and security",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Pretext, impersonation and fraud, e.g., phishing and spear phishing (",
           "num": "5",
           "addressed": "No"
,
           "xrefs": " {IAS_Threats_and_Attacks}{IAS/Threats and Attacks})"         },
         { "content": "Trust, privacy and deception",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Biometric authentication (camera, voice)",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Identity management",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain the concepts of phishing and spear phishing, and how to recognize them. [Familiarity]Explain the concepts of phishing and spear phishing, and how to recognize them. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe the issues of trust in interface design with an example of a high and low trust system.Describe the issues of trust in interface design with an example of a high and low trust system.[Assessment]",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Design a user interface for a security mechanism. [Assessment]Design a user interface for a security mechanism. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Explain the concept of identity management and its importance. [Familiarity]Explain the concept of identity management and its importance. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Analyze a security policy and/or procedures to show where they consider, or fail to consider, humanAnalyze a security policy and/or procedures to show where they consider, or fail to consider, humanfactors. [Usage]factors. ",
           "mastery": "No",
           "num": "4"
         }
      ]}
      ,
      {"title": "Design-Oriented HCI",
       "intro": "Motivation: Some curricula will want to emphasize an understanding of the norms and values of HCI work itself as emerging from, and deployed within specific historical, disciplinary and cultural contexts. ",
       "topics": [
         { "content": "Intellectual styles and perspectives to technology and its interfaces",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Consideration of HCI as a design discipline",
           "num": "1",
           "subtopics": [         { "content": "Sketching",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Participatory design",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Critically reflective HCI",
           "num": "2",
           "subtopics": [         { "content": "Critical technical practice",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Technologies for political activism",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Philosophy of user experience",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Ethnography and ethnomethodology",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Indicative domains of application",
           "num": "3",
           "subtopics": [         { "content": "Sustainability",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Arts-informed computing",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain what is meant by “HCI is a design-oriented discipline”. [Familiarity]Explain what is meant by “HCI is a design-oriented discipline”. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Detail the processes of design appropriate to specific design orientations. [Familiarity]Detail the processes of design appropriate to specific design orientations. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Apply a variety of design methods to a given problem. [Usage]Apply a variety of design methods to a given problem. ",
           "mastery": "No",
           "num": "2"
         }
      ]}
      ,
      {"title": "Mixed, Augmented and Virtual Reality",
       "intro": "Motivation: A detailed consideration of the interface components required for the creation and development of immersive environments, especially games. ",
       "topics": [
         { "content": "Output",
           "num": "0",
           "subtopics": [         { "content": "Sound",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Stereoscopic display",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Force feedback simulation, haptic devices",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "User input",
           "num": "1",
           "subtopics": [         { "content": "Viewer and object tracking",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Pose and gesture recognition",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Accelerometers",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Fiducial markers",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "User interface issues",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Physical modelling and rendering",
           "num": "2",
           "subtopics": [         { "content": "Physical simulation: collision detection & response, animation",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Visibility computation",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Time-critical rendering, multiple levels of details (LOD)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "System architectures",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Game engines",
           "num": "4",
           "subtopics": [         { "content": "Mobile augmented reality",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Flight simulators",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "CAVEs",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Medical imaging",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Networking",
           "num": "5",
           "subtopics": [         { "content": "p2p, client-server, dead reckoning, encryption, synchronization",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Distributed collaboration",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe the optical model realized by a computer graphics system to synthesize stereoscopic view.Describe the optical model realized by a computer graphics system to synthesize stereoscopic view.[Familiarity]",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe the principles of different viewer tracking technologies. [Familiarity]Describe the principles of different viewer tracking technologies. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe the differences between geometry- and image-based virtual reality. [Familiarity]Describe the differences between geometry- and image-based virtual reality. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe the issues of user action synchronization and data consistency in a networked environment.Describe the issues of user action synchronization and data consistency in a networked environment.[Familiarity]",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Determine the basic requirements on interface, hardware, and software configurations of a VR system for aDetermine the basic requirements on interface, hardware, and software configurations of a VR system for aspecified application. [Usage]specified application. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Describe several possible uses for games engines, including their potential and their limitations.Describe several possible uses for games engines, including their potential and their limitations.[Familiarity]",
           "mastery": "No",
           "num": "5"
         }
      ]}
]},
{"abbrev": "GV",
  "title": "Graphics and Visualization (GV)",
  "intro": "Computer graphics is the term commonly used to describe the computer generation and manipulation of images. It is the science of enabling visual communication through computation. Its uses include cartoons, film special effects, video games, medical imaging, engineering, as well as scientific, information, and knowledge visualization. Traditionally, graphics at the undergraduate level has focused on rendering, linear algebra, and phenomenological approaches. More recently, the focus has begun to include physics, numerical integration, scalability, and special-purpose hardware. In order for students to become adept at the use and generation of computer graphics, many implementation-specific issues must be addressed, such as file formats, hardware interfaces, and application program interfaces. These issues change rapidly, and the description that follows attempts to avoid being overly prescriptive about them. The area encompassed by Graphics and Visualization is divided into several interrelated fields: • Fundamentals: Computer graphics depends on an understanding of how humans use vision to perceive information and how information can be rendered on a display device. Every computer scientist should have some understanding of where and how graphics can be appropriately applied as well as the fundamental processes involved in display rendering. • Modeling: Information to be displayed must be encoded in computer memory in some form, often in the form of a mathematical specification of shape and form. • Rendering: Rendering is the process of displaying the information contained in a model. • Animation: Animation is the rendering in a manner that makes images appear to move and the synthesis or acquisition of the time variations of models. • Visualization: The field of visualization seeks to determine and present underlying correlated structures and relationships in data sets from a wide variety of application areas. The prime objective of the presentation should be to communicate the information in a dataset so as to enhance understanding • Computational Geometry: Computational Geometry is the study of algorithms that are stated in terms of geometry. Graphics and Visualization is related to machine vision and image processing, which are found in the Intelligent Systems (IS) KA, and algorithms such as computational geometry, which are found in the Algorithms and Complexity (AL) KA. Topics in virtual reality are found in the Human-Computer Interaction (HCI) KA. This description assumes students are familiar with fundamental concepts of data representation, abstraction, and program implementation. ",
  "units": [
      {"title": "Fundamental Concepts",
       "intro": "For nearly every computer scientist and software developer, an understanding of how humans interact with machines is essential. While these topics may be covered in a standard undergraduate graphics course, they may also be covered in introductory computer science and programming courses. Part of our motivation for including immediate and retained modes is that these modes are analogous to polling vs. event driven programming. This is a fundamental question in computer science: Is there a button object, or is there just the display of a button on the screen? Note that most of the outcomes in this section are at the knowledge level, and many of these topics are revisited in greater depth in later sections. ",
       "topics": [
         { "content": "Media applications including user interfaces, audio and video editing, game engines, cad, visualization, virtual reality",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Digitization of analog data, resolution, and the limits of human perception, e.g., pixels for visual display, dots for laser printers, and samples for audio (HCI/Foundations)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Use of standard APIs for the construction of UIs and display of standard media formats (see HCI/GUI construction)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Standard media formats, including lossless and lossy formats",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Additive and subtractive color models (CMYK and RGB) and why these provide a range of colors",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Tradeoffs between storing data and re-computing data as embodied by vector and raster representations of images",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Animation as a sequence of still images",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Double buffering",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Identify common uses of digital presentation to humans (e.g., computer graphics, sound). [Familiarity]Identify common uses of digital presentation to humans (e.g., computer graphics, sound). ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain in general terms how analog signals can be reasonably represented by discrete samples, forExplain in general terms how analog signals can be reasonably represented by discrete samples, forexample, how images can be represented by pixels. [Familiarity]example, how images can be represented by pixels. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Explain how the limits of human perception affect choices about the digital representation of analogExplain how the limits of human perception affect choices about the digital representation of analogsignals. [Familiarity]signals. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Construct a simple user interface using a standard API. [Usage]Construct a simple user interface using a standard API. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Describe the differences between lossy and lossless image compression techniques, for example asDescribe the differences between lossy and lossless image compression techniques, for example asreflected in common graphics image file formats such as JPG, PNG, MP3, MP4, and GIF. [Familiarity]reflected in common graphics image file formats such as JPG, PNG, MP3, MP4, and GIF. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Describe color models and their use in graphics display devices. [Familiarity]Describe color models and their use in graphics display devices. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Describe the tradeoffs between storing information vs. storing enough information to reproduce theDescribe the tradeoffs between storing information vs. storing enough information to reproduce theinformation, as in the difference between vector and raster rendering. [Familiarity]information, as in the difference between vector and raster rendering. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Describe the basic process of producing continuous motion from a sequence of discrete frames (sometimesDescribe the basic process of producing continuous motion from a sequence of discrete frames (sometimescalled “flicker fusion”). [Familiarity]called “flicker fusion”). ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Describe how double-buffering can remove flicker from animation. [Familiarity]Describe how double-buffering can remove flicker from animation. ",
           "mastery": "No",
           "num": "8"
         }
      ]}
      ,
      {"title": "Basic Rendering",
       "intro": "This section describes basic rendering and fundamental graphics techniques that nearly every undergraduate course in graphics will cover and that are essential for further study in graphics. Sampling and anti-aliasing are related to the effect of digitization and appear in other areas of computing, for example, in audio sampling. ",
       "topics": [
         { "content": "Rendering in nature, e.g., the emission and scattering of light and its relation to numerical integration",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Forward and backward rendering (i.e., ray-casting and rasterization)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Polygonal representation",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Basic radiometry, similar triangles, and projection model",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Affine and coordinate system transformations",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Ray tracing",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Visibility and occlusion, including solutions to this problem such as depth buffering, Painter’s algorithm, and ray tracing",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "The forward and backward rendering equation",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Simple triangle rasterization",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Rendering with a shader-based API",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Texture mapping, including minification and magnification (e.g., trilinear MIP-mapping)",
           "num": "10",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Application of spatial data structures to rendering",
           "num": "11",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Sampling and anti-aliasing",
           "num": "12",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Scene graphs and the graphics pipeline",
           "num": "13",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Discuss the light transport problem and its relation to numerical integration i.e., light is emitted, scattersDiscuss the light transport problem and its relation to numerical integration i.e., light is emitted, scattersaround the scene, and is measured by the eye. [Familiarity]around the scene, and is measured by the eye. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe the basic graphics pipeline and how forward and backward rendering factor in this. [Familiarity]Describe the basic graphics pipeline and how forward and backward rendering factor in this. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Create a program to display 3D models of simple graphics images. [Usage]Create a program to display 3D models of simple graphics images. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Derive linear perspective from similar triangles by converting points (x, y, z) to points (x/z, y/z, 1). [Usage]Derive linear perspective from similar triangles by converting points (x, y, z) to points (x/z, y/z, 1). ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Obtain 2-dimensional and 3-dimensional points by applying affine transformations. [Usage]Obtain 2-dimensional and 3-dimensional points by applying affine transformations. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Apply 3-dimensional coordinate system and the changes required to extend 2D transformation operations toApply 3-dimensional coordinate system and the changes required to extend 2D transformation operations tohandle transformations in 3D. [Usage]handle transformations in 3D. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Contrast forward and backward rendering. [Assessment]Contrast forward and backward rendering. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Explain the concept and applications of texture mapping, sampling, and anti-aliasing. [Familiarity]Explain the concept and applications of texture mapping, sampling, and anti-aliasing. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Explain the ray tracing/rasterization duality for the visibility problem. [Familiarity]Explain the ray tracing/rasterization duality for the visibility problem. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "Implement simple procedures that perform transformation and clipping operations on simple 2-dimensionalImplement simple procedures that perform transformation and clipping operations on simple 2-dimensionalimages. [Usage]images. ",
           "mastery": "No",
           "num": "9"
         },
         {"content": "Implement a simple real-time renderer using a rasterization API (e.g., OpenGL) using vertex buffers andImplement a simple real-time renderer using a rasterization API (e.g., OpenGL) using vertex buffers andshaders. [Usage]shaders. ",
           "mastery": "No",
           "num": "10"
         },
         {"content": "Compare and contrast the different rendering techniques. [Assessment]Compare and contrast the different rendering techniques. ",
           "mastery": "No",
           "num": "11"
         },
         {"content": "Compute space requirements based on resolution and color coding. [Assessment]Compute space requirements based on resolution and color coding. ",
           "mastery": "No",
           "num": "12"
         },
         {"content": "Compute time requirements based on refresh rates, rasterization techniques. [Assessment]Compute time requirements based on refresh rates, rasterization techniques. ",
           "mastery": "No",
           "num": "13"
         }
      ]}
      ,
      {"title": "Geometric Modeling",
       "intro": "",
       "topics": [
         { "content": "Basic geometric operations such as intersection calculation and proximity tests",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Volumes, voxels, and point-based representations",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Parametric polynomial curves and surfaces",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Implicit representation of curves and surfaces",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Approximation techniques such as polynomial curves, Bezier curves, spline curves and surfaces, and non- uniform rational basis (NURB) spines, and level set method",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Surface representation techniques including tessellation, mesh representation, mesh fairing, and mesh generation techniques such as Delaunay triangulation, marching cubes",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Spatial subdivision techniques",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Procedural models such as fractals, generative modeling, and L-systems",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Graftals (",
           "num": "8",
           "addressed": "No"
,
           "xrefs": "d with programming languages -- grammars to generated pictures)"         },
         { "content": "Elastically deformable and freeform deformable models",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Subdivision surfaces",
           "num": "10",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Multiresolution modeling",
           "num": "11",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Reconstruction",
           "num": "12",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Constructive Solid Geometry (CSG) representation",
           "num": "13",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Represent curves and surfaces using both implicit and parametric forms. [Usage]Represent curves and surfaces using both implicit and parametric forms. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Create simple polyhedral models by surface tessellation. [Usage]Create simple polyhedral models by surface tessellation. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Generate a mesh representation from an implicit surface. [Usage]Generate a mesh representation from an implicit surface. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Generate a fractal model or terrain using a procedural method. [Usage]Generate a fractal model or terrain using a procedural method. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Generate a mesh from data points acquired with a laser scanner. [Usage]Generate a mesh from data points acquired with a laser scanner. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Construct CSG models from simple primitives, such as cubes and quadric surfaces. [Usage]Construct CSG models from simple primitives, such as cubes and quadric surfaces. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Contrast modeling approaches with respect to space and time complexity and quality of image. [Assessment]Contrast modeling approaches with respect to space and time complexity and quality of image. ",
           "mastery": "No",
           "num": "6"
         }
      ]}
      ,
      {"title": "Advanced Rendering",
       "intro": "",
       "topics": [
         { "content": "Solutions and approximations to the rendering equation, for example:",
           "num": "0",
           "subtopics": [         { "content": "Distribution ray tracing and path tracing",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Photon mapping",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Bidirectional path tracing",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Reyes (micropolygon) rendering",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Metropolis light transport",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Time (motion blur), lens position (focus), and continuous frequency (color) and their impact on rendering",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Shadow mapping",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Occlusion culling",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Bidirectional Scattering Distribution function (BSDF) theory and microfacets",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Subsurface scattering",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Area light sources",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Hierarchical depth buffering",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "The Light Field, image-based rendering",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Non-photorealistic rendering",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "GPU architecture",
           "num": "10",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Human visual systems including adaptation to light, sensitivity to noise, and flicker fusion",
           "num": "11",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Demonstrate how an algorithm estimates a solution to the rendering equation. [Assessment]Demonstrate how an algorithm estimates a solution to the rendering equation. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Prove the properties of a rendering algorithm, e.g., complete, consistent, and unbiased. [Assessment]Prove the properties of a rendering algorithm, e.g., complete, consistent, and unbiased. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Analyze the bandwidth and computation demands of a simple algorithm. [Assessment]Analyze the bandwidth and computation demands of a simple algorithm. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Implement a non-trivial shading algorithm (e.g., toon shading, cascaded shadow maps) under a rasterizationImplement a non-trivial shading algorithm (e.g., toon shading, cascaded shadow maps) under a rasterizationAPI. [Usage]API. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Discuss how a particular artistic technique might be implemented in a renderer. [Familiarity]Discuss how a particular artistic technique might be implemented in a renderer. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Explain how to recognize the graphics techniques used to create a particular image. [Familiarity]Explain how to recognize the graphics techniques used to create a particular image. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Implement any of the specified graphics techniques using a primitive graphics system at the individualImplement any of the specified graphics techniques using a primitive graphics system at the individualpixel level. [Usage]pixel level. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Implement a ray tracer for scenes using a simple (e.g., Phong model) BRDF plus reflection and refraction.Implement a ray tracer for scenes using a simple (e.g., Phong model) BRDF plus reflection and refraction.[Usage]",
           "mastery": "No",
           "num": "7"
         }
      ]}
      ,
      {"title": "Computer Animation",
       "intro": "",
       "topics": [
         { "content": "Forward and inverse kinematics",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Collision detection and response",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Procedural animation using noise, rules (boids/crowds), and particle systems",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Skinning algorithms",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Physics based motions including rigid body dynamics, physical particle systems, mass-spring networks for cloth and flesh and hair",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Key-frame animation",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Splines",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Data structures for rotations, such as quaternions",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Camera animation",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Motion capture",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Compute the location and orientation of model parts using a forward kinematic approach. [Usage]Compute the location and orientation of model parts using a forward kinematic approach. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Compute the orientation of articulated parts of a model from a location and orientation using an inverseCompute the orientation of articulated parts of a model from a location and orientation using an inversekinematic approach. [Usage]kinematic approach. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe the tradeoffs in different representations of rotations. [Assessment]Describe the tradeoffs in different representations of rotations. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Implement the spline interpolation method for producing in-between positions and orientations. [Usage]Implement the spline interpolation method for producing in-between positions and orientations. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Implement algorithms for physical modeling of particle dynamics using simple Newtonian mechanics, forImplement algorithms for physical modeling of particle dynamics using simple Newtonian mechanics, forexample Witkin & Kass, snakes and worms, symplectic Euler, Stormer/Verlet, or midpoint Euler methods.example Witkin & Kass, snakes and worms, symplectic Euler, Stormer/Verlet, or midpoint Euler methods.[Usage]",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Discuss the basic ideas behind some methods for fluid dynamics for modeling ballistic trajectories, forDiscuss the basic ideas behind some methods for fluid dynamics for modeling ballistic trajectories, forexample for splashes, dust, fire, or smoke. [Familiarity]example for splashes, dust, fire, or smoke. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Use common animation software to construct simple organic forms using metaball and skeleton. [Usage]Use common animation software to construct simple organic forms using metaball and skeleton. ",
           "mastery": "No",
           "num": "6"
         }
      ]}
      ,
      {"title": "Visualization",
       "intro": "Visualization has strong ties to the Human-Computer Interaction (HCI) knowledge area as well as Computational Science (CN). Readers should refer to the HCI and CN KAs for additional topics related to user population and interface evaluations. ",
       "topics": [
         { "content": "Visualization of 2D/3D scalar fields: color mapping, isosurfaces",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Direct volume data rendering: ray-casting, transfer functions, segmentation",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Visualization of:",
           "num": "2",
           "subtopics": [         { "content": "Vector fields and flow data",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Time-varying data",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "High-dimensional data: dimension reduction, parallel coordinates,",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Non-spatial data: multi-variate, tree/graph structured, text",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Perceptual and cognitive foundations that drive visual abstractions",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Visualization design",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Evaluation of visualization methods",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Applications of visualization",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe the basic algorithms for scalar and vector visualization. [Familiarity]Describe the basic algorithms for scalar and vector visualization. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe the tradeoffs of visualization algorithms in terms of accuracy and performance. [Assessment]Describe the tradeoffs of visualization algorithms in terms of accuracy and performance. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Propose a suitable visualization design for a particular combination of data characteristics and application tasks. [Assessment]Propose a suitable visualization design for a particular combination of data characteristics and application tasks. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Analyze the effectiveness of a given visualization for a particular task. [Assessment]Analyze the effectiveness of a given visualization for a particular task. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Design a process to evaluate the utility of a visualization algorithm or system. [Assessment]Design a process to evaluate the utility of a visualization algorithm or system. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Recognize a variety of applications of visualization including representations of scientific, medical, andRecognize a variety of applications of visualization including representations of scientific, medical, andmathematical data; flow visualization; and spatial analysis. [Familiarity]mathematical data; flow visualization; and spatial analysis. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
]},
{"abbrev": "SF",
  "title": "Systems Fundamentals",
  "intro": "The underlying hardware and software infrastructure upon which applications are constructed is collectively described by the term \"computer systems.\" Computer systems broadly span the sub- disciplines of operating systems, parallel and distributed systems, communications networks, and computer architecture. Traditionally, these areas are taught in a non-integrated way through independent courses. However these sub-disciplines increasingly share important common fundamental concepts within their respective cores. These concepts include computational paradigms, parallelism, cross-layer communications, state and state transition, resource allocation and scheduling, and so on. The Systems Fundamentals Knowledge Area is designed to present an integrative view of these fundamental concepts in a unified albeit simplified fashion, providing a common foundation for the different specialized mechanisms and policies appropriate to the particular domain area. ",
  "units": [
      {"title": "Computational Paradigms",
       "intro": "The view presented here is the multiple representations of a system across layers, from hardware building blocks to application components, and the parallelism available in each representation. Cross-reference {PD/Parallelism Fundamentals}. ",
       "topics": [
         { "content": "Basic building blocks and components of a computer (gates, flip-flops, registers, interconnections;",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Datapath + Control + Memory)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Hardware as a computational paradigm: Fundamental logic building blocks; Logic expressions,",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "minimization, sum of product forms",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Application-level sequential processing: single thread",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Simple application-level parallel processing: request level (web services/client-server/distributed), single",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "thread per server, multiple threads with multiple servers",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Basic concept of pipelining, overlapped processing stages",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Basic concept of scaling: going faster vs. handling larger problems",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "List commonly encountered patterns of how computations are organized. [Familiarity]List commonly encountered patterns of how computations are organized. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe the basic building blocks of computers and their role in the historical development of computerDescribe the basic building blocks of computers and their role in the historical development of computerarchitecture. [Familiarity]architecture. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Articulate the differences between single thread vs. multiple thread, single server vs. multiple serverArticulate the differences between single thread vs. multiple thread, single server vs. multiple servermodels, motivated by real world examples (e.g., cooking recipes, lines for multiple teller machines andmodels, motivated by real world examples (e.g., cooking recipes, lines for multiple teller machines andcouples shopping for food). [Familiarity]couples shopping for food). ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Articulate the concept of strong vs. weak scaling, i.e., how performance is affected by scale of problem vs.Articulate the concept of strong vs. weak scaling, i.e., how performance is affected by scale of problem vs.scale of resources to solve the problem. This can be motivated by the simple, real-world examples.scale of resources to solve the problem. This can be motivated by the simple, real-world examples.[Familiarity]",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Design a simple logic circuit using the fundamental building blocks of logic design. [Usage]Design a simple logic circuit using the fundamental building blocks of logic design. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Use tools for capture, synthesis, and simulation to evaluate a logic design. [Usage]Use tools for capture, synthesis, and simulation to evaluate a logic design. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Write a simple sequential problem and a simple parallel version of the same program. [Usage]Write a simple sequential problem and a simple parallel version of the same program. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Evaluate performance of simple sequential and parallel versions of a program with different problem sizes,Evaluate performance of simple sequential and parallel versions of a program with different problem sizes,and be able to describe the speed-ups achieved. [Assessment]and be able to describe the speed-ups achieved. ",
           "mastery": "No",
           "num": "7"
         }
      ]}
      ,
      {"title": "Cross-Layer Communications",
       "intro": "Cross-reference {NC/Introduction}, {OS/Operating Systems Principles} ",
       "topics": [
         { "content": "Programming abstractions, interfaces, use of libraries",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Distinction between Application and OS services, Remote Procedure Call",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Application-Virtual Machine Interaction",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Reliability",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe how computing systems are constructed of layers upon layers, based on separation of concerns,Describe how computing systems are constructed of layers upon layers, based on separation of concerns,with well-defined interfaces, hiding details of low layers from the higher layers. [Familiarity]with well-defined interfaces, hiding details of low layers from the higher layers. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe how hardware, VM, OS, and applications are additional layers of interpretation/processing.Describe how hardware, VM, OS, and applications are additional layers of interpretation/processing.[Familiarity]",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe the mechanisms of how errors are detected, signaled back, and handled through the layers.Describe the mechanisms of how errors are detected, signaled back, and handled through the layers.[Familiarity]",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Construct a simple program using methods of layering, error detection and recovery, and reflection of errorConstruct a simple program using methods of layering, error detection and recovery, and reflection of errorstatus across layers. [Usage]status across layers. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Find bugs in a layered program by using tools for program tracing, single stepping, and debugging. [Usage]Find bugs in a layered program by using tools for program tracing, single stepping, and debugging. ",
           "mastery": "No",
           "num": "4"
         }
      ]}
      ,
      {"title": "State and State Machines",
       "intro": "Cross-reference {AL/Basic Computability and Complexity}, {OS/State and State Diagrams}, {NC/Protocols} ",
       "topics": [
         { "content": "Digital vs. Analog/Discrete vs. Continuous Systems",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Simple logic gates, logical expressions, Boolean logic simplification",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Clocks, State, Sequencing",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Combinational Logic, Sequential Logic, Registers, Memories",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Computers and Network Protocols as examples of state machines",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe computations as a system characyterized by a known set of configurations with transitions fromDescribe computations as a system characyterized by a known set of configurations with transitions fromone unique configuration (state) to another (state). [Familiarity]one unique configuration (state) to another (state). ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe the distinction between systems whose output is only a function of their input (Combinational)Describe the distinction between systems whose output is only a function of their input (Combinational)and those with memory/history (Sequential). [Familiarity]and those with memory/history (Sequential). ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe a computer as a state machine that interprets machine instructions. [Familiarity]Describe a computer as a state machine that interprets machine instructions. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Explain how a program or network protocol can also be expressed as a state machine, and that alternativeExplain how a program or network protocol can also be expressed as a state machine, and that alternativerepresentations for the same computation can exist. [Familiarity]representations for the same computation can exist. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Develop state machine descriptions for simple problem statement solutions (e.g., traffic light sequencing,Develop state machine descriptions for simple problem statement solutions (e.g., traffic light sequencing,pattern recognizers). [Usage]pattern recognizers). ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Derive time-series behavior of a state machine from its state machine representation. [Assessment]Derive time-series behavior of a state machine from its state machine representation. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Parallelism",
       "intro": "Cross-reference {PD/Parallelism Fundamentals}. ",
       "topics": [
         { "content": "Sequential vs. parallel processing",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Parallel programming vs. concurrent programming",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Request parallelism vs. Task parallelism",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Client-Server/Web Services, Thread (Fork-Join), Pipelining",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Multicore architectures and hardware support for synchronization",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "For a given program, distinguish between its sequential and parallel execution, and the performanceFor a given program, distinguish between its sequential and parallel execution, and the performanceimplications thereof. [Familiarity]implications thereof. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Demonstrate on an execution time line that parallelism events and operations can take place simultaneouslyDemonstrate on an execution time line that parallelism events and operations can take place simultaneously(i.e., at the same time). Explain how work can be performed in less elapsed time if this can be exploited.(i.e., at the same time). Explain how work can be performed in less elapsed time if this can be exploited.[Familiarity]",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Explain other uses of parallelism, such as for reliability/redundancy of execution. [Familiarity]Explain other uses of parallelism, such as for reliability/redundancy of execution. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Define the differences between the concepts of Instruction Parallelism, Data Parallelism, ThreadDefine the differences between the concepts of Instruction Parallelism, Data Parallelism, ThreadParallelism/Multitasking, Task/Request Parallelism. [Familiarity]Parallelism/Multitasking, Task/Request Parallelism. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Write more than one parallel program (e.g., one simple parallel program in more than one parallelWrite more than one parallel program (e.g., one simple parallel program in more than one parallelprogramming paradigm; a simple parallel program that manages shared resources through synchronizationprogramming paradigm; a simple parallel program that manages shared resources through synchronizationprimitives; a simple parallel program that performs simultaneous operation on partitioned data through taskprimitives; a simple parallel program that performs simultaneous operation on partitioned data through taskparallel (e.g., parallel search terms; a simple parallel program that performs step-by-step pipelineparallel (e.g., parallel search terms; a simple parallel program that performs step-by-step pipelineprocessing through message passing). [Usage]processing through message passing). ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Use performance tools to measure speed-up achieved by parallel programs in terms of both problem sizeUse performance tools to measure speed-up achieved by parallel programs in terms of both problem sizeand number of resources. [Assessment]and number of resources. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Evaluation",
       "intro": "Cross-reference {PD/Parallel Performance}. ",
       "topics": [
         { "content": "Performance figures of merit",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Workloads and representative benchmarks, and methods of collecting and analyzing performance figures of",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "merit",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "CPI (Cycles per Instruction) equation as tool for understanding tradeoffs in the design of instruction sets,",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "processor pipelines, and memory system organizations.",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Amdahl’s Law: the part of the computation that cannot be sped up limits the effect of the parts that can",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain how the components of system architecture contribute to improving its performance. [Familiarity]Explain how the components of system architecture contribute to improving its performance. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe Amdahl’s law and discuss its limitations. [Familiarity]Describe Amdahl’s law and discuss its limitations. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Design and conduct a performance-oriented experiment. [Usage]Design and conduct a performance-oriented experiment. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Use software tools to profile and measure program performance. [Assessment]Use software tools to profile and measure program performance. ",
           "mastery": "No",
           "num": "3"
         }
      ]}
      ,
      {"title": "Resource Allocation and Scheduling",
       "intro": "",
       "topics": [
         { "content": "Kinds of resources (e.g., processor share, memory, disk, net bandwidth)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Kinds of scheduling (e.g., first-come, priority)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Advantages of fair scheduling, preemptive scheduling",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Define how finite computer resources (e.g., processor share, memory, storage and network bandwidth) areDefine how finite computer resources (e.g., processor share, memory, storage and network bandwidth) aremanaged by their careful allocation to existing entities. [Familiarity]managed by their careful allocation to existing entities. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe the scheduling algorithms by which resources are allocated to competing entities, and the figuresDescribe the scheduling algorithms by which resources are allocated to competing entities, and the figuresof merit by which these algorithms are evaluated, such as fairness. [Familiarity]of merit by which these algorithms are evaluated, such as fairness. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Implement simple schedule algorithms. [Usage]Implement simple schedule algorithms. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Use figures of merit of alternative scheduler implementations. [Assessment]Use figures of merit of alternative scheduler implementations. ",
           "mastery": "No",
           "num": "3"
         }
      ]}
      ,
      {"title": "Proximity",
       "intro": "Cross-reference {AR/Memory Management}, {OS/Virtual Memory}. ",
       "topics": [
         { "content": "Speed of light and computers (one foot per nanosecond vs. one GHz clocks)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Latencies in computer systems: memory vs. disk latencies vs. across the network memory",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Caches and the effects of spatial and temporal locality on performance in processors and systems",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Caches and cache coherency in databases, operating systems, distributed systems, and computer",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "architecture",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Introduction into the processor memory hierarchy and the formula for average memory access time",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain the importance of locality in determining performance. [Familiarity]Explain the importance of locality in determining performance. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe why things that are close in space take less time to access. [Familiarity]Describe why things that are close in space take less time to access. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Calculate average memory access time and describe the tradeoffs in memory hierarchy performance inCalculate average memory access time and describe the tradeoffs in memory hierarchy performance interms of capacity, miss/hit rate, and access time. [Assessment]terms of capacity, miss/hit rate, and access time. ",
           "mastery": "No",
           "num": "2"
         }
      ]}
      ,
      {"title": "Virtualization and Isolation",
       "intro": "",
       "topics": [
         { "content": "Rationale for protection and predictable performance",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Levels of indirection, illustrated by virtual memory for managing physical memory resources",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Methods for implementing virtual memory and virtual machines",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain why it is important to isolate and protect the execution of individual programs and environmentsExplain why it is important to isolate and protect the execution of individual programs and environmentsthat share common underlying resources. [Familiarity]that share common underlying resources. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe how the concept of indirection can create the illusion of a dedicated machine and its resourcesDescribe how the concept of indirection can create the illusion of a dedicated machine and its resourceseven when physically shared among multiple programs and environments. [Familiarity]even when physically shared among multiple programs and environments. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Measure the performance of two application instances running on separate virtual machines, and determineMeasure the performance of two application instances running on separate virtual machines, and determinethe effect of performance isolation. [Assessment]the effect of performance isolation. ",
           "mastery": "No",
           "num": "2"
         }
      ]}
      ,
      {"title": "Reliability through Redundancy",
       "intro": "",
       "topics": [
         { "content": "Distinction between bugs and faults",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Redundancy through check and retry",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Redundancy through redundant encoding (error correcting codes, CRC, FEC)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Duplication/mirroring/replicas",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Other approaches to fault tolerance and availability",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain the distinction between program errors, system errors, and hardware faults (e.g., bad memory) andExplain the distinction between program errors, system errors, and hardware faults (e.g., bad memory) andexceptions (e.g., attempt to divide by zero). [Familiarity]exceptions (e.g., attempt to divide by zero). ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Articulate the distinction between detecting, handling, and recovering from faults, and the methods for theirArticulate the distinction between detecting, handling, and recovering from faults, and the methods for theirimplementation. [Familiarity]implementation. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe the role of error correcting codes in providing error checking and correction techniques inDescribe the role of error correcting codes in providing error checking and correction techniques inmemories, storage, and networks. [Familiarity]memories, storage, and networks. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Apply simple algorithms for exploiting redundant information for the purposes of data correction. [Usage]Apply simple algorithms for exploiting redundant information for the purposes of data correction. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Compare different error detection and correction methods for their data overhead, implementationCompare different error detection and correction methods for their data overhead, implementationcomplexity, and relative execution time for encoding, detecting, and correcting errors. [Assessment]complexity, and relative execution time for encoding, detecting, and correcting errors. ",
           "mastery": "No",
           "num": "4"
         }
      ]}
      ,
      {"title": "Quantitative Evaluation",
       "intro": "",
       "topics": [
         { "content": "Analytical tools to guide quantitative evaluation",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Order of magnitude analysis (Big-Oh notation)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Analysis of slow and fast paths of a system",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Events on their effect on performance (e.g., instruction stalls, cache misses, page faults)",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Understanding layered systems, workloads, and platforms, their implications for performance, and the",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "challenges they represent for evaluation",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Microbenchmarking pitfalls",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Explain the circumstances in which a given figure of system performance metric is useful. [Familiarity]Explain the circumstances in which a given figure of system performance metric is useful. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain the inadequacies of benchmarks as a measure of system performance. [Familiarity]Explain the inadequacies of benchmarks as a measure of system performance. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Use limit studies or simple calculations to produce order-of-magnitude estimates for a given performanceUse limit studies or simple calculations to produce order-of-magnitude estimates for a given performancemetric in a given context. [Usage]metric in a given context. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Conduct a performance experiment on a layered system to determine the effect of a system parameter onConduct a performance experiment on a layered system to determine the effect of a system parameter onfigure of system performance. [Assessment]figure of system performance. ",
           "mastery": "No",
           "num": "3"
         }
      ]}
]},
{"abbrev": "IS",
  "title": "Intelligent Systems",
  "intro": "Artificial intelligence (AI) is the study of solutions for problems that are difficult or impractical to solve with traditional methods. It is used pervasively in support of everyday applications such as email, word-processing and search, as well as in the design and analysis of autonomous agents that perceive their environment and interact rationally with the environment. The solutions rely on a broad set of general and specialized knowledge representation schemes, problem solving mechanisms and learning techniques. They deal with sensing (e.g., speech recognition, natural language understanding, computer vision), problem-solving (e.g., search, planning), and acting (e.g., robotics) and the architectures needed to support them (e.g., agents, multi-agents). The study of Artificial Intelligence prepares the student to determine when an AI approach is appropriate for a given problem, identify the appropriate representation and reasoning mechanism, and implement and evaluate it. ",
  "units": [
      {"title": "Fundamental Issues",
       "intro": "",
       "topics": [
         { "content": "Overview of AI problems, examples of successful recent AI applications",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "What is intelligent behavior?",
           "num": "1",
           "subtopics": [         { "content": "The Turing test",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Rational versus non-rational reasoning",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Problem characteristics",
           "num": "2",
           "subtopics": [         { "content": "Fully versus partially observable",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Single versus multi-agent",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Deterministic versus stochastic",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Static versus dynamic",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Discrete versus continuous",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Nature of agents",
           "num": "3",
           "subtopics": [         { "content": "Autonomous versus semi-autonomous",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Reflexive, goal-based, and utility-based",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "The importance of perception and environmental interactions",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Philosophical and ethical issues. [elective]",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe Turing test and the “Chinese Room” thought experiment. [Familiarity]Describe Turing test and the “Chinese Room” thought experiment. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Differentiate between the concepts of optimal reasoning/behavior and human-like reasoning/behavior.Differentiate between the concepts of optimal reasoning/behavior and human-like reasoning/behavior.[Familiarity]",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Determine the characteristics of a given problem that an intelligent system must solve. [Assessment]Determine the characteristics of a given problem that an intelligent system must solve. ",
           "mastery": "No",
           "num": "2"
         }
      ]}
      ,
      {"title": "Basic Search Strategies",
       "intro": "cross-reference {AL/Basic Analysis}, {AL/Algorithmic Strategies}, {AL/Fundamental Data Structures and Algorithms} ",
       "topics": [
         { "content": "Problem spaces (states, goals and operators), problem solving by search",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Factored representation (factoring state into variables)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Uninformed search (breadth-first, depth-first, depth-first with iterative deepening)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Heuristics and informed search (hill-climbing, generic best-first, A*)",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Space and time efficiency of search",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Two-player games (introduction to minimax search)",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Constraint satisfaction (backtracking and local search methods)",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Formulate an efficient problem space for a problem expressed in natural language (e.g., English) in termsFormulate an efficient problem space for a problem expressed in natural language (e.g., English) in termsof initial and goal states, and operators. [Usage]of initial and goal states, and operators. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe the role of heuristics and describe the trade-offs among completeness, optimality, timeDescribe the role of heuristics and describe the trade-offs among completeness, optimality, timecomplexity, and space complexity. [Familiarity]complexity, and space complexity. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe the problem of combinatorial explosion of search space and its consequences. [Familiarity]Describe the problem of combinatorial explosion of search space and its consequences. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Select and implement an appropriate uninformed search algorithm for a problem, and characterize its timeSelect and implement an appropriate uninformed search algorithm for a problem, and characterize its timeand space complexities. [Usage]and space complexities. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Select and implement an appropriate informed search algorithm for a problem by designing the necessarySelect and implement an appropriate informed search algorithm for a problem by designing the necessaryheuristic evaluation function. [Usage]heuristic evaluation function. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Evaluate whether a heuristic for a given problem is admissible/can guarantee optimal solution.Evaluate whether a heuristic for a given problem is admissible/can guarantee optimal solution.[Assessment]",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Formulate a problem specified in natural language (e.g., English) as a constraint satisfaction problem andFormulate a problem specified in natural language (e.g., English) as a constraint satisfaction problem andimplement it using a chronological backtracking algorithm or stochastic local search. [Usage]implement it using a chronological backtracking algorithm or stochastic local search. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Compare and contrast basic search issues with game playing issues. [Familiarity]Compare and contrast basic search issues with game playing issues. ",
           "mastery": "No",
           "num": "7"
         }
      ]}
      ,
      {"title": "Basic Knowledge Representation and Reasoning",
       "intro": "",
       "topics": [
         { "content": "Review of propositional and predicate logic (",
           "num": "0",
           "addressed": "No"
,
           "xrefs": " {DS_Basic_Logic}{DS/Basic Logic})"         },
         { "content": "Resolution and theorem proving (propositional logic only)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Forward chaining, backward chaining",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Review of probabilistic reasoning, Bayes theorem (",
           "num": "3",
           "addressed": "No"
,
           "xrefs": " {DS_Discrete_Probability}{DS/Discrete Probability})"         }
      ],
      "skills": [
         {"content": "Translate a natural language (e.g., English) sentence into predicate logic statement. [Usage]Translate a natural language (e.g., English) sentence into predicate logic statement. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Convert a logic statement into clause form. [Usage]Convert a logic statement into clause form. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Apply resolution to a set of logic statements to answer a query. [Usage]Apply resolution to a set of logic statements to answer a query. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Make a probabilistic inference in a real-world problem using Bayes’ theorem to determine the probability of a hypothesis given evidence. [Usage]Make a probabilistic inference in a real-world problem using Bayes’ theorem to determine the probability of a hypothesis given evidence. ",
           "mastery": "No",
           "num": "3"
         }
      ]}
      ,
      {"title": "Basic Machine Learning",
       "intro": "",
       "topics": [
         { "content": "Definition and examples of broad variety of machine learning tasks, including classification",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Inductive learning",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Simple statistical-based learning, such as Naive Bayesian Classifier, decision trees",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "The over-fitting problem",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Measuring classifier accuracy",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "List the differences among the three main styles of learning: supervised, reinforcement, and unsupervised.List the differences among the three main styles of learning: supervised, reinforcement, and unsupervised.[Familiarity]",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Identify examples of classification tasks, including the available input features and output to be predicted.Identify examples of classification tasks, including the available input features and output to be predicted.[Familiarity]",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Explain the difference between inductive and deductive learning. [Familiarity]Explain the difference between inductive and deductive learning. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe over-fitting in the context of a problem. [Familiarity]Describe over-fitting in the context of a problem. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Apply the simple statistical learning algorithm such as Naive Bayesian Classifier to a classification task andApply the simple statistical learning algorithm such as Naive Bayesian Classifier to a classification task andmeasure the classifier's accuracy. [Usage]measure the classifier's accuracy. ",
           "mastery": "No",
           "num": "4"
         }
      ]}
      ,
      {"title": "Advanced Search",
       "intro": "Note that the general topics of Branch-and-bound and Dynamic Programing are listed in AL/Algorithmic Strategies. ",
       "topics": [
         { "content": "Constructing search trees, dynamic search space, combinatorial explosion of search space",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Stochastic search",
           "num": "1",
           "subtopics": [         { "content": "Simulated annealing",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Genetic algorithms",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Monte-Carlo tree search",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Implementation of A* search, beam search",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Minimax search, alpha-beta pruning",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Expectimax search (MDP-solving) and chance nodes",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Design and implement a genetic algorithm solution to a problem. [Usage]Design and implement a genetic algorithm solution to a problem. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Design and implement a simulated annealing schedule to avoid local minima in a problem. [Usage]Design and implement a simulated annealing schedule to avoid local minima in a problem. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Design and implement A*/beam search to solve a problem. [Usage]Design and implement A*/beam search to solve a problem. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Apply minimax search with alpha-beta pruning to prune search space in a two-player game. [Usage]Apply minimax search with alpha-beta pruning to prune search space in a two-player game. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Compare and contrast genetic algorithms with classic search techniques. [Assessment]Compare and contrast genetic algorithms with classic search techniques. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Compare and contrast various heuristic searches vis-a-vis applicability to a given problem. [Assessment]Compare and contrast various heuristic searches vis-a-vis applicability to a given problem. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Advanced Representation and Reasoning",
       "intro": "",
       "topics": [
         { "content": "Knowledge representation issues",
           "num": "0",
           "subtopics": [         { "content": "Description logics",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Ontology engineering",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Non-monotonic reasoning (e.g., non-classical logics, default reasoning)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Argumentation",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Reasoning about action and change (e.g., situation and event calculus)",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Temporal and spatial reasoning",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Rule-based Expert Systems",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Semantic networks",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Model-based and Case-based reasoning",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Planning:",
           "num": "8",
           "subtopics": [         { "content": "Partial and totally ordered planning",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Plan graphs",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Hierarchical planning",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Planning and execution including conditional planning and continuous planning",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Mobile agent/Multi-agent planning",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Compare and contrast the most common models used for structured knowledge representation, highlightingCompare and contrast the most common models used for structured knowledge representation, highlightingtheir strengths and weaknesses. [Assessment]their strengths and weaknesses. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "2. Identify the components of non-monotonic reasoning and its usefulness as a representational mechanism2. Identify the components of non-monotonic reasoning and its usefulness as a representational mechanismfor belief systems. [Familiarity]for belief systems. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "3. Compare and contrast the basic techniques for representing uncertainty. [Assessment]3. Compare and contrast the basic techniques for representing uncertainty. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "4. Compare and contrast the basic techniques for qualitative representation. [Assessment]4. Compare and contrast the basic techniques for qualitative representation. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "5. Apply situation and event calculus to problems of action and change. [Usage]5. Apply situation and event calculus to problems of action and change. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "6. Explain the distinction between temporal and spatial reasoning, and how they interrelate. [Familiarity]6. Explain the distinction between temporal and spatial reasoning, and how they interrelate. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "7. Explain the difference between rule-based, case-based and model-based reasoning techniques. [Familiarity]7. Explain the difference between rule-based, case-based and model-based reasoning techniques. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "8. Define the concept of a planning system and how it differs from classical search techniques. [Familiarity]8. Define the concept of a planning system and how it differs from classical search techniques. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "9. Describe the differences between planning as search, operator-based planning, and propositional planning,9. Describe the differences between planning as search, operator-based planning, and propositional planning,providing examples of domains where each is most applicable. [Familiarity]providing examples of domains where each is most applicable. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "10. Explain the distinction between monotonic and non-monotonic inference. [Familiarity]10. Explain the distinction between monotonic and non-monotonic inference. ",
           "mastery": "No",
           "num": "9"
         }
      ]}
      ,
      {"title": "Reasoning Under Uncertainty",
       "intro": "",
       "topics": [
         { "content": "Review of basic probability (",
           "num": "0",
           "addressed": "No"
,
           "xrefs": " {DS_Discrete_Probability}{DS/Discrete Probability})"         },
         { "content": "Random variables and probability distributions",
           "num": "1",
           "subtopics": [         { "content": "Axioms of probability",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Probabilistic inference",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Bayes’ Rule",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Conditional Independence",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Knowledge representations",
           "num": "3",
           "subtopics": [         { "content": "Bayesian Networks. Exact inference and its complexity. Randomized sampling (Monte Carlo) methods (e.g. Gibbs sampling)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Markov Networks",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Relational probability models",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Hidden Markov Models",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Decision Theory",
           "num": "4",
           "subtopics": [         { "content": "Preferences and utility functions",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Maximizing expected utility",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Apply Bayes’ rule to determine the probability of a hypothesis given evidence. [Usage]Apply Bayes’ rule to determine the probability of a hypothesis given evidence. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain how conditional independence assertions allow for greater efficiency of probabilistic systems.Explain how conditional independence assertions allow for greater efficiency of probabilistic systems.[Assessment]",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Identify examples of knowledge representations for reasoning under uncertainty. [Familiarity]Identify examples of knowledge representations for reasoning under uncertainty. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "State the complexity of exact inference. Identify methods for approximate inference. [Familiarity]State the complexity of exact inference. Identify methods for approximate inference. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Design and implement at least one knowledge representation for reasoning under uncertainty. [Usage]Design and implement at least one knowledge representation for reasoning under uncertainty. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Describe the complexities of temporal probabilistic reasoning. [Familiarity]Describe the complexities of temporal probabilistic reasoning. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Design and implement an HMM as one example of a temporal probabilistic system. [Usage]Design and implement an HMM as one example of a temporal probabilistic system. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Describe the relationship between preferences and utility functions. [Familiarity]Describe the relationship between preferences and utility functions. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Explain how utility functions and probabilistic reasoning can be combined to make rational decisions.Explain how utility functions and probabilistic reasoning can be combined to make rational decisions.[Assessment]",
           "mastery": "No",
           "num": "8"
         }
      ]}
      ,
      {"title": "Agents",
       "intro": "cross-reference {HCI/Collaboration and Communication} ",
       "topics": [
         { "content": "Definitions of agents",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Agent architectures (e.g., reactive, layered, cognitive)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Agent theory",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Rationality, game theory",
           "num": "3",
           "subtopics": [         { "content": "Decision-theoretic agents",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Markov decision processes (MDP)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Software agents, personal assistants, and information access",
           "num": "4",
           "subtopics": [         { "content": "Collaborative agents",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Information-gathering agents",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Believable agents (synthetic characters, modeling emotions in agents)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Learning agents",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Multi-agent systems",
           "num": "6",
           "subtopics": [         { "content": "Collaborating agents",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Agent teams",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Competitive agents (e.g., auctions, voting)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Swarm systems and biologically inspired models",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "List the defining characteristics of an intelligent agent. [Familiarity]List the defining characteristics of an intelligent agent. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Characterize and contrast the standard agent architectures. [Assessment]Characterize and contrast the standard agent architectures. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe the applications of agent theory to domains such as software agents, personal assistants, andDescribe the applications of agent theory to domains such as software agents, personal assistants, andbelievable agents. [Familiarity]believable agents. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe the primary paradigms used by learning agents. [Familiarity]Describe the primary paradigms used by learning agents. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Demonstrate using appropriate examples how multi-agent systems support agent interaction. [Usage]Demonstrate using appropriate examples how multi-agent systems support agent interaction. ",
           "mastery": "No",
           "num": "4"
         }
      ]}
      ,
      {"title": "Natural Language Processing",
       "intro": "cross-reference {HCI/New Interactive Technologies} ",
       "topics": [
         { "content": "Deterministic and stochastic grammars",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Parsing algorithms",
           "num": "1",
           "subtopics": [         { "content": "CFGs and chart parsers (e.g. CYK)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Probabilistic CFGs and weighted CYK",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Representing meaning / Semantics",
           "num": "2",
           "subtopics": [         { "content": "Logic-based knowledge representations",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Semantic roles",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Temporal representations",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Beliefs, desires, and intentions",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Corpus-based methods",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "N-grams and HMMs",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Smoothing and backoff",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Examples of use: POS tagging and morphology",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Information retrieval (",
           "num": "7",
           "subtopics": [         { "content": "Vector space model (TF and IDF)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Precision and recall",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": " {IM_Information_Storage_and_Retrieval}{IM/Information Storage and Retrieval})"         },
         { "content": "Information extraction",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Language translation",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Text classification, categorization",
           "num": "10",
           "subtopics": [         { "content": "Bag of words model",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Define and contrast deterministic and stochastic grammars, providing examples to show the adequacy ofDefine and contrast deterministic and stochastic grammars, providing examples to show the adequacy ofeach. [Assessment]each. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Simulate, apply, or implement classic and stochastic algorithms for parsing natural language. [Usage]Simulate, apply, or implement classic and stochastic algorithms for parsing natural language. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Identify the challenges of representing meaning. [Familiarity]Identify the challenges of representing meaning. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "List the advantages of using standard corpora. Identify examples of current corpora for a variety of NLPList the advantages of using standard corpora. Identify examples of current corpora for a variety of NLPtasks. [Familiarity]tasks. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Identify techniques for information retrieval, language translation, and text classification. [Familiarity]Identify techniques for information retrieval, language translation, and text classification. ",
           "mastery": "No",
           "num": "4"
         }
      ]}
      ,
      {"title": "Advanced Machine Learning",
       "intro": "",
       "topics": [
         { "content": "Definition and examples of broad variety of machine learning tasks",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "General statistical-based learning, parameter estimation (maximum likelihood)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Inductive logic programming (ILP)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Supervised learning",
           "num": "3",
           "subtopics": [         { "content": "Learning decision trees",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Learning neural networks",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Support vector machines (SVMs)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Ensembles",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Nearest-neighbor algorithms",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Unsupervised Learning and clustering",
           "num": "6",
           "subtopics": [         { "content": "EM",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "K-means",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Self-organizing maps",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Semi-supervised learning",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Learning graphical models (",
           "num": "8",
           "addressed": "No"
,
           "xrefs": " {IS_Reasoning_under_Uncertainty}{IS/Reasoning under Uncertainty})"         },
         { "content": "Performance evaluation (such as cross-validation, area under ROC curve)",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Learning theory",
           "num": "10",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "The problem of overfitting, the curse of dimensionality",
           "num": "11",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Reinforcement learning",
           "num": "12",
           "subtopics": [         { "content": "Exploration vs. exploitation trade-off",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Markov decision processes",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Value and policy iteration",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Application of Machine Learning algorithms to Data Mining (",
           "num": "13",
           "addressed": "No"
,
           "xrefs": " {IM_Data_Mining}{IM/Data Mining})"         }
      ],
      "skills": [
         {"content": "Explain the differences among the three main styles of learning: supervised, reinforcement, andExplain the differences among the three main styles of learning: supervised, reinforcement, andunsupervised. [Familiarity]unsupervised. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Implement simple algorithms for supervised learning, reinforcement learning, and unsupervised learning.Implement simple algorithms for supervised learning, reinforcement learning, and unsupervised learning.[Usage]",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Determine which of the three learning styles is appropriate to a particular problem domain. [Usage]Determine which of the three learning styles is appropriate to a particular problem domain. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Compare and contrast each of the following techniques, providing examples of when each strategy isCompare and contrast each of the following techniques, providing examples of when each strategy issuperior: decision trees, neural networks, and belief networks. [Assessment]superior: decision trees, neural networks, and belief networks. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Evaluate the performance of a simple learning system on a real-world dataset. [Assessment]Evaluate the performance of a simple learning system on a real-world dataset. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Characterize the state of the art in learning theory, including its achievements and its shortcomings.Characterize the state of the art in learning theory, including its achievements and its shortcomings.[Familiarity]",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Explain the problem of overfitting, along with techniques for detecting and managing the problem. [Usage]Explain the problem of overfitting, along with techniques for detecting and managing the problem. ",
           "mastery": "No",
           "num": "6"
         }
      ]}
      ,
      {"title": "Robotics",
       "intro": "",
       "topics": [
         { "content": "Overview: problems and progress",
           "num": "0",
           "subtopics": [         { "content": "State-of-the-art robot systems, including their sensors and an overview of their sensor processing",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Robot control architectures, e.g., deliberative vs. reactive control and Braitenberg vehicles",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "World modeling and world models",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Inherent uncertainty in sensing and in control",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Configuration space and environmental maps",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Interpreting uncertain sensor data",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Localizing and mapping",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Navigation and control",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Motion planning",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Multiple-robot coordination",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "List capabilities and limitations of today's state-of-the-art robot systems, including their sensors and theList capabilities and limitations of today's state-of-the-art robot systems, including their sensors and thecrucial sensor processing that informs those systems. [Familiarity]crucial sensor processing that informs those systems. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Integrate sensors, actuators, and software into a robot designed to undertake some task. [Usage]Integrate sensors, actuators, and software into a robot designed to undertake some task. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Program a robot to accomplish simple tasks using deliberative, reactive, and/or hybrid control architectures.Program a robot to accomplish simple tasks using deliberative, reactive, and/or hybrid control architectures.[Usage]",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Implement fundamental motion planning algorithms within a robot configuration space. [Usage]Implement fundamental motion planning algorithms within a robot configuration space. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Characterize the uncertainties associated with common robot sensors and actuators; articulate strategies forCharacterize the uncertainties associated with common robot sensors and actuators; articulate strategies formitigating these uncertainties. [Familiarity]mitigating these uncertainties. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "List the differences among robots' representations of their external environment, including their strengthsList the differences among robots' representations of their external environment, including their strengthsand shortcomings. [Familiarity]and shortcomings. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Compare and contrast at least three strategies for robot navigation within known and/or unknownCompare and contrast at least three strategies for robot navigation within known and/or unknownenvironments, including their strengths and shortcomings. [Assessment]environments, including their strengths and shortcomings. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Describe at least one approach for coordinating the actions and sensing of several robots to accomplish aDescribe at least one approach for coordinating the actions and sensing of several robots to accomplish asingle task. [Familiarity]single task. ",
           "mastery": "No",
           "num": "7"
         }
      ]}
      ,
      {"title": "Perception and Computer Vision",
       "intro": "",
       "topics": [
         { "content": "Computer vision",
           "num": "0",
           "subtopics": [         { "content": "Image acquisition, representation, processing and properties",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Shape representation, object recognition and segmentation",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Motion analysis",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Audio and speech recognition",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Modularity in recognition",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Approaches to pattern recognition (",
           "num": "3",
           "subtopics": [         { "content": "Classification algorithms and measures of classification quality",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         }, 
         { "content": "Statistical techniques",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         }],
           "addressed": "No"
,
           "xrefs": " {IS_Advanced_Machine_Learning}{IS/Advanced Machine Learning})"         }
      ],
      "skills": [
         {"content": "Summarize the importance of image and object recognition in AI and indicate several significantSummarize the importance of image and object recognition in AI and indicate several significantapplications of this technology. [Familiarity]applications of this technology. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "2. List at least three image-segmentation approaches, such as thresholding, edge-based and region-based2. List at least three image-segmentation approaches, such as thresholding, edge-based and region-basedalgorithms, along with their defining characteristics, strengths, and weaknesses. [Familiarity]algorithms, along with their defining characteristics, strengths, and weaknesses. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "3. Implement 2d object recognition based on contour- and/or region-based shape representations. [Usage]3. Implement 2d object recognition based on contour- and/or region-based shape representations. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "4. Distinguish the goals of sound-recognition, speech-recognition, and speaker-recognition and identify how4. Distinguish the goals of sound-recognition, speech-recognition, and speaker-recognition and identify howthe raw audio signal will be handled differently in each of these cases. [Familiarity]the raw audio signal will be handled differently in each of these cases. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "5. Provide at least two examples of a transformation of a data source from one sensory domain to another,5. Provide at least two examples of a transformation of a data source from one sensory domain to another,e.g., tactile data interpreted as single-band 2d images. [Familiarity]e.g., tactile data interpreted as single-band 2d images. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "6. Implement a feature-extraction algorithm on real data, e.g., an edge or corner detector for images or vectors6. Implement a feature-extraction algorithm on real data, e.g., an edge or corner detector for images or vectorsof Fourier coefficients describing a short slice of audio signal. [Usage]of Fourier coefficients describing a short slice of audio signal. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "7. Implement an algorithm combining features into higher-level percepts, e.g., a contour or polygon from7. Implement an algorithm combining features into higher-level percepts, e.g., a contour or polygon fromvisual primitives or phoneme hypotheses from an audio signal. [Usage]visual primitives or phoneme hypotheses from an audio signal. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "8. Implement a classification algorithm that segments input percepts into output categories and quantitatively8. Implement a classification algorithm that segments input percepts into output categories and quantitativelyevaluates the resulting classification. [Usage]evaluates the resulting classification. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "9. Evaluate the performance of the underlying feature-extraction, relative to at least one alternative possible9. Evaluate the performance of the underlying feature-extraction, relative to at least one alternative possibleapproach (whether implemented or not) in its contribution to the classification task (8), above.approach (whether implemented or not) in its contribution to the classification task (8), above.[Assessment]",
           "mastery": "No",
           "num": "8"
         },
         {"content": "10. Describe at least three classification approaches, their prerequisites for applicability, their strengths, and10. Describe at least three classification approaches, their prerequisites for applicability, their strengths, andtheir shortcomings. [Familiarity]their shortcomings. ",
           "mastery": "No",
           "num": "9"
         }
      ]}
]},
{"abbrev": "SP",
  "title": "Social Issues and Professional Practice",
  "intro": "While technical issues are central to the computing curriculum, they do not constitute a complete educational program in the field. Students must also be exposed to the larger societal context of computing to develop an understanding of the relevant social, ethical, legal and professional issues. This need to incorporate the study of these non-technical issues into the ACM curriculum was formally recognized in 1991, as can be seen from the following excerpt [2]: Undergraduates also need to understand the basic cultural, social, legal, and ethical issues inherent in the discipline of computing. They should understand where the discipline has been, where it is, and where it is heading. They should also understand their individual roles in this process, as well as appreciate the philosophical questions, technical problems, and aesthetic values that play an important part in the development of the discipline. Students also need to develop the ability to ask serious questions about the social impact of computing and to evaluate proposed answers to those questions. Future practitioners must be able to anticipate the impact of introducing a given product into a given environment. Will that product enhance or degrade the quality of life? What will the impact be upon individuals, groups, and institutions? Finally, students need to be aware of the basic legal rights of software and hardware vendors and users, and they also need to appreciate the ethical values that are the basis for those rights. Future practitioners must understand the responsibility that they will bear, and the possible consequences of failure. They must understand their own limitations as well as the limitations of their tools. All practitioners must make a long- term commitment to remaining current in their chosen specialties and in the discipline of computing as a whole. As technological advances continue to significantly impact the way we live and work, the critical importance of social issues and professional practice continues to increase; new computer-based products and venues pose ever more challenging problems each year. It is our students who must enter the workforce and academia with intentional regard for the identification and resolution of these problems.Computer science educators may opt to deliver this core and elective material in stand-alone courses, integrated into traditional technical and theoretical courses, or as special units in capstone and professional practice courses. The material in this familiarity area is best covered through a combination of one required course along with short modules in other courses. On the one hand, some units listed as Core Tier-1 (in particular, Social Context, Analytical Tools, Professional Ethics, and Intellectual Property) do not readily lend themselves to being covered in other traditional courses. Without a standalone course, it is difficult to cover these topics appropriately. On the other hand, if ethical and social considerations are covered only in the standalone course and not “in context,” it will reinforce the false notion that technical processes are void of these other relevant issues. Because of this broad relevance, it is important that several traditional courses include modules with case studies that analyze the ethical, legal, social and professional considerations in the context of the technical subject matter of the course. Courses in areas such as software engineering, databases, computer networks, information assurance and security, and introduction to computing provide obvious context for analysis of ethical issues. However, an ethics-related module could be developed for almost any course in the curriculum. It would be explicitly against the spirit of the recommendations to have only a standalone course. Running through all of the issues in this area is the need to speak to the computing practitioner’s responsibility to proactively address these issues by both moral and technical actions. The ethical issues discussed in any class should be directly related to and arise naturally from the subject matter of that class. Examples include a discussion in the database course of data aggregation or data mining, or a discussion in the software engineering course of the potential conflicts between obligations to the customer and obligations to the user and others affected by their work. Programming assignments built around applications such as controlling the movement of a laser during eye surgery can help to address the professional, ethical and social impacts of computing. Computing faculty who are unfamiliar with the content and/or pedagogy of applied ethics are urged to take advantage of the considerable resources from ACM, IEEE-CS, SIGCAS (special interest group on computers and society), and other organizations. It should be noted that the application of ethical analysis underlies every subsection of this Social and Professional knowledge area in computing. The ACM Code of Ethics and Professional Conduct (http://www.acm.org/about/code-of-ethics) provides guidelines that serve as the basis for the conduct of our professional work. The General Moral Imperatives provide an understanding of our commitment to personal responsibility, professional conduct, and our leadership roles. ",
  "units": [
      {"title": "Social Context",
       "intro": "Computers and the Internet, perhaps more than any other technologies, have transformed society over the past 75 years, with dramatic increases in human productivity; an explosion of options for news, entertainment, and communication; and fundamental breakthroughs in almost every branch of science and engineering. Social Context provides the foundation for all other SP knowledge units, especially Professional Ethics. Also see cross-referencing with Human-Computer Interaction (HCI) and Networking and Communication (NC) Knowledge Areas. ",
       "topics": [
         { "content": "Social implications of computing in a networked world (",
           "num": "0",
           "addressed": "No"
,
           "xrefs": " {HCI_Foundations}{HCI/Foundations}/social models; {IAS_Fundamental_Concepts}{IAS/Fundamental Concepts}/social issues)"         },
         { "content": "Impact of social media on individualism, collectivism and culture.",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Growth and control of the Internet (",
           "num": "2",
           "addressed": "No"
,
           "xrefs": " {NC_Introduction}{NC/Introduction}/organization of the Internet)"         },
         { "content": "Often referred to as the digital divide, differences in access to digital technology resources and its resulting ramifications for gender, class, ethnicity, geography, and/or underdeveloped countries.",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Accessibility issues, including legal requirements",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Context-aware computing (",
           "num": "5",
           "addressed": "No"
,
           "xrefs": " {HCI_New_Interactive_Technologies}{HCI/New Interactive Technologies}/non-mouse interfaces / ubiquitous and context-aware)"         }
      ],
      "skills": [
         {"content": "Describe positive and negative ways in which computer technology (networks, mobile computing, cloudDescribe positive and negative ways in which computer technology (networks, mobile computing, cloudcomputing) alters modes of social interaction at the personal level. [Familiarity]computing) alters modes of social interaction at the personal level. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Identify developers’ assumptions and values embedded in hardware and software design, especially as theyIdentify developers’ assumptions and values embedded in hardware and software design, especially as theypertain to usability for diverse populations including under-represented populations and the disabled.pertain to usability for diverse populations including under-represented populations and the disabled.[Familiarity]",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Interpret the social context of a given design and its implementation. [Familiarity]Interpret the social context of a given design and its implementation. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Evaluate the efficacy of a given design and implementation using empirical data. [Assessment]Evaluate the efficacy of a given design and implementation using empirical data. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Summarize the implications of social media on individualism versus collectivism and culture. [Usage]Summarize the implications of social media on individualism versus collectivism and culture. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Discuss how Internet access serves as a liberating force for people living under oppressive forms ofDiscuss how Internet access serves as a liberating force for people living under oppressive forms ofgovernment; explain how limits on Internet access are used as tools of political and social repression.government; explain how limits on Internet access are used as tools of political and social repression.[Familiarity]",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Analyze the pros and cons of reliance on computing in the implementation of democracy (e.g. delivery ofAnalyze the pros and cons of reliance on computing in the implementation of democracy (e.g. delivery ofsocial services, electronic voting). [Assessment]social services, electronic voting). ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Describe the impact of the under-representation of diverse populations in the computing profession (e.g.,Describe the impact of the under-representation of diverse populations in the computing profession (e.g.,industry culture, product diversity). [Familiarity]industry culture, product diversity). ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Explain the implications of context awareness in ubiquitous computing systems. [Familiarity]Explain the implications of context awareness in ubiquitous computing systems. ",
           "mastery": "No",
           "num": "8"
         }
      ]}
      ,
      {"title": "Analytical Tools",
       "intro": "Ethical theories and principles are the foundations of ethical analysis because they are the viewpoints from which guidance can be obtained along the pathway to a decision. Each theory emphasizes different points such as predicting the outcome and following one's duties to others in order to reach an ethically guided decision. However, in order for an ethical theory to be useful, the theory must be directed towards a common set of goals. Ethical principles are the common goals that each theory tries to achieve in order to be successful. These goals include beneficence, least harm, respect for autonomy, and justice. ",
       "topics": [
         { "content": "Ethical argumentation",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Ethical theories and decision-making",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Moral assumptions and values",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Evaluate stakeholder positions in a given situation. [Assessment]Evaluate stakeholder positions in a given situation. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Analyze basic logical fallacies in an argument. [Assessment]Analyze basic logical fallacies in an argument. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Analyze an argument to identify premises and conclusion. [Assessment]Analyze an argument to identify premises and conclusion. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Illustrate the use of example and analogy in ethical argument. [Usage]Illustrate the use of example and analogy in ethical argument. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Evaluate ethical/social tradeoffs in technical decisions. [Assessment]Evaluate ethical/social tradeoffs in technical decisions. ",
           "mastery": "No",
           "num": "4"
         }
      ]}
      ,
      {"title": "Professional Ethics",
       "intro": "Computer ethics is a branch of practical philosophy that deals with how computing professionals should make decisions regarding professional and social conduct. There are three primary influences: 1) an individual's own personal code; 2) any informal code of ethical behavior existing in the work place; and 3) exposure to formal codes of ethics. See cross-referencing with the Information Assurance and Security (IAS) Knowledge Area. ",
       "topics": [
         { "content": "Community values and the laws by which we live",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "The nature of professionalism including care, attention and discipline, fiduciary responsibility, and mentoring",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Keeping up-to-date as a computing professional in terms of familiarity, tools, skills, legal and professional framework as well as the ability to self-assess and progress in the computing field",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Professional certification, codes of ethics, conduct, and practice, such as the ACM/IEEE-CS, SE, AITP,",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "IFIP and international societies (",
           "num": "4",
           "addressed": "No"
,
           "xrefs": " {IAS_Fundamental_Concepts}{IAS/Fundamental Concepts}/ethical issues)"         },
         { "content": "Accountability, responsibility and liability (e.g. software correctness, reliability and safety, as well as ethical confidentiality of cybersecurity professionals)",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "The role of the computing professional in public policy",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Maintaining awareness of consequences",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Ethical dissent and whistle-blowing",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "The relationship between regional culture and ethical dilemmas",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Dealing with harassment and discrimination",
           "num": "10",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Forms of professional credentialing",
           "num": "11",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Acceptable use policies for computing in the workplace",
           "num": "12",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Ergonomics and healthy computing environments",
           "num": "13",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Time to market and cost considerations versus quality professional standards",
           "num": "14",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Identify ethical issues that arise in software development and determine how to address them technicallyIdentify ethical issues that arise in software development and determine how to address them technicallyand ethically. [Familiarity]and ethically. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Explain the ethical responsibility of ensuring software correctness, reliability and safety. [Familiarity]Explain the ethical responsibility of ensuring software correctness, reliability and safety. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe the mechanisms that typically exist for a professional to keep up-to-date. [Familiarity]Describe the mechanisms that typically exist for a professional to keep up-to-date. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe the strengths and weaknesses of relevant professional codes as expressions of professionalism andDescribe the strengths and weaknesses of relevant professional codes as expressions of professionalism andguides to decision-making. [Familiarity]guides to decision-making. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Analyze a global computing issue, observing the role of professionals and government officials inAnalyze a global computing issue, observing the role of professionals and government officials inmanaging this problem. [Assessment]managing this problem. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Evaluate the professional codes of ethics from the ACM, the IEEE Computer Society, and otherEvaluate the professional codes of ethics from the ACM, the IEEE Computer Society, and otherorganizations. [Assessment]organizations. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Describe ways in which professionals may contribute to public policy. [Familiarity]Describe ways in which professionals may contribute to public policy. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Describe the consequences of inappropriate professional behavior. [Familiarity]Describe the consequences of inappropriate professional behavior. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Identify progressive stages in a whistle-blowing incident. [Familiarity]Identify progressive stages in a whistle-blowing incident. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "Identify examples of how regional culture interplays with ethical dilemmas. [Familiarity]Identify examples of how regional culture interplays with ethical dilemmas. ",
           "mastery": "No",
           "num": "9"
         },
         {"content": "Investigate forms of harassment and discrimination and avenues of assistance. [Usage]Investigate forms of harassment and discrimination and avenues of assistance. ",
           "mastery": "No",
           "num": "10"
         },
         {"content": "Examine various forms of professional credentialing. [Usage]Examine various forms of professional credentialing. ",
           "mastery": "No",
           "num": "11"
         },
         {"content": "Explain the relationship between ergonomics in computing environments and people’s health. [Familiarity]Explain the relationship between ergonomics in computing environments and people’s health. ",
           "mastery": "No",
           "num": "12"
         },
         {"content": "Develop a computer usage/acceptable use policy with enforcement measures. [Assessment]Develop a computer usage/acceptable use policy with enforcement measures. ",
           "mastery": "No",
           "num": "13"
         },
         {"content": "Describe issues associated with industries’ push to focus on time to market versus enforcing qualityDescribe issues associated with industries’ push to focus on time to market versus enforcing qualityprofessional standards. [Familiarity]professional standards. ",
           "mastery": "No",
           "num": "14"
         }
      ]}
      ,
      {"title": "Intellectual Property",
       "intro": "Intellectual property refers to a range of intangible rights of ownership in an asset such as a software program. Each intellectual property \"right\" is itself an asset. The law provides different methods for protecting these rights of ownership based on their type. There are essentially four types of intellectual property rights relevant to software: patents, copyrights, trade secrets and trademarks. Each affords a different type of legal protection. See cross-referencing with the Information Management (IM) Knowledge Area. ",
       "topics": [
         { "content": "Philosophical foundations of intellectual property",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Intellectual property rights (",
           "num": "1",
           "addressed": "No"
,
           "xrefs": " {IM_Information_Storage_and_Retrieval}{IM/Information Storage and Retrieval}/intellectual property and protection)"         },
         { "content": "Intangible digital intellectual property (IDIP)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Legal foundations for intellectual property protection",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Digital rights management",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Copyrights, patents, trade secrets, trademarks",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Plagiarism",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Foundations of the open source movement",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Software piracy",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Discuss the philosophical bases of intellectual property. [Familiarity]Discuss the philosophical bases of intellectual property. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Discuss the rationale for the legal protection of intellectual property. [Familiarity]Discuss the rationale for the legal protection of intellectual property. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe legislation aimed at digital copyright infringements. [Familiarity]Describe legislation aimed at digital copyright infringements. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Critique legislation aimed at digital copyright infringements. [Assessment]Critique legislation aimed at digital copyright infringements. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Identify contemporary examples of intangible digital intellectual property. [Familiarity]Identify contemporary examples of intangible digital intellectual property. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Justify uses of copyrighted materials. [Assessment]Justify uses of copyrighted materials. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Evaluate the ethical issues inherent in various plagiarism detection mechanisms. [Assessment]Evaluate the ethical issues inherent in various plagiarism detection mechanisms. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Interpret the intent and implementation of software licensing. [Familiarity]Interpret the intent and implementation of software licensing. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Discuss the issues involved in securing software patents. [Familiarity]Discuss the issues involved in securing software patents. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "Characterize and contrast the concepts of copyright, patenting and trademarks. [Assessment]Characterize and contrast the concepts of copyright, patenting and trademarks. ",
           "mastery": "No",
           "num": "9"
         },
         {"content": "11. Identify the goals of the open source movement. [Familiarity]11. Identify the goals of the open source movement. ",
           "mastery": "No",
           "num": "10"
         },
         {"content": "12. Identify the global nature of software piracy. [Familiarity]12. Identify the global nature of software piracy. ",
           "mastery": "No",
           "num": "11"
         }
      ]}
      ,
      {"title": "Privacy and Civil Liberties",
       "intro": "Electronic information sharing highlights the need to balance privacy protections with information access. The ease of digital access to many types of data makes privacy rights and civil liberties more complex, differing among the variety of cultures worldwide. See cross- referencing with the Human-Computer Interaction (HCI), Information Assurance and Security (IAS), Information Management (IM), and Intelligent Systems (IS) Knowledge Areas. ",
       "topics": [
         { "content": "Philosophical foundations of privacy rights (",
           "num": "0",
           "addressed": "No"
,
           "xrefs": " {IS_Fundamental_Issues}{IS/Fundamental Issues}/philosophical issues)"         },
         { "content": "Legal foundations of privacy protection",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Privacy implications of widespread data collection for transactional databases, data warehouses, surveillance systems, and cloud computing (",
           "num": "2",
           "addressed": "No"
,
           "xrefs": " {IM_Database_Systems}{IM/Database Systems}/data independence; IM/Data Mining/data cleaning)"         },
         { "content": "Ramifications of differential privacy",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Technology-based solutions for privacy protection (",
           "num": "4",
           "addressed": "No"
,
           "xrefs": " {IAS_Threats_and_Attacks}{IAS/Threats and Attacks}/attacks on privacy and anonymity)"         },
         { "content": "Privacy legislation in areas of practice",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Civil liberties and cultural differences",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Freedom of expression and its limitations",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Discuss the philosophical basis for the legal protection of personal privacy. [Familiarity]Discuss the philosophical basis for the legal protection of personal privacy. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Evaluate solutions to privacy threats in transactional databases and data warehouses. [Assessment]Evaluate solutions to privacy threats in transactional databases and data warehouses. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe the role of data collection in the implementation of pervasive surveillance systems (e.g., RFID,Describe the role of data collection in the implementation of pervasive surveillance systems (e.g., RFID,face recognition, toll collection, mobile computing). [Familiarity]face recognition, toll collection, mobile computing). ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe the ramifications of differential privacy. [Familiarity]Describe the ramifications of differential privacy. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Investigate the impact of technological solutions to privacy problems. [Usage]Investigate the impact of technological solutions to privacy problems. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Critique the intent, potential value and implementation of various forms of privacy legislation.Critique the intent, potential value and implementation of various forms of privacy legislation.[Assessment]",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Identify strategies to enable appropriate freedom of expression. [Familiarity]Identify strategies to enable appropriate freedom of expression. ",
           "mastery": "No",
           "num": "6"
         }
      ]}
      ,
      {"title": "Professional Communication",
       "intro": "Professional communication conveys technical information to various audiences who may have very different goals and needs for that information. Effective professional communication of technical information is rarely an inherited gift, but rather needs to be taught in context throughout the undergraduate curriculum. See cross-referencing with Human-Computer Interaction (HCI) and Software Engineering (SE) Knowledge Areas. ",
       "topics": [
         { "content": "Reading, understanding and summarizing technical material, including source code and documentation",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Writing effective technical documentation and materials",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Dynamics of oral, written, and electronic team and group communication (",
           "num": "2",
           "addressed": "No"
,
           "xrefs": " {HCI_Collaboration_and_Communication}{HCI/Collaboration and Communication}/group communication; {SE_Project_Management}{SE/Project Management}/team participation)"         },
         { "content": "Communicating professionally with stakeholders",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Utilizing collaboration tools (",
           "num": "4",
           "addressed": "No"
,
           "xrefs": " {HCI_Collaboration_and_Communication}{HCI/Collaboration and Communication}/online communities; IS/Agents/collaborative agents)"         },
         { "content": "Dealing with cross-cultural environments (",
           "num": "5",
           "addressed": "No"
,
           "xrefs": " {HCI/User-Centered Design and Testing}/cross-cultural evaluation)"         },
         { "content": "Tradeoffs of competing risks in software projects, such as technology, structure/process, quality, people, market and financial (",
           "num": "6",
           "addressed": "No"
,
           "xrefs": " {SE_Software_Project_Management}{SE/Software Project Management}/Risk)"         }
      ],
      "skills": [
         {"content": "Write clear, concise, and accurate technical documents following well-defined standards for format and forWrite clear, concise, and accurate technical documents following well-defined standards for format and forincluding appropriate tables, figures, and references. [Usage]including appropriate tables, figures, and references. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Evaluate written technical documentation to detect problems of various kinds. [Assessment]Evaluate written technical documentation to detect problems of various kinds. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Develop and deliver a good quality formal presentation. [Assessment]Develop and deliver a good quality formal presentation. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Plan interactions (e.g. virtual, face-to-face, shared documents) with others in which they are able to getPlan interactions (e.g. virtual, face-to-face, shared documents) with others in which they are able to gettheir point across, and are also able to listen carefully and appreciate the points of others, even when theytheir point across, and are also able to listen carefully and appreciate the points of others, even when theydisagree, and are able to convey to others what they have heard. [Usage]disagree, and are able to convey to others what they have heard. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Describe the strengths and weaknesses of various forms of communication (e.g. virtual, face-to-face, sharedDescribe the strengths and weaknesses of various forms of communication (e.g. virtual, face-to-face, shareddocuments). [Familiarity]documents). ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Examine appropriate measures used to communicate with stakeholders involved in a project. [Usage]Examine appropriate measures used to communicate with stakeholders involved in a project. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Compare and contrast various collaboration tools. [Assessment]Compare and contrast various collaboration tools. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Discuss ways to influence performance and results in cross-cultural teams. [Familiarity]Discuss ways to influence performance and results in cross-cultural teams. ",
           "mastery": "No",
           "num": "7"
         },
         {"content": "Examine the tradeoffs and common sources of risk in software projects regarding technology,Examine the tradeoffs and common sources of risk in software projects regarding technology,structure/process, quality, people, market and financial. [Usage]structure/process, quality, people, market and financial. ",
           "mastery": "No",
           "num": "8"
         },
         {"content": "10. Evaluate personal strengths and weaknesses to work remotely as part of a multinational team. [Assessment]10. Evaluate personal strengths and weaknesses to work remotely as part of a multinational team. ",
           "mastery": "No",
           "num": "9"
         }
      ]}
      ,
      {"title": "Sustainability",
       "intro": "Sustainability is characterized by the United Nations [1] as “development that meets the needs of the present without compromising the ability of future generations to meet their own needs.\" Sustainability was first introduced in the CS2008 curricular guidelines. Topics in this emerging area can be naturally integrated into other familiarity areas and units, such as human-computer interaction and software evolution. See cross-referencing with the Human-Computer Interaction (HCI) and Software Engineering (SE) Knowledge Areas. ",
       "topics": [
         { "content": "Being a sustainable practitioner by taking into consideration cultural and environmental impacts of implementation decisions (e.g. organizational policies, economic viability, and resource consumption).",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Explore global social and environmental impacts of computer use and disposal (e-waste)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Environmental impacts of design choices in specific areas such as algorithms, operating systems, networks, databases, or human-computer interaction (",
           "num": "2",
           "addressed": "No"
,
           "xrefs": " {SE_Software_Evaluation}{SE/Software Evaluation}/software evolution; HCI/Design-Oriented HCI/sustainability)"         },
         { "content": "Guidelines for sustainable design standards",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Systemic effects of complex computer-mediated phenomena (e.g. telecommuting or web shopping)",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Pervasive computing; information processing integrated into everyday objects and activities, such as smart energy systems, social networking and feedback systems to promote sustainable behavior, transportation, environmental monitoring, citizen science and activism.",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Research on applications of computing to environmental issues, such as energy, pollution, resource usage, recycling and reuse, food management, farming and others.",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "The interdependence of the sustainability of software systems with social systems, including the knowledge and skills of its users, organizational processes and policies, and its societal context (e.g., market forces, government policies).",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Identify ways to be a sustainable practitioner. [Familiarity]Identify ways to be a sustainable practitioner. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Illustrate global social and environmental impacts of computer use and disposal (e-waste). [Usage]Illustrate global social and environmental impacts of computer use and disposal (e-waste). ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe the environmental impacts of design choices within the field of computing that relate to algorithmDescribe the environmental impacts of design choices within the field of computing that relate to algorithmdesign, operating system design, networking design, database design, etc. [Familiarity]design, operating system design, networking design, database design, etc. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Investigate the social and environmental impacts of new system designs through projects. [Usage]Investigate the social and environmental impacts of new system designs through projects. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Identify guidelines for sustainable IT design or deployment. [Familiarity]Identify guidelines for sustainable IT design or deployment. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "List the sustainable effects of telecommuting or web shopping. [Familiarity]List the sustainable effects of telecommuting or web shopping. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Investigate pervasive computing in areas such as smart energy systems, social networking, transportation,Investigate pervasive computing in areas such as smart energy systems, social networking, transportation,agriculture, supply-chain systems, environmental monitoring and citizen activism. [Usage]agriculture, supply-chain systems, environmental monitoring and citizen activism. ",
           "mastery": "No",
           "num": "6"
         },
         {"content": "Develop applications of computing and assess through research areas pertaining to environmental issuesDevelop applications of computing and assess through research areas pertaining to environmental issues(e.g. energy, pollution, resource usage, recycling and reuse, food management, farming). [Assessment](e.g. energy, pollution, resource usage, recycling and reuse, food management, farming). ",
           "mastery": "No",
           "num": "7"
         }
      ]}
      ,
      {"title": "History",
       "intro": "This history of computing is taught to provide a sense of how the rapid change in computing impacts society on a global scale. It is often taught in context with foundational concepts, such as system fundamentals and software developmental fundamentals. ",
       "topics": [
         { "content": "Prehistory—the world before 1946",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "History of computer hardware, software, networking (",
           "num": "1",
           "addressed": "No"
,
           "xrefs": " {AR_Digital_logic_and_digital_systems}{AR/Digital logic and digital systems}/history of computer architecture)"         },
         { "content": "Pioneers of computing",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "History of the Internet",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Identify significant continuing trends in the history of the computing field. [Familiarity]Identify significant continuing trends in the history of the computing field. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Identify the contributions of several pioneers in the computing field. [Familiarity]Identify the contributions of several pioneers in the computing field. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Discuss the historical context for several programming language paradigms. [Familiarity]Discuss the historical context for several programming language paradigms. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Compare daily life before and after the advent of personal computers and the Internet. [Assessment]Compare daily life before and after the advent of personal computers and the Internet. ",
           "mastery": "No",
           "num": "3"
         }
      ]}
      ,
      {"title": "Economies of Computing",
       "intro": "Economics of computing encompasses the metrics and best practices for personnel and financial management surrounding computer information systems. ",
       "topics": [
         { "content": "Monopolies and their economic implications",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Effect of skilled labor supply and demand on the quality of computing products",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Pricing strategies in the computing domain",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "The phenomenon of outsourcing and off-shoring software development; impacts on employment and on economics",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Consequences of globalization for the computer science profession",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Differences in access to computing resources and the possible effects thereof",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Cost/benefit analysis of jobs with considerations to manufacturing, hardware, software, and engineering implications",
           "num": "6",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Cost estimates versus actual costs in relation to total costs",
           "num": "7",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Entrepreneurship: prospects and pitfalls",
           "num": "8",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Network effect or demand-side economies of scale",
           "num": "9",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Use of engineering economics in dealing with finances",
           "num": "10",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Summarize the rationale for antimonopoly efforts. [Familiarity]Summarize the rationale for antimonopoly efforts. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Identify several ways in which the information technology industry is affected by shortages in the laborIdentify several ways in which the information technology industry is affected by shortages in the laborsupply. [Familiarity]supply. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Identify the evolution of pricing strategies for computing goods and services. [Familiarity]Identify the evolution of pricing strategies for computing goods and services. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Discuss the benefits, the drawbacks and the implications of off-shoring and outsourcing. [Familiarity]Discuss the benefits, the drawbacks and the implications of off-shoring and outsourcing. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Investigate and defend ways to address limitations on access to computing. [Usage]Investigate and defend ways to address limitations on access to computing. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Describe the economic benefits of network effects. [Familiarity]Describe the economic benefits of network effects. ",
           "mastery": "No",
           "num": "5"
         }
      ]}
      ,
      {"title": "Security Policies, Laws and Computer Crimes",
       "intro": "",
       "topics": [
         { "content": "Examples of computer crimes and legal redress for computer criminals (",
           "num": "0",
           "addressed": "No"
,
           "xrefs": " {IAS_Digital_Forensics}{IAS/Digital Forensics}/rules of evidence)"         },
         { "content": "Social engineering, identity theft and recovery (",
           "num": "1",
           "addressed": "No"
,
           "xrefs": " {HCI_Human_Factors_and_Security}{HCI/Human Factors and Security}/trust, privacy and deception)"         },
         { "content": "Issues surrounding the misuse of access and breaches in security",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Motivations and ramifications of cyber terrorism and criminal hacking, “cracking”",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Effects of malware, such as viruses, worms and Trojan horses",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Crime prevention strategies",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Security policies (",
           "num": "6",
           "addressed": "No"
,
           "xrefs": " {IAS_Security_Policy_and_Governance}{IAS/Security Policy and Governance}/policies)"         }
      ],
      "skills": [
         {"content": "List classic examples of computer crimes and social engineering incidents with societal impact.List classic examples of computer crimes and social engineering incidents with societal impact.[Familiarity]",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Identify laws that apply to computer crimes. [Familiarity]Identify laws that apply to computer crimes. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe the motivation and ramifications of cyber terrorism and criminal hacking. [Familiarity]Describe the motivation and ramifications of cyber terrorism and criminal hacking. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Examine the ethical and legal issues surrounding the misuse of access and various breaches in security.Examine the ethical and legal issues surrounding the misuse of access and various breaches in security.[Usage]",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Discuss the professional's role in security and the trade-offs involved. [Familiarity]Discuss the professional's role in security and the trade-offs involved. ",
           "mastery": "No",
           "num": "4"
         },
         {"content": "Investigate measures that can be taken by both individuals and organizations including governments toInvestigate measures that can be taken by both individuals and organizations including governments toprevent or mitigate the undesirable effects of computer crimes and identity theft. [Usage]prevent or mitigate the undesirable effects of computer crimes and identity theft. ",
           "mastery": "No",
           "num": "5"
         },
         {"content": "Write a company-wide security policy, which includes procedures for managing passwords and employeeWrite a company-wide security policy, which includes procedures for managing passwords and employeemonitoring. [Usage]monitoring. ",
           "mastery": "No",
           "num": "6"
         }
      ]}
]},
{"abbrev": "NC",
  "title": "Networking and Communication",
  "intro": "The Internet and computer networks are now ubiquitous and a growing number of computing activities strongly depend on the correct operation of the underlying network. Networks, both fixed and mobile, are a key part of the computing environment of today and tomorrow. Many computing applications that are used today would not be possible without networks. This dependency on the underlying network is likely to increase in the future. The high-level learning objective of this module can be summarized as follows: - Thinking in a networked world. The world is more and more interconnected and the use of networks will continue to increase. Students must understand how the networks behave and the key principles behind the organization and operation of the networks. - Continued study. The networking domain is rapidly evolving and a first networking course should be a starting point to other more advanced courses on network design, network management, sensor networks, etc. - Principles and practice interact. Networking is real and many of the design choices that involve networks also depend on practical constraints. Students should be exposed to these practical constraints by experimenting with networking, using tools, and writing networked software. There are different ways of organizing a networking course. Some educators prefer a top-down approach, i.e., the course starts from the applications and then explains reliable delivery, routing and forwarding. Other educators prefer a bottom-up approach where the students start with the lower layers and build their understanding of the network, transport and application layers later. ",
  "units": [
      {"title": "Introduction",
       "intro": "cross-reference {IAS/Network Security}, which discusses network security and its applications. ",
       "topics": [
         { "content": "Organization of the Internet (Internet Service Providers, Content Providers, etc.)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Switching techniques (e.g., circuit, packet)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Physical pieces of a network, including hosts, routers, switches, ISPs, wireless, LAN, access point, and firewalls",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Layering principles (encapsulation, multiplexing)",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Roles of the different layers (application, transport, network, datalink, physical)",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Articulate the organization of the Internet. [Familiarity]Articulate the organization of the Internet. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "List and define the appropriate network terminology. [Familiarity]List and define the appropriate network terminology. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe the layered structure of a typical networked architecture. [Familiarity]Describe the layered structure of a typical networked architecture. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Identify the different types of complexity in a network (edges, core, etc.). [Familiarity]Identify the different types of complexity in a network (edges, core, etc.). ",
           "mastery": "No",
           "num": "3"
         }
      ]}
      ,
      {"title": "Networked Applications",
       "intro": "",
       "topics": [
         { "content": "Naming and address schemes (DNS, IP addresses, Uniform Resource Identifiers, etc.)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Distributed applications (client/server, peer-to-peer, cloud, etc.)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "HTTP as an application layer protocol",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Multiplexing with TCP and UDP",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Socket APIs",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "List the differences and the relations between names and addresses in a network. [Familiarity]List the differences and the relations between names and addresses in a network. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Define the principles behind naming schemes and resource location. [Familiarity]Define the principles behind naming schemes and resource location. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Implement a simple client-server socket-based application. [Usage]Implement a simple client-server socket-based application. ",
           "mastery": "No",
           "num": "2"
         }
      ]}
      ,
      {"title": "Reliable Data Delivery",
       "intro": "This knowledge unit is related to Systems Fundamentals (SF). cross-reference {SF/State and State Machines} and {SF/Reliability through Redundancy}. ",
       "topics": [
         { "content": "Error control (retransmission techniques, timers)",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Flow control (acknowledgements, sliding window)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Performance issues (pipelining)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "TCP",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe the operation of reliable delivery protocols. [Familiarity]Describe the operation of reliable delivery protocols. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "List the factors that affect the performance of reliable delivery protocols. [Familiarity]List the factors that affect the performance of reliable delivery protocols. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Design and implement a simple reliable protocol. [Usage]Design and implement a simple reliable protocol. ",
           "mastery": "No",
           "num": "2"
         }
      ]}
      ,
      {"title": "Routing and Forwarding",
       "intro": "",
       "topics": [
         { "content": "Routing versus forwarding",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Static routing",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Internet Protocol (IP)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Scalability issues (hierarchical addressing)",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe the organization of the network layer. [Familiarity]Describe the organization of the network layer. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe how packets are forwarded in an IP network. [Familiarity]Describe how packets are forwarded in an IP network. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "List the scalability benefits of hierarchical addressing. [Familiarity]List the scalability benefits of hierarchical addressing. ",
           "mastery": "No",
           "num": "2"
         }
      ]}
      ,
      {"title": "Local Area Networks",
       "intro": "",
       "topics": [
         { "content": "Multiple Access Problem",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Common approaches to multiple access (exponential-backoff, time division multiplexing, etc)",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Local Area Networks",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Ethernet",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Switching",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe how frames are forwarded in an Ethernet network. [Familiarity]Describe how frames are forwarded in an Ethernet network. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe the differences between IP and Ethernet. [Familiarity]Describe the differences between IP and Ethernet. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Describe the interrelations between IP and Ethernet. [Familiarity]Describe the interrelations between IP and Ethernet. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Describe the steps used in one common approach to the multiple access problem. [Familiarity]Describe the steps used in one common approach to the multiple access problem. ",
           "mastery": "No",
           "num": "3"
         }
      ]}
      ,
      {"title": "Resource Allocation",
       "intro": "",
       "topics": [
         { "content": "Need for resource allocation",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Fixed allocation (TDM, FDM, WDM) versus dynamic allocation",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "End-to-end versus network assisted approaches",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Fairness",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Principles of congestion control",
           "num": "4",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Approaches to Congestion (e.g., Content Distribution Networks)",
           "num": "5",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe how resources can be allocated in a network. [Familiarity]Describe how resources can be allocated in a network. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe the congestion problem in a large network. [Familiarity]Describe the congestion problem in a large network. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Compare and contrast fixed and dynamic allocation techniques. [Assessment]Compare and contrast fixed and dynamic allocation techniques. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Compare and contrast current approaches to congestion. [Assessment]Compare and contrast current approaches to congestion. ",
           "mastery": "No",
           "num": "3"
         }
      ]}
      ,
      {"title": "Mobility",
       "intro": "",
       "topics": [
         { "content": "Principles of cellular networks",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "802.11 networks",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Issues in supporting mobile nodes (home agents)",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Describe the organization of a wireless network. [Familiarity]Describe the organization of a wireless network. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe how wireless networks support mobile users. [Familiarity]Describe how wireless networks support mobile users. ",
           "mastery": "No",
           "num": "1"
         }
      ]}
      ,
      {"title": "Social Networking",
       "intro": "",
       "topics": [
         { "content": "Social networks overview",
           "num": "0",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Example social network platforms",
           "num": "1",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Structure of social network graphs",
           "num": "2",
           "addressed": "No"
,
           "xrefs": ""         },
         { "content": "Social network analysis",
           "num": "3",
           "addressed": "No"
,
           "xrefs": ""         }
      ],
      "skills": [
         {"content": "Discuss the key principles (such as membership, trust) of social networking. [Familiarity]Discuss the key principles (such as membership, trust) of social networking. ",
           "mastery": "No",
           "num": "0"
         },
         {"content": "Describe how existing social networks operate. [Familiarity]Describe how existing social networks operate. ",
           "mastery": "No",
           "num": "1"
         },
         {"content": "Construct a social network graph from network data. [Usage]Construct a social network graph from network data. ",
           "mastery": "No",
           "num": "2"
         },
         {"content": "Analyze a social network to determine who the key people are. [Usage]Analyze a social network to determine who the key people are. ",
           "mastery": "No",
           "num": "3"
         },
         {"content": "Evaluate a given interpretation of a social network question with associated data. [Assessment]Evaluate a given interpretation of a social network question with associated data. ",
           "mastery": "No",
           "num": "4"
         }
      ]}
]}]
